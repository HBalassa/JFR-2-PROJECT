*** name and email***
git config --global user.name "Your Name"
git config --global user.email your@email.com

***Set up default branch name***
git config --global init.default branch name_of_the_default_branch

***Asking for help***
git command_name -h
git help command_name

***Clear console***
clear

***Change directory to look for files***
cd directory_name
/*NOTE: use '/' instead of '\'; and if a space occurs in the file or folder name, than put a '\' before it. e.g c:/Dokumentumok/MÅ±szaki\ Egyetem*/

***Create a repository from the actual directory***
git init

***Status of the repository***
git status

***Track a file***
/*in order to get git to know that something was changed inside the file*/
git add file_name
git add --all

***Untrack a file***
git rm --cached file_name
git restore --staged file_name

***Commit a file***
/*To save your files to a "history book"*/
git commit -m "here comes text you want to add to the current save"
/*When you commit the file instantly to the history book, not from the staged files:*/
git commit -a -m "here comes text you want to add to the current save"

***Check what was modified after commitment***
git diff

***Delete files***
git rm "file_name"

***Restore files***
git restore "file_name"

***Rename files***
git mv "original_file_name" "new_file_name"

***See your previous commits***
git log
git log --oneline

***Change the last commit's name***
git commit -m "new message" --amend

***See what actually changed***
git log -p
/*press q to exit*/

***Reset commit***
git reset commit_identifier_number

***Create additional branches***
git branch branch_name

***Get how many branch you have***
git branch

***Switch branches***
git switch branch_name
git switch -c branch_name /*create and switch*/

***Merge branches***
git merge -m "any message"

***Delete branch***
git branch -d branch_name

***Typical flow***
Main branch
debug branch
fixed
delete debug branch

***change branch and push***
git switch branch_name
git push -u origin branch_name