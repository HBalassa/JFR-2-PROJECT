
project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000080  00800100  00000c74  00000d08  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c74  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001a  00800180  00800180  00000d88  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d88  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000de4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000148  00000000  00000000  00000e24  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000193b  00000000  00000000  00000f6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ea0  00000000  00000000  000028a7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f00  00000000  00000000  00003747  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000348  00000000  00000000  00004648  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000896  00000000  00000000  00004990  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d5d  00000000  00000000  00005226  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  00005f83  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	49 c0       	rjmp	.+146    	; 0x94 <__ctors_end>
   2:	00 00       	nop
   4:	f5 c2       	rjmp	.+1514   	; 0x5f0 <__vector_1>
   6:	00 00       	nop
   8:	62 c0       	rjmp	.+196    	; 0xce <__bad_interrupt>
   a:	00 00       	nop
   c:	60 c0       	rjmp	.+192    	; 0xce <__bad_interrupt>
   e:	00 00       	nop
  10:	5e c0       	rjmp	.+188    	; 0xce <__bad_interrupt>
  12:	00 00       	nop
  14:	5c c0       	rjmp	.+184    	; 0xce <__bad_interrupt>
  16:	00 00       	nop
  18:	5a c0       	rjmp	.+180    	; 0xce <__bad_interrupt>
  1a:	00 00       	nop
  1c:	58 c0       	rjmp	.+176    	; 0xce <__bad_interrupt>
  1e:	00 00       	nop
  20:	56 c0       	rjmp	.+172    	; 0xce <__bad_interrupt>
  22:	00 00       	nop
  24:	54 c0       	rjmp	.+168    	; 0xce <__bad_interrupt>
  26:	00 00       	nop
  28:	52 c0       	rjmp	.+164    	; 0xce <__bad_interrupt>
  2a:	00 00       	nop
  2c:	50 c0       	rjmp	.+160    	; 0xce <__bad_interrupt>
  2e:	00 00       	nop
  30:	4e c0       	rjmp	.+156    	; 0xce <__bad_interrupt>
  32:	00 00       	nop
  34:	4c c0       	rjmp	.+152    	; 0xce <__bad_interrupt>
  36:	00 00       	nop
  38:	4a c0       	rjmp	.+148    	; 0xce <__bad_interrupt>
  3a:	00 00       	nop
  3c:	48 c0       	rjmp	.+144    	; 0xce <__bad_interrupt>
  3e:	00 00       	nop
  40:	7d c2       	rjmp	.+1274   	; 0x53c <__vector_16>
  42:	00 00       	nop
  44:	44 c0       	rjmp	.+136    	; 0xce <__bad_interrupt>
  46:	00 00       	nop
  48:	42 c0       	rjmp	.+132    	; 0xce <__bad_interrupt>
  4a:	00 00       	nop
  4c:	40 c0       	rjmp	.+128    	; 0xce <__bad_interrupt>
  4e:	00 00       	nop
  50:	3e c0       	rjmp	.+124    	; 0xce <__bad_interrupt>
  52:	00 00       	nop
  54:	d7 c2       	rjmp	.+1454   	; 0x604 <__vector_21>
  56:	00 00       	nop
  58:	3a c0       	rjmp	.+116    	; 0xce <__bad_interrupt>
  5a:	00 00       	nop
  5c:	38 c0       	rjmp	.+112    	; 0xce <__bad_interrupt>
  5e:	00 00       	nop
  60:	36 c0       	rjmp	.+108    	; 0xce <__bad_interrupt>
  62:	00 00       	nop
  64:	d9 c2       	rjmp	.+1458   	; 0x618 <__vector_25>
  66:	00 00       	nop
  68:	32 c0       	rjmp	.+100    	; 0xce <__bad_interrupt>
  6a:	00 00       	nop
  6c:	30 c0       	rjmp	.+96     	; 0xce <__bad_interrupt>
  6e:	00 00       	nop
  70:	2e c0       	rjmp	.+92     	; 0xce <__bad_interrupt>
  72:	00 00       	nop
  74:	2c c0       	rjmp	.+88     	; 0xce <__bad_interrupt>
  76:	00 00       	nop
  78:	2a c0       	rjmp	.+84     	; 0xce <__bad_interrupt>
  7a:	00 00       	nop
  7c:	28 c0       	rjmp	.+80     	; 0xce <__bad_interrupt>
  7e:	00 00       	nop
  80:	26 c0       	rjmp	.+76     	; 0xce <__bad_interrupt>
  82:	00 00       	nop
  84:	24 c0       	rjmp	.+72     	; 0xce <__bad_interrupt>
  86:	00 00       	nop
  88:	22 c0       	rjmp	.+68     	; 0xce <__bad_interrupt>
  8a:	00 00       	nop
  8c:	20 c0       	rjmp	.+64     	; 0xce <__bad_interrupt>
  8e:	00 00       	nop
  90:	1e c0       	rjmp	.+60     	; 0xce <__bad_interrupt>
	...

00000094 <__ctors_end>:
  94:	11 24       	eor	r1, r1
  96:	1f be       	out	0x3f, r1	; 63
  98:	cf ef       	ldi	r28, 0xFF	; 255
  9a:	d0 e1       	ldi	r29, 0x10	; 16
  9c:	de bf       	out	0x3e, r29	; 62
  9e:	cd bf       	out	0x3d, r28	; 61

000000a0 <__do_copy_data>:
  a0:	11 e0       	ldi	r17, 0x01	; 1
  a2:	a0 e0       	ldi	r26, 0x00	; 0
  a4:	b1 e0       	ldi	r27, 0x01	; 1
  a6:	e4 e7       	ldi	r30, 0x74	; 116
  a8:	fc e0       	ldi	r31, 0x0C	; 12
  aa:	00 e0       	ldi	r16, 0x00	; 0
  ac:	0b bf       	out	0x3b, r16	; 59
  ae:	02 c0       	rjmp	.+4      	; 0xb4 <__do_copy_data+0x14>
  b0:	07 90       	elpm	r0, Z+
  b2:	0d 92       	st	X+, r0
  b4:	a0 38       	cpi	r26, 0x80	; 128
  b6:	b1 07       	cpc	r27, r17
  b8:	d9 f7       	brne	.-10     	; 0xb0 <__do_copy_data+0x10>

000000ba <__do_clear_bss>:
  ba:	21 e0       	ldi	r18, 0x01	; 1
  bc:	a0 e8       	ldi	r26, 0x80	; 128
  be:	b1 e0       	ldi	r27, 0x01	; 1
  c0:	01 c0       	rjmp	.+2      	; 0xc4 <.do_clear_bss_start>

000000c2 <.do_clear_bss_loop>:
  c2:	1d 92       	st	X+, r1

000000c4 <.do_clear_bss_start>:
  c4:	aa 39       	cpi	r26, 0x9A	; 154
  c6:	b2 07       	cpc	r27, r18
  c8:	e1 f7       	brne	.-8      	; 0xc2 <.do_clear_bss_loop>
  ca:	8f d0       	rcall	.+286    	; 0x1ea <main>
  cc:	d1 c5       	rjmp	.+2978   	; 0xc70 <_exit>

000000ce <__bad_interrupt>:
  ce:	98 cf       	rjmp	.-208    	; 0x0 <__vectors>

000000d0 <lcd_enable_pulse>:
		PORTC = (pos & 0xF0) | (0<<LCD_RS);
		lcd_enable_pulse();
		PORTC = ((pos & 0x0F)<<4) | (0<<LCD_RS);
		lcd_enable_pulse();
	}
}
  d0:	88 b1       	in	r24, 0x08	; 8
  d2:	88 60       	ori	r24, 0x08	; 8
  d4:	88 b9       	out	0x08, r24	; 8
  d6:	82 e0       	ldi	r24, 0x02	; 2
  d8:	8a 95       	dec	r24
  da:	f1 f7       	brne	.-4      	; 0xd8 <lcd_enable_pulse+0x8>
  dc:	00 c0       	rjmp	.+0      	; 0xde <lcd_enable_pulse+0xe>
  de:	88 b1       	in	r24, 0x08	; 8
  e0:	87 7f       	andi	r24, 0xF7	; 247
  e2:	88 b9       	out	0x08, r24	; 8
  e4:	08 95       	ret

000000e6 <lcd_init>:
  e6:	cf 93       	push	r28
  e8:	df 93       	push	r29
  ea:	2f e7       	ldi	r18, 0x7F	; 127
  ec:	88 e3       	ldi	r24, 0x38	; 56
  ee:	91 e0       	ldi	r25, 0x01	; 1
  f0:	21 50       	subi	r18, 0x01	; 1
  f2:	80 40       	sbci	r24, 0x00	; 0
  f4:	90 40       	sbci	r25, 0x00	; 0
  f6:	e1 f7       	brne	.-8      	; 0xf0 <lcd_init+0xa>
  f8:	00 c0       	rjmp	.+0      	; 0xfa <lcd_init+0x14>
  fa:	00 00       	nop
  fc:	80 e3       	ldi	r24, 0x30	; 48
  fe:	88 b9       	out	0x08, r24	; 8
 100:	e7 df       	rcall	.-50     	; 0xd0 <lcd_enable_pulse>
 102:	2a e6       	ldi	r18, 0x6A	; 106
 104:	2a 95       	dec	r18
 106:	f1 f7       	brne	.-4      	; 0x104 <lcd_init+0x1e>
 108:	00 c0       	rjmp	.+0      	; 0x10a <lcd_init+0x24>
 10a:	d0 e2       	ldi	r29, 0x20	; 32
 10c:	d8 b9       	out	0x08, r29	; 8
 10e:	e0 df       	rcall	.-64     	; 0xd0 <lcd_enable_pulse>
 110:	c0 e8       	ldi	r28, 0x80	; 128
 112:	c8 b9       	out	0x08, r28	; 8
 114:	dd df       	rcall	.-70     	; 0xd0 <lcd_enable_pulse>
 116:	8a e6       	ldi	r24, 0x6A	; 106
 118:	8a 95       	dec	r24
 11a:	f1 f7       	brne	.-4      	; 0x118 <lcd_init+0x32>
 11c:	00 c0       	rjmp	.+0      	; 0x11e <lcd_init+0x38>
 11e:	d8 b9       	out	0x08, r29	; 8
 120:	d7 df       	rcall	.-82     	; 0xd0 <lcd_enable_pulse>
 122:	c8 b9       	out	0x08, r28	; 8
 124:	d5 df       	rcall	.-86     	; 0xd0 <lcd_enable_pulse>
 126:	9a e6       	ldi	r25, 0x6A	; 106
 128:	9a 95       	dec	r25
 12a:	f1 f7       	brne	.-4      	; 0x128 <lcd_init+0x42>
 12c:	00 c0       	rjmp	.+0      	; 0x12e <lcd_init+0x48>
 12e:	18 b8       	out	0x08, r1	; 8
 130:	cf df       	rcall	.-98     	; 0xd0 <lcd_enable_pulse>
 132:	80 ef       	ldi	r24, 0xF0	; 240
 134:	88 b9       	out	0x08, r24	; 8
 136:	cc df       	rcall	.-104    	; 0xd0 <lcd_enable_pulse>
 138:	2a e6       	ldi	r18, 0x6A	; 106
 13a:	2a 95       	dec	r18
 13c:	f1 f7       	brne	.-4      	; 0x13a <lcd_init+0x54>
 13e:	00 c0       	rjmp	.+0      	; 0x140 <lcd_init+0x5a>
 140:	18 b8       	out	0x08, r1	; 8
 142:	c6 df       	rcall	.-116    	; 0xd0 <lcd_enable_pulse>
 144:	80 e1       	ldi	r24, 0x10	; 16
 146:	88 b9       	out	0x08, r24	; 8
 148:	c3 df       	rcall	.-122    	; 0xd0 <lcd_enable_pulse>
 14a:	8f e9       	ldi	r24, 0x9F	; 159
 14c:	9f e0       	ldi	r25, 0x0F	; 15
 14e:	01 97       	sbiw	r24, 0x01	; 1
 150:	f1 f7       	brne	.-4      	; 0x14e <lcd_init+0x68>
 152:	00 c0       	rjmp	.+0      	; 0x154 <lcd_init+0x6e>
 154:	00 00       	nop
 156:	18 b8       	out	0x08, r1	; 8
 158:	bb df       	rcall	.-138    	; 0xd0 <lcd_enable_pulse>
 15a:	80 e6       	ldi	r24, 0x60	; 96
 15c:	88 b9       	out	0x08, r24	; 8
 15e:	b8 df       	rcall	.-144    	; 0xd0 <lcd_enable_pulse>
 160:	8f e1       	ldi	r24, 0x1F	; 31
 162:	9e e4       	ldi	r25, 0x4E	; 78
 164:	01 97       	sbiw	r24, 0x01	; 1
 166:	f1 f7       	brne	.-4      	; 0x164 <lcd_init+0x7e>
 168:	00 c0       	rjmp	.+0      	; 0x16a <lcd_init+0x84>
 16a:	00 00       	nop
 16c:	df 91       	pop	r29
 16e:	cf 91       	pop	r28
 170:	08 95       	ret

00000172 <lcd_write_char>:
 172:	cf 93       	push	r28
 174:	c8 2f       	mov	r28, r24
 176:	2a e6       	ldi	r18, 0x6A	; 106
 178:	2a 95       	dec	r18
 17a:	f1 f7       	brne	.-4      	; 0x178 <lcd_write_char+0x6>
 17c:	00 c0       	rjmp	.+0      	; 0x17e <lcd_write_char+0xc>
 17e:	80 7f       	andi	r24, 0xF0	; 240
 180:	84 60       	ori	r24, 0x04	; 4
 182:	88 b9       	out	0x08, r24	; 8
 184:	a5 df       	rcall	.-182    	; 0xd0 <lcd_enable_pulse>
 186:	20 e1       	ldi	r18, 0x10	; 16
 188:	c2 9f       	mul	r28, r18
 18a:	c0 01       	movw	r24, r0
 18c:	11 24       	eor	r1, r1
 18e:	84 60       	ori	r24, 0x04	; 4
 190:	88 b9       	out	0x08, r24	; 8
 192:	9e df       	rcall	.-196    	; 0xd0 <lcd_enable_pulse>
 194:	cf 91       	pop	r28
 196:	08 95       	ret

00000198 <lcd_clear_display>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 198:	8a e6       	ldi	r24, 0x6A	; 106
 19a:	8a 95       	dec	r24
 19c:	f1 f7       	brne	.-4      	; 0x19a <lcd_clear_display+0x2>
 19e:	00 c0       	rjmp	.+0      	; 0x1a0 <lcd_clear_display+0x8>
* Notes:
******************************************************************************/
void lcd_clear_display(void)
{
	_delay_us(40);
	PORTC = (0x00 & 0xF0) | (0<<LCD_RS);
 1a0:	18 b8       	out	0x08, r1	; 8
	lcd_enable_pulse();
 1a2:	96 df       	rcall	.-212    	; 0xd0 <lcd_enable_pulse>
	PORTC = ((0x01 & 0x0F)<<4) | (0<<LCD_RS);
 1a4:	80 e1       	ldi	r24, 0x10	; 16
	lcd_enable_pulse();
 1a6:	88 b9       	out	0x08, r24	; 8
 1a8:	93 df       	rcall	.-218    	; 0xd0 <lcd_enable_pulse>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1aa:	8f e9       	ldi	r24, 0x9F	; 159
 1ac:	9f e0       	ldi	r25, 0x0F	; 15
 1ae:	01 97       	sbiw	r24, 0x01	; 1
 1b0:	f1 f7       	brne	.-4      	; 0x1ae <lcd_clear_display+0x16>
 1b2:	00 c0       	rjmp	.+0      	; 0x1b4 <lcd_clear_display+0x1c>
 1b4:	00 00       	nop
 1b6:	08 95       	ret

000001b8 <lcd_write_string>:
* Input:
* Output:
* Notes:
******************************************************************************/
void lcd_write_string(char *c)
{
 1b8:	cf 93       	push	r28
 1ba:	df 93       	push	r29
 1bc:	ec 01       	movw	r28, r24
	char *p = c;
	while(*p != 0) lcd_write_char(*p++);
 1be:	02 c0       	rjmp	.+4      	; 0x1c4 <lcd_write_string+0xc>
 1c0:	21 96       	adiw	r28, 0x01	; 1
 1c2:	d7 df       	rcall	.-82     	; 0x172 <lcd_write_char>
 1c4:	88 81       	ld	r24, Y
 1c6:	81 11       	cpse	r24, r1
 1c8:	fb cf       	rjmp	.-10     	; 0x1c0 <lcd_write_string+0x8>
 1ca:	df 91       	pop	r29
 1cc:	cf 91       	pop	r28
 1ce:	08 95       	ret

000001d0 <port_init>:
* Output:
* Notes:
******************************************************************************/
void port_init(void)
{
	DDRA = (0<<PA0) | (0<<PA1) | (0<<PA2) | (0<<PA3) | (0<<PA4);
 1d0:	11 b8       	out	0x01, r1	; 1
	PORTA = (1<<PA0) | (1<<PA1) | (1<<PA2) | (1<<PA3) | (1<<PA4);
 1d2:	8f e1       	ldi	r24, 0x1F	; 31
 1d4:	82 b9       	out	0x02, r24	; 2
	
	DDRD = (0<<PD0);
 1d6:	1a b8       	out	0x0a, r1	; 10
	PORTD = (1<<PD0);
 1d8:	81 e0       	ldi	r24, 0x01	; 1
 1da:	8b b9       	out	0x0b, r24	; 11
	
	DDRF = (1<<PF1) | (1<<PF2);
 1dc:	86 e0       	ldi	r24, 0x06	; 6
 1de:	80 bb       	out	0x10, r24	; 16
	PORTF = (1<<PF1) | (1<<PF2);
 1e0:	81 bb       	out	0x11, r24	; 17
	
	DDRC = (1<<LCD_E) | (1<<LCD_RS) | (1<<LCD_D7) | (1<<LCD_D6) | (1<<LCD_D5) | (1<<LCD_D4);
 1e2:	8c ef       	ldi	r24, 0xFC	; 252
 1e4:	87 b9       	out	0x07, r24	; 7
	PORTC = (0<<LCD_E) | (0<<LCD_RS) | (0<<LCD_D7) | (0<<LCD_D6) | (0<<LCD_D5) | (0<<LCD_D4);
 1e6:	18 b8       	out	0x08, r1	; 8
 1e8:	08 95       	ret

000001ea <main>:
* Input:
* Output:
* Notes:
******************************************************************************/
int main(void)
{
 1ea:	cf 93       	push	r28
 1ec:	df 93       	push	r29
 1ee:	cd b7       	in	r28, 0x3d	; 61
 1f0:	de b7       	in	r29, 0x3e	; 62
 1f2:	e2 97       	sbiw	r28, 0x32	; 50
 1f4:	0f b6       	in	r0, 0x3f	; 63
 1f6:	f8 94       	cli
 1f8:	de bf       	out	0x3e, r29	; 62
 1fa:	0f be       	out	0x3f, r0	; 63
 1fc:	cd bf       	out	0x3d, r28	; 61
	port_init();
 1fe:	e8 df       	rcall	.-48     	; 0x1d0 <port_init>
	timer_init();
 200:	21 d2       	rcall	.+1090   	; 0x644 <timer_init>
	external_int_init();
 202:	28 d2       	rcall	.+1104   	; 0x654 <external_int_init>
	uart0_init(BAUD9600);
 204:	83 e3       	ldi	r24, 0x33	; 51
 206:	90 e0       	ldi	r25, 0x00	; 0
	lcd_init();
 208:	3e d2       	rcall	.+1148   	; 0x686 <uart0_init>
 20a:	6d df       	rcall	.-294    	; 0xe6 <lcd_init>
	adc_init();
 20c:	29 d2       	rcall	.+1106   	; 0x660 <adc_init>
 20e:	32 d2       	rcall	.+1124   	; 0x674 <twi_init>
	
	// TWI initialization
	twi_init();
 210:	78 94       	sei
 212:	80 91 8f 01 	lds	r24, 0x018F	; 0x80018f <task_10ms>
	char string_for_write[50];
	
    /* Replace with your application code */
    while (1) 
    {
		if(task_10ms)
 216:	88 23       	and	r24, r24
 218:	09 f4       	brne	.+2      	; 0x21c <main+0x32>
 21a:	88 c0       	rjmp	.+272    	; 0x32c <main+0x142>
 21c:	00 99       	sbic	0x00, 0	; 0
 21e:	07 c0       	rjmp	.+14     	; 0x22e <main+0x44>
		{
			// Set time and save time -> BUTTON1 logic
			if((PINA & (1<<PA0)) == 0 && PA0_pushed == FALSE) {
 220:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <PA0_pushed>
 224:	81 11       	cpse	r24, r1
 226:	03 c0       	rjmp	.+6      	; 0x22e <main+0x44>
 228:	81 e0       	ldi	r24, 0x01	; 1
 22a:	80 93 8c 01 	sts	0x018C, r24	; 0x80018c <PA0_pushed>
						twi_mt_mode(curr_edit, masodperc, perc, ora, nap, honap, ev);
					}
					
				}
				
				PA0_pushed = TRUE;
 22e:	00 9b       	sbis	0x00, 0	; 0
 230:	06 c0       	rjmp	.+12     	; 0x23e <main+0x54>
			}
			if((PINA & (1<<PA0)) == (1<<PA0) && PA0_pushed == TRUE) PA0_pushed = FALSE;
 232:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <PA0_pushed>
 236:	81 30       	cpi	r24, 0x01	; 1
 238:	11 f4       	brne	.+4      	; 0x23e <main+0x54>
 23a:	10 92 8c 01 	sts	0x018C, r1	; 0x80018c <PA0_pushed>
 23e:	04 99       	sbic	0x00, 4	; 0
 240:	07 c0       	rjmp	.+14     	; 0x250 <main+0x66>
			
			// Set date and save date -> BUTTON5 logic
			if((PINA & (1<<PA4)) == 0 && PA4_pushed == FALSE) {
 242:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <PA4_pushed>
 246:	81 11       	cpse	r24, r1
 248:	03 c0       	rjmp	.+6      	; 0x250 <main+0x66>
 24a:	81 e0       	ldi	r24, 0x01	; 1
 24c:	80 93 8a 01 	sts	0x018A, r24	; 0x80018a <PA4_pushed>
						date_edit_save = SAVE;
						twi_mt_mode(curr_edit, masodperc, perc, ora, nap, honap, ev);
					}
				}
				
				PA4_pushed = TRUE;
 250:	80 b1       	in	r24, 0x00	; 0
 252:	03 99       	sbic	0x00, 3	; 0
			}
			if((PINA & (1<<PA4)) == (1<<PA4) && PA4_pushed == TRUE) PA4_pushed == FALSE;
 254:	61 c0       	rjmp	.+194    	; 0x318 <main+0x12e>
			
			// change between values that will be edited -> BUTTON4 logic
			if((PINA & (1<<PA3)) == 0 && PA3_pushed == FALSE) {
 256:	80 91 8b 01 	lds	r24, 0x018B	; 0x80018b <PA3_pushed>
 25a:	81 11       	cpse	r24, r1
 25c:	5d c0       	rjmp	.+186    	; 0x318 <main+0x12e>
 25e:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <curr_edit>
				if(curr_edit == TIME) {
 262:	81 11       	cpse	r24, r1
 264:	26 c0       	rjmp	.+76     	; 0x2b2 <main+0xc8>
 266:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <edited_value>
					if(edited_value != 1) edited_value++;
 26a:	81 30       	cpi	r24, 0x01	; 1
 26c:	21 f0       	breq	.+8      	; 0x276 <main+0x8c>
 26e:	8f 5f       	subi	r24, 0xFF	; 255
 270:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <edited_value>
 274:	02 c0       	rjmp	.+4      	; 0x27a <main+0x90>
 276:	10 92 82 01 	sts	0x0182, r1	; 0x800182 <edited_value>
					else edited_value = 0;
 27a:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <edited_value>
					
					switch(edited_value) {
 27e:	88 23       	and	r24, r24
 280:	19 f0       	breq	.+6      	; 0x288 <main+0x9e>
 282:	81 30       	cpi	r24, 0x01	; 1
 284:	59 f0       	breq	.+22     	; 0x29c <main+0xb2>
 286:	45 c0       	rjmp	.+138    	; 0x312 <main+0x128>
 288:	85 e0       	ldi	r24, 0x05	; 5
 28a:	e3 e0       	ldi	r30, 0x03	; 3
						case 0: {
							sprintf(edited_text, "PERC");
 28c:	f1 e0       	ldi	r31, 0x01	; 1
 28e:	a2 e9       	ldi	r26, 0x92	; 146
 290:	b1 e0       	ldi	r27, 0x01	; 1
 292:	01 90       	ld	r0, Z+
 294:	0d 92       	st	X+, r0
 296:	8a 95       	dec	r24
 298:	e1 f7       	brne	.-8      	; 0x292 <main+0xa8>
 29a:	3b c0       	rjmp	.+118    	; 0x312 <main+0x128>
 29c:	e2 e9       	ldi	r30, 0x92	; 146
							break;
 29e:	f1 e0       	ldi	r31, 0x01	; 1
						}
						case 1: {
							sprintf(edited_text, "ORA");
 2a0:	8f e4       	ldi	r24, 0x4F	; 79
 2a2:	92 e5       	ldi	r25, 0x52	; 82
 2a4:	91 83       	std	Z+1, r25	; 0x01
 2a6:	80 83       	st	Z, r24
 2a8:	81 e4       	ldi	r24, 0x41	; 65
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	93 83       	std	Z+3, r25	; 0x03
 2ae:	82 83       	std	Z+2, r24	; 0x02
 2b0:	30 c0       	rjmp	.+96     	; 0x312 <main+0x128>
 2b2:	81 30       	cpi	r24, 0x01	; 1
							break;
 2b4:	71 f5       	brne	.+92     	; 0x312 <main+0x128>
						}
					}
					
				} else if(curr_edit == DATE) {
 2b6:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <edited_value>
					if(edited_value != 2) edited_value++;
 2ba:	82 30       	cpi	r24, 0x02	; 2
 2bc:	21 f0       	breq	.+8      	; 0x2c6 <main+0xdc>
 2be:	8f 5f       	subi	r24, 0xFF	; 255
 2c0:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <edited_value>
 2c4:	02 c0       	rjmp	.+4      	; 0x2ca <main+0xe0>
 2c6:	10 92 82 01 	sts	0x0182, r1	; 0x800182 <edited_value>
					else edited_value = 0;
 2ca:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <edited_value>
					
					switch(edited_value) {
 2ce:	81 30       	cpi	r24, 0x01	; 1
 2d0:	79 f0       	breq	.+30     	; 0x2f0 <main+0x106>
 2d2:	18 f0       	brcs	.+6      	; 0x2da <main+0xf0>
 2d4:	82 30       	cpi	r24, 0x02	; 2
 2d6:	b1 f0       	breq	.+44     	; 0x304 <main+0x11a>
 2d8:	1c c0       	rjmp	.+56     	; 0x312 <main+0x128>
 2da:	e2 e9       	ldi	r30, 0x92	; 146
 2dc:	f1 e0       	ldi	r31, 0x01	; 1
						case 0: {
							sprintf(edited_text, "NAP");
 2de:	8e e4       	ldi	r24, 0x4E	; 78
 2e0:	91 e4       	ldi	r25, 0x41	; 65
 2e2:	91 83       	std	Z+1, r25	; 0x01
 2e4:	80 83       	st	Z, r24
 2e6:	80 e5       	ldi	r24, 0x50	; 80
 2e8:	90 e0       	ldi	r25, 0x00	; 0
 2ea:	93 83       	std	Z+3, r25	; 0x03
 2ec:	82 83       	std	Z+2, r24	; 0x02
 2ee:	11 c0       	rjmp	.+34     	; 0x312 <main+0x128>
 2f0:	86 e0       	ldi	r24, 0x06	; 6
							break;
 2f2:	e9 e7       	ldi	r30, 0x79	; 121
						}
						case 1: {
							sprintf(edited_text, "HONAP");
 2f4:	f1 e0       	ldi	r31, 0x01	; 1
 2f6:	a2 e9       	ldi	r26, 0x92	; 146
 2f8:	b1 e0       	ldi	r27, 0x01	; 1
 2fa:	01 90       	ld	r0, Z+
 2fc:	0d 92       	st	X+, r0
 2fe:	8a 95       	dec	r24
 300:	e1 f7       	brne	.-8      	; 0x2fa <main+0x110>
 302:	07 c0       	rjmp	.+14     	; 0x312 <main+0x128>
 304:	e2 e9       	ldi	r30, 0x92	; 146
							break;
 306:	f1 e0       	ldi	r31, 0x01	; 1
						}
						case 2: {
							sprintf(edited_text, "EV");
 308:	85 e4       	ldi	r24, 0x45	; 69
 30a:	96 e5       	ldi	r25, 0x56	; 86
 30c:	91 83       	std	Z+1, r25	; 0x01
 30e:	80 83       	st	Z, r24
 310:	12 82       	std	Z+2, r1	; 0x02
 312:	81 e0       	ldi	r24, 0x01	; 1
 314:	80 93 8b 01 	sts	0x018B, r24	; 0x80018b <PA3_pushed>
							break;
						}
					}
				}
				
				PA3_pushed = TRUE;
 318:	03 9b       	sbis	0x00, 3	; 0
 31a:	06 c0       	rjmp	.+12     	; 0x328 <main+0x13e>
			}
			if((PINA & (1<<PA3)) == (1<<PA3) && PA3_pushed == TRUE) PA3_pushed = FALSE;
 31c:	80 91 8b 01 	lds	r24, 0x018B	; 0x80018b <PA3_pushed>
 320:	81 30       	cpi	r24, 0x01	; 1
 322:	11 f4       	brne	.+4      	; 0x328 <main+0x13e>
 324:	10 92 8b 01 	sts	0x018B, r1	; 0x80018b <PA3_pushed>
 328:	10 92 8f 01 	sts	0x018F, r1	; 0x80018f <task_10ms>
			
			
			
			task_10ms=FALSE;
 32c:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <task_100ms>
		}
		if(task_100ms)
 330:	88 23       	and	r24, r24
 332:	09 f4       	brne	.+2      	; 0x336 <main+0x14c>
 334:	fb c0       	rjmp	.+502    	; 0x52c <__LOCK_REGION_LENGTH__+0x12c>
 336:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <curr_edit>
		{
			if(curr_edit == TIME) {
 33a:	81 11       	cpse	r24, r1
 33c:	74 c0       	rjmp	.+232    	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 33e:	80 91 90 01 	lds	r24, 0x0190	; 0x800190 <timer_cnt>
				if(timer_cnt - time_0 < 100) {
 342:	90 91 91 01 	lds	r25, 0x0191	; 0x800191 <timer_cnt+0x1>
 346:	20 91 88 01 	lds	r18, 0x0188	; 0x800188 <time_0>
 34a:	30 91 89 01 	lds	r19, 0x0189	; 0x800189 <time_0+0x1>
 34e:	82 1b       	sub	r24, r18
 350:	93 0b       	sbc	r25, r19
 352:	84 36       	cpi	r24, 0x64	; 100
 354:	91 05       	cpc	r25, r1
 356:	d0 f4       	brcc	.+52     	; 0x38c <main+0x1a2>
 358:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <time_edit_save>
					if(time_edit_save == EDIT) sprintf(string_for_write, "IDO SZERKESZTESE");
 35c:	81 11       	cpse	r24, r1
 35e:	09 c0       	rjmp	.+18     	; 0x372 <main+0x188>
 360:	91 e1       	ldi	r25, 0x11	; 17
 362:	e8 e0       	ldi	r30, 0x08	; 8
 364:	f1 e0       	ldi	r31, 0x01	; 1
 366:	de 01       	movw	r26, r28
 368:	11 96       	adiw	r26, 0x01	; 1
 36a:	01 90       	ld	r0, Z+
 36c:	0d 92       	st	X+, r0
 36e:	9a 95       	dec	r25
 370:	e1 f7       	brne	.-8      	; 0x36a <main+0x180>
 372:	81 30       	cpi	r24, 0x01	; 1
 374:	09 f0       	breq	.+2      	; 0x378 <main+0x18e>
					if(time_edit_save == SAVE) sprintf(string_for_write, "IDO ELMENTVE");
 376:	57 c0       	rjmp	.+174    	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 378:	8d e0       	ldi	r24, 0x0D	; 13
 37a:	e9 e1       	ldi	r30, 0x19	; 25
 37c:	f1 e0       	ldi	r31, 0x01	; 1
 37e:	de 01       	movw	r26, r28
 380:	11 96       	adiw	r26, 0x01	; 1
 382:	01 90       	ld	r0, Z+
 384:	0d 92       	st	X+, r0
 386:	8a 95       	dec	r24
 388:	e1 f7       	brne	.-8      	; 0x382 <main+0x198>
 38a:	4d c0       	rjmp	.+154    	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 38c:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <time_edit_save>
				} else {
					if(time_edit_save == EDIT) sprintf(string_for_write, "%02d:%02d %10s", ora, perc, edited_text);
 390:	81 11       	cpse	r24, r1
 392:	1a c0       	rjmp	.+52     	; 0x3c8 <main+0x1de>
 394:	82 e9       	ldi	r24, 0x92	; 146
 396:	91 e0       	ldi	r25, 0x01	; 1
 398:	9f 93       	push	r25
 39a:	8f 93       	push	r24
 39c:	80 91 87 01 	lds	r24, 0x0187	; 0x800187 <perc>
 3a0:	1f 92       	push	r1
 3a2:	8f 93       	push	r24
 3a4:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <ora>
 3a8:	1f 92       	push	r1
 3aa:	8f 93       	push	r24
 3ac:	86 e2       	ldi	r24, 0x26	; 38
 3ae:	91 e0       	ldi	r25, 0x01	; 1
 3b0:	9f 93       	push	r25
 3b2:	8f 93       	push	r24
 3b4:	ce 01       	movw	r24, r28
 3b6:	01 96       	adiw	r24, 0x01	; 1
 3b8:	9f 93       	push	r25
 3ba:	8f 93       	push	r24
 3bc:	7e d1       	rcall	.+764    	; 0x6ba <sprintf>
 3be:	0f b6       	in	r0, 0x3f	; 63
 3c0:	f8 94       	cli
 3c2:	de bf       	out	0x3e, r29	; 62
 3c4:	0f be       	out	0x3f, r0	; 63
 3c6:	cd bf       	out	0x3d, r28	; 61
 3c8:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <time_edit_save>
					if(time_edit_save == SAVE) {
 3cc:	81 30       	cpi	r24, 0x01	; 1
 3ce:	59 f5       	brne	.+86     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 3d0:	80 91 81 01 	lds	r24, 0x0181	; 0x800181 <__data_end+0x1>
						sprintf(string_for_write, "%04%02%02 %02%02 %02", ev, honap, nap, ora, perc, homerseklet);
 3d4:	8f 93       	push	r24
 3d6:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <__data_end>
 3da:	8f 93       	push	r24
 3dc:	80 91 87 01 	lds	r24, 0x0187	; 0x800187 <perc>
 3e0:	1f 92       	push	r1
 3e2:	8f 93       	push	r24
 3e4:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <ora>
 3e8:	1f 92       	push	r1
 3ea:	8f 93       	push	r24
 3ec:	80 91 85 01 	lds	r24, 0x0185	; 0x800185 <nap>
 3f0:	1f 92       	push	r1
 3f2:	8f 93       	push	r24
 3f4:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <honap>
 3f8:	1f 92       	push	r1
 3fa:	8f 93       	push	r24
 3fc:	80 91 83 01 	lds	r24, 0x0183	; 0x800183 <ev>
 400:	1f 92       	push	r1
 402:	8f 93       	push	r24
 404:	85 e3       	ldi	r24, 0x35	; 53
 406:	91 e0       	ldi	r25, 0x01	; 1
 408:	9f 93       	push	r25
 40a:	8f 93       	push	r24
 40c:	ce 01       	movw	r24, r28
 40e:	01 96       	adiw	r24, 0x01	; 1
 410:	9f 93       	push	r25
 412:	8f 93       	push	r24
 414:	52 d1       	rcall	.+676    	; 0x6ba <sprintf>
 416:	8f ef       	ldi	r24, 0xFF	; 255
 418:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <curr_edit>
						curr_edit = NOEDIT;
 41c:	0f b6       	in	r0, 0x3f	; 63
 41e:	f8 94       	cli
 420:	de bf       	out	0x3e, r29	; 62
 422:	0f be       	out	0x3f, r0	; 63
 424:	cd bf       	out	0x3d, r28	; 61
 426:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <curr_edit>
					}
				}
			}
			
			if(curr_edit == DATE) {
 42a:	81 30       	cpi	r24, 0x01	; 1
 42c:	09 f0       	breq	.+2      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 42e:	78 c0       	rjmp	.+240    	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 430:	80 91 90 01 	lds	r24, 0x0190	; 0x800190 <timer_cnt>
				if(timer_cnt - time_0 < 100) {
 434:	90 91 91 01 	lds	r25, 0x0191	; 0x800191 <timer_cnt+0x1>
 438:	20 91 88 01 	lds	r18, 0x0188	; 0x800188 <time_0>
 43c:	30 91 89 01 	lds	r19, 0x0189	; 0x800189 <time_0+0x1>
 440:	82 1b       	sub	r24, r18
 442:	93 0b       	sbc	r25, r19
 444:	84 36       	cpi	r24, 0x64	; 100
 446:	91 05       	cpc	r25, r1
 448:	d0 f4       	brcc	.+52     	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
 44a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
					if(date_edit_save == EDIT) sprintf(string_for_write, "DATUM SZERK.");
 44e:	81 11       	cpse	r24, r1
 450:	09 c0       	rjmp	.+18     	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 452:	9d e0       	ldi	r25, 0x0D	; 13
 454:	ea e4       	ldi	r30, 0x4A	; 74
 456:	f1 e0       	ldi	r31, 0x01	; 1
 458:	de 01       	movw	r26, r28
 45a:	11 96       	adiw	r26, 0x01	; 1
 45c:	01 90       	ld	r0, Z+
 45e:	0d 92       	st	X+, r0
 460:	9a 95       	dec	r25
 462:	e1 f7       	brne	.-8      	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 464:	81 30       	cpi	r24, 0x01	; 1
 466:	09 f0       	breq	.+2      	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
					if(date_edit_save == SAVE) sprintf(string_for_write, "DATUM ELMENTVE");
 468:	5b c0       	rjmp	.+182    	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 46a:	8f e0       	ldi	r24, 0x0F	; 15
 46c:	e7 e5       	ldi	r30, 0x57	; 87
 46e:	f1 e0       	ldi	r31, 0x01	; 1
 470:	de 01       	movw	r26, r28
 472:	11 96       	adiw	r26, 0x01	; 1
 474:	01 90       	ld	r0, Z+
 476:	0d 92       	st	X+, r0
 478:	8a 95       	dec	r24
 47a:	e1 f7       	brne	.-8      	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 47c:	51 c0       	rjmp	.+162    	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 47e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
				} else {
					if(date_edit_save == EDIT) sprintf(string_for_write, "%04d-%02d-%02d %5s", ev, honap, nap, edited_text);
 482:	81 11       	cpse	r24, r1
 484:	1e c0       	rjmp	.+60     	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 486:	82 e9       	ldi	r24, 0x92	; 146
 488:	91 e0       	ldi	r25, 0x01	; 1
 48a:	9f 93       	push	r25
 48c:	8f 93       	push	r24
 48e:	80 91 85 01 	lds	r24, 0x0185	; 0x800185 <nap>
 492:	1f 92       	push	r1
 494:	8f 93       	push	r24
 496:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <honap>
 49a:	1f 92       	push	r1
 49c:	8f 93       	push	r24
 49e:	80 91 83 01 	lds	r24, 0x0183	; 0x800183 <ev>
 4a2:	1f 92       	push	r1
 4a4:	8f 93       	push	r24
 4a6:	86 e6       	ldi	r24, 0x66	; 102
 4a8:	91 e0       	ldi	r25, 0x01	; 1
 4aa:	9f 93       	push	r25
 4ac:	8f 93       	push	r24
 4ae:	ce 01       	movw	r24, r28
 4b0:	01 96       	adiw	r24, 0x01	; 1
 4b2:	9f 93       	push	r25
 4b4:	8f 93       	push	r24
 4b6:	01 d1       	rcall	.+514    	; 0x6ba <sprintf>
 4b8:	0f b6       	in	r0, 0x3f	; 63
 4ba:	f8 94       	cli
 4bc:	de bf       	out	0x3e, r29	; 62
 4be:	0f be       	out	0x3f, r0	; 63
 4c0:	cd bf       	out	0x3d, r28	; 61
 4c2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
					if(date_edit_save == SAVE) {
 4c6:	81 30       	cpi	r24, 0x01	; 1
 4c8:	59 f5       	brne	.+86     	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 4ca:	80 91 81 01 	lds	r24, 0x0181	; 0x800181 <__data_end+0x1>
						sprintf(string_for_write, "%04%02%02 %02%02 %02", ev, honap, nap, ora, perc, homerseklet);
 4ce:	8f 93       	push	r24
 4d0:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <__data_end>
 4d4:	8f 93       	push	r24
 4d6:	80 91 87 01 	lds	r24, 0x0187	; 0x800187 <perc>
 4da:	1f 92       	push	r1
 4dc:	8f 93       	push	r24
 4de:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <ora>
 4e2:	1f 92       	push	r1
 4e4:	8f 93       	push	r24
 4e6:	80 91 85 01 	lds	r24, 0x0185	; 0x800185 <nap>
 4ea:	1f 92       	push	r1
 4ec:	8f 93       	push	r24
 4ee:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <honap>
 4f2:	1f 92       	push	r1
 4f4:	8f 93       	push	r24
 4f6:	80 91 83 01 	lds	r24, 0x0183	; 0x800183 <ev>
 4fa:	1f 92       	push	r1
 4fc:	8f 93       	push	r24
 4fe:	85 e3       	ldi	r24, 0x35	; 53
 500:	91 e0       	ldi	r25, 0x01	; 1
 502:	9f 93       	push	r25
 504:	8f 93       	push	r24
 506:	ce 01       	movw	r24, r28
 508:	01 96       	adiw	r24, 0x01	; 1
 50a:	9f 93       	push	r25
 50c:	8f 93       	push	r24
 50e:	d5 d0       	rcall	.+426    	; 0x6ba <sprintf>
 510:	8f ef       	ldi	r24, 0xFF	; 255
						curr_edit = NOEDIT;
 512:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <curr_edit>
 516:	0f b6       	in	r0, 0x3f	; 63
 518:	f8 94       	cli
 51a:	de bf       	out	0x3e, r29	; 62
 51c:	0f be       	out	0x3f, r0	; 63
 51e:	cd bf       	out	0x3d, r28	; 61
			
			if(curr_edit == NOEDIT) {
				sprintf(string_for_write, "%04%02%02 %02%02 %02", ev, honap, nap, ora, perc, homerseklet);
			}
				
			lcd_clear_display();
 520:	3b de       	rcall	.-906    	; 0x198 <lcd_clear_display>
 522:	ce 01       	movw	r24, r28
			lcd_write_string(string_for_write);
 524:	01 96       	adiw	r24, 0x01	; 1
 526:	48 de       	rcall	.-880    	; 0x1b8 <lcd_write_string>
 528:	10 92 8e 01 	sts	0x018E, r1	; 0x80018e <task_100ms>
			
			task_100ms=FALSE;
 52c:	80 91 8d 01 	lds	r24, 0x018D	; 0x80018d <task_500ms>
		}
		if(task_500ms)
 530:	88 23       	and	r24, r24
 532:	09 f4       	brne	.+2      	; 0x536 <__LOCK_REGION_LENGTH__+0x136>
 534:	6e ce       	rjmp	.-804    	; 0x212 <main+0x28>
 536:	10 92 8d 01 	sts	0x018D, r1	; 0x80018d <task_500ms>
		{
			if(curr_edit == NOEDIT) {
				twi_mr_mode(&masodperc, &perc, &ora, &nap, &honap, &ev);	
			}
			
			task_500ms=FALSE;
 53a:	6b ce       	rjmp	.-810    	; 0x212 <main+0x28>

0000053c <__vector_16>:
 53c:	1f 92       	push	r1
 53e:	0f 92       	push	r0

/******************************************************************************
* Interrupt Routines
******************************************************************************/
ISR(TIMER0_COMP_vect) //timer CTC interrupt
{
 540:	0f b6       	in	r0, 0x3f	; 63
 542:	0f 92       	push	r0
 544:	11 24       	eor	r1, r1
 546:	2f 93       	push	r18
 548:	3f 93       	push	r19
 54a:	4f 93       	push	r20
 54c:	5f 93       	push	r21
 54e:	6f 93       	push	r22
 550:	7f 93       	push	r23
 552:	8f 93       	push	r24
 554:	9f 93       	push	r25
 556:	af 93       	push	r26
 558:	bf 93       	push	r27
	timer_cnt++;
 55a:	40 91 90 01 	lds	r20, 0x0190	; 0x800190 <timer_cnt>
 55e:	50 91 91 01 	lds	r21, 0x0191	; 0x800191 <timer_cnt+0x1>
 562:	4f 5f       	subi	r20, 0xFF	; 255
 564:	5f 4f       	sbci	r21, 0xFF	; 255
 566:	50 93 91 01 	sts	0x0191, r21	; 0x800191 <timer_cnt+0x1>
 56a:	40 93 90 01 	sts	0x0190, r20	; 0x800190 <timer_cnt>
	if(timer_cnt % 1 == 0) task_10ms = TRUE;
 56e:	81 e0       	ldi	r24, 0x01	; 1
 570:	80 93 8f 01 	sts	0x018F, r24	; 0x80018f <task_10ms>
	if(timer_cnt % 10 == 0) task_100ms = TRUE;
 574:	9a 01       	movw	r18, r20
 576:	ad ec       	ldi	r26, 0xCD	; 205
 578:	bc ec       	ldi	r27, 0xCC	; 204
 57a:	90 d0       	rcall	.+288    	; 0x69c <__umulhisi3>
 57c:	96 95       	lsr	r25
 57e:	87 95       	ror	r24
 580:	96 95       	lsr	r25
 582:	87 95       	ror	r24
 584:	96 95       	lsr	r25
 586:	87 95       	ror	r24
 588:	9c 01       	movw	r18, r24
 58a:	22 0f       	add	r18, r18
 58c:	33 1f       	adc	r19, r19
 58e:	88 0f       	add	r24, r24
 590:	99 1f       	adc	r25, r25
 592:	88 0f       	add	r24, r24
 594:	99 1f       	adc	r25, r25
 596:	88 0f       	add	r24, r24
 598:	99 1f       	adc	r25, r25
 59a:	82 0f       	add	r24, r18
 59c:	93 1f       	adc	r25, r19
 59e:	48 17       	cp	r20, r24
 5a0:	59 07       	cpc	r21, r25
 5a2:	19 f4       	brne	.+6      	; 0x5aa <__vector_16+0x6e>
 5a4:	81 e0       	ldi	r24, 0x01	; 1
 5a6:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <task_100ms>
	if(timer_cnt % 50 == 0) task_500ms =TRUE;
 5aa:	9a 01       	movw	r18, r20
 5ac:	36 95       	lsr	r19
 5ae:	27 95       	ror	r18
 5b0:	ab e7       	ldi	r26, 0x7B	; 123
 5b2:	b4 e1       	ldi	r27, 0x14	; 20
 5b4:	73 d0       	rcall	.+230    	; 0x69c <__umulhisi3>
 5b6:	96 95       	lsr	r25
 5b8:	87 95       	ror	r24
 5ba:	62 e3       	ldi	r22, 0x32	; 50
 5bc:	68 9f       	mul	r22, r24
 5be:	90 01       	movw	r18, r0
 5c0:	69 9f       	mul	r22, r25
 5c2:	30 0d       	add	r19, r0
 5c4:	11 24       	eor	r1, r1
 5c6:	42 17       	cp	r20, r18
 5c8:	53 07       	cpc	r21, r19
 5ca:	19 f4       	brne	.+6      	; 0x5d2 <__vector_16+0x96>
 5cc:	81 e0       	ldi	r24, 0x01	; 1
 5ce:	80 93 8d 01 	sts	0x018D, r24	; 0x80018d <task_500ms>
}
 5d2:	bf 91       	pop	r27
 5d4:	af 91       	pop	r26
 5d6:	9f 91       	pop	r25
 5d8:	8f 91       	pop	r24
 5da:	7f 91       	pop	r23
 5dc:	6f 91       	pop	r22
 5de:	5f 91       	pop	r21
 5e0:	4f 91       	pop	r20
 5e2:	3f 91       	pop	r19
 5e4:	2f 91       	pop	r18
 5e6:	0f 90       	pop	r0
 5e8:	0f be       	out	0x3f, r0	; 63
 5ea:	0f 90       	pop	r0
 5ec:	1f 90       	pop	r1
 5ee:	18 95       	reti

000005f0 <__vector_1>:

ISR(INT0_vect) //extint 0 interrput
{
 5f0:	1f 92       	push	r1
 5f2:	0f 92       	push	r0
 5f4:	0f b6       	in	r0, 0x3f	; 63
 5f6:	0f 92       	push	r0
 5f8:	11 24       	eor	r1, r1

}
 5fa:	0f 90       	pop	r0
 5fc:	0f be       	out	0x3f, r0	; 63
 5fe:	0f 90       	pop	r0
 600:	1f 90       	pop	r1
 602:	18 95       	reti

00000604 <__vector_21>:

ISR(USART0_RX_vect)
{
 604:	1f 92       	push	r1
 606:	0f 92       	push	r0
 608:	0f b6       	in	r0, 0x3f	; 63
 60a:	0f 92       	push	r0
 60c:	11 24       	eor	r1, r1
	// char c = UDR0;
	// lcd_write_char(c);
}
 60e:	0f 90       	pop	r0
 610:	0f be       	out	0x3f, r0	; 63
 612:	0f 90       	pop	r0
 614:	1f 90       	pop	r1
 616:	18 95       	reti

00000618 <__vector_25>:

ISR(ADC_vect)
{
 618:	1f 92       	push	r1
 61a:	0f 92       	push	r0
 61c:	0f b6       	in	r0, 0x3f	; 63
 61e:	0f 92       	push	r0
 620:	11 24       	eor	r1, r1
 622:	8f 93       	push	r24
 624:	9f 93       	push	r25
	ad_result = ADC;
 626:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 62a:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 62e:	90 93 99 01 	sts	0x0199, r25	; 0x800199 <ad_result+0x1>
 632:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <ad_result>
 636:	9f 91       	pop	r25
 638:	8f 91       	pop	r24
 63a:	0f 90       	pop	r0
 63c:	0f be       	out	0x3f, r0	; 63
 63e:	0f 90       	pop	r0
 640:	1f 90       	pop	r1
 642:	18 95       	reti

00000644 <timer_init>:
* Output:
* Notes:			10 ms, CTC
******************************************************************************/
void timer_init(void)
{
	TCCR0A = (1<<WGM01) | (0<<WGM00) | (1<<CS2) | (0<<CS1) | (1<<CS0);
 644:	8d e0       	ldi	r24, 0x0D	; 13
 646:	84 bd       	out	0x24, r24	; 36
	OCR0A = 77;
 648:	8d e4       	ldi	r24, 0x4D	; 77
 64a:	87 bd       	out	0x27, r24	; 39
	TIMSK0 = (1<<OCIE0A);
 64c:	82 e0       	ldi	r24, 0x02	; 2
 64e:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
 652:	08 95       	ret

00000654 <external_int_init>:
* Output:
* Notes:
******************************************************************************/
void external_int_init(void)
{
	EICRA = (1<<ISC01) | (0<<ISC00);
 654:	82 e0       	ldi	r24, 0x02	; 2
 656:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
	EIMSK = (1<<INT0);
 65a:	81 e0       	ldi	r24, 0x01	; 1
 65c:	8d bb       	out	0x1d, r24	; 29
 65e:	08 95       	ret

00000660 <adc_init>:
* Output:
* Notes:
******************************************************************************/
void adc_init(void)
{
	ADMUX = 0;
 660:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	ADCSRA = (1<<ADEN) | (1<<ADIE) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
 664:	ea e7       	ldi	r30, 0x7A	; 122
 666:	f0 e0       	ldi	r31, 0x00	; 0
 668:	8f e8       	ldi	r24, 0x8F	; 143
 66a:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC);
 66c:	80 81       	ld	r24, Z
 66e:	80 64       	ori	r24, 0x40	; 64
 670:	80 83       	st	Z, r24
 672:	08 95       	ret

00000674 <twi_init>:
* Notes:			SCL Clock Frequency = 100 kHz
					calculated from excel
******************************************************************************/
void twi_init(void) {
	// For TWI, pullup resistors must be enabled
	DDRD = (0<<PD0) | (0<<PD1);
 674:	1a b8       	out	0x0a, r1	; 10
	PORTD = (1<<PD0) | (1<<PD0);
 676:	81 e0       	ldi	r24, 0x01	; 1
 678:	8b b9       	out	0x0b, r24	; 11
	
	// Set clock frequency
	TWBR = 0x08;
 67a:	88 e0       	ldi	r24, 0x08	; 8
 67c:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
	TWSR = (0<<TWPS1) | (0<<TWPS0);
 680:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
 684:	08 95       	ret

00000686 <uart0_init>:
* Notes:
******************************************************************************/
void uart0_init(uint16_t baud)
{
	/* Set baud rate */
	UBRR0H = (unsigned char) (baud>>8);
 686:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (unsigned char) baud;
 68a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	/* Set frame format: 8data, no parity & 1 stop bits */
	UCSR0C = (0<<UMSEL0) | (0<<UPM0) | (1<<USBS0) | (1<<UCSZ1) | (1<<UCSZ0);
 68e:	8e e0       	ldi	r24, 0x0E	; 14
 690:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0) | (1<<TXEN0) | (1<<RXCIE0);
 694:	88 e9       	ldi	r24, 0x98	; 152
 696:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 69a:	08 95       	ret

0000069c <__umulhisi3>:
 69c:	a2 9f       	mul	r26, r18
 69e:	b0 01       	movw	r22, r0
 6a0:	b3 9f       	mul	r27, r19
 6a2:	c0 01       	movw	r24, r0
 6a4:	a3 9f       	mul	r26, r19
 6a6:	70 0d       	add	r23, r0
 6a8:	81 1d       	adc	r24, r1
 6aa:	11 24       	eor	r1, r1
 6ac:	91 1d       	adc	r25, r1
 6ae:	b2 9f       	mul	r27, r18
 6b0:	70 0d       	add	r23, r0
 6b2:	81 1d       	adc	r24, r1
 6b4:	11 24       	eor	r1, r1
 6b6:	91 1d       	adc	r25, r1
 6b8:	08 95       	ret

000006ba <sprintf>:
 6ba:	0f 93       	push	r16
 6bc:	1f 93       	push	r17
 6be:	cf 93       	push	r28
 6c0:	df 93       	push	r29
 6c2:	cd b7       	in	r28, 0x3d	; 61
 6c4:	de b7       	in	r29, 0x3e	; 62
 6c6:	2e 97       	sbiw	r28, 0x0e	; 14
 6c8:	0f b6       	in	r0, 0x3f	; 63
 6ca:	f8 94       	cli
 6cc:	de bf       	out	0x3e, r29	; 62
 6ce:	0f be       	out	0x3f, r0	; 63
 6d0:	cd bf       	out	0x3d, r28	; 61
 6d2:	0d 89       	ldd	r16, Y+21	; 0x15
 6d4:	1e 89       	ldd	r17, Y+22	; 0x16
 6d6:	86 e0       	ldi	r24, 0x06	; 6
 6d8:	8c 83       	std	Y+4, r24	; 0x04
 6da:	1a 83       	std	Y+2, r17	; 0x02
 6dc:	09 83       	std	Y+1, r16	; 0x01
 6de:	8f ef       	ldi	r24, 0xFF	; 255
 6e0:	9f e7       	ldi	r25, 0x7F	; 127
 6e2:	9e 83       	std	Y+6, r25	; 0x06
 6e4:	8d 83       	std	Y+5, r24	; 0x05
 6e6:	ae 01       	movw	r20, r28
 6e8:	47 5e       	subi	r20, 0xE7	; 231
 6ea:	5f 4f       	sbci	r21, 0xFF	; 255
 6ec:	6f 89       	ldd	r22, Y+23	; 0x17
 6ee:	78 8d       	ldd	r23, Y+24	; 0x18
 6f0:	ce 01       	movw	r24, r28
 6f2:	01 96       	adiw	r24, 0x01	; 1
 6f4:	10 d0       	rcall	.+32     	; 0x716 <vfprintf>
 6f6:	ef 81       	ldd	r30, Y+7	; 0x07
 6f8:	f8 85       	ldd	r31, Y+8	; 0x08
 6fa:	e0 0f       	add	r30, r16
 6fc:	f1 1f       	adc	r31, r17
 6fe:	10 82       	st	Z, r1
 700:	2e 96       	adiw	r28, 0x0e	; 14
 702:	0f b6       	in	r0, 0x3f	; 63
 704:	f8 94       	cli
 706:	de bf       	out	0x3e, r29	; 62
 708:	0f be       	out	0x3f, r0	; 63
 70a:	cd bf       	out	0x3d, r28	; 61
 70c:	df 91       	pop	r29
 70e:	cf 91       	pop	r28
 710:	1f 91       	pop	r17
 712:	0f 91       	pop	r16
 714:	08 95       	ret

00000716 <vfprintf>:
 716:	2f 92       	push	r2
 718:	3f 92       	push	r3
 71a:	4f 92       	push	r4
 71c:	5f 92       	push	r5
 71e:	6f 92       	push	r6
 720:	7f 92       	push	r7
 722:	8f 92       	push	r8
 724:	9f 92       	push	r9
 726:	af 92       	push	r10
 728:	bf 92       	push	r11
 72a:	cf 92       	push	r12
 72c:	df 92       	push	r13
 72e:	ef 92       	push	r14
 730:	ff 92       	push	r15
 732:	0f 93       	push	r16
 734:	1f 93       	push	r17
 736:	cf 93       	push	r28
 738:	df 93       	push	r29
 73a:	cd b7       	in	r28, 0x3d	; 61
 73c:	de b7       	in	r29, 0x3e	; 62
 73e:	2b 97       	sbiw	r28, 0x0b	; 11
 740:	0f b6       	in	r0, 0x3f	; 63
 742:	f8 94       	cli
 744:	de bf       	out	0x3e, r29	; 62
 746:	0f be       	out	0x3f, r0	; 63
 748:	cd bf       	out	0x3d, r28	; 61
 74a:	6c 01       	movw	r12, r24
 74c:	7b 01       	movw	r14, r22
 74e:	8a 01       	movw	r16, r20
 750:	fc 01       	movw	r30, r24
 752:	17 82       	std	Z+7, r1	; 0x07
 754:	16 82       	std	Z+6, r1	; 0x06
 756:	83 81       	ldd	r24, Z+3	; 0x03
 758:	81 ff       	sbrs	r24, 1
 75a:	bf c1       	rjmp	.+894    	; 0xada <vfprintf+0x3c4>
 75c:	ce 01       	movw	r24, r28
 75e:	01 96       	adiw	r24, 0x01	; 1
 760:	3c 01       	movw	r6, r24
 762:	f6 01       	movw	r30, r12
 764:	93 81       	ldd	r25, Z+3	; 0x03
 766:	f7 01       	movw	r30, r14
 768:	93 fd       	sbrc	r25, 3
 76a:	85 91       	lpm	r24, Z+
 76c:	93 ff       	sbrs	r25, 3
 76e:	81 91       	ld	r24, Z+
 770:	7f 01       	movw	r14, r30
 772:	88 23       	and	r24, r24
 774:	09 f4       	brne	.+2      	; 0x778 <vfprintf+0x62>
 776:	ad c1       	rjmp	.+858    	; 0xad2 <vfprintf+0x3bc>
 778:	85 32       	cpi	r24, 0x25	; 37
 77a:	39 f4       	brne	.+14     	; 0x78a <vfprintf+0x74>
 77c:	93 fd       	sbrc	r25, 3
 77e:	85 91       	lpm	r24, Z+
 780:	93 ff       	sbrs	r25, 3
 782:	81 91       	ld	r24, Z+
 784:	7f 01       	movw	r14, r30
 786:	85 32       	cpi	r24, 0x25	; 37
 788:	21 f4       	brne	.+8      	; 0x792 <vfprintf+0x7c>
 78a:	b6 01       	movw	r22, r12
 78c:	90 e0       	ldi	r25, 0x00	; 0
 78e:	d6 d1       	rcall	.+940    	; 0xb3c <fputc>
 790:	e8 cf       	rjmp	.-48     	; 0x762 <vfprintf+0x4c>
 792:	91 2c       	mov	r9, r1
 794:	21 2c       	mov	r2, r1
 796:	31 2c       	mov	r3, r1
 798:	ff e1       	ldi	r31, 0x1F	; 31
 79a:	f3 15       	cp	r31, r3
 79c:	d8 f0       	brcs	.+54     	; 0x7d4 <vfprintf+0xbe>
 79e:	8b 32       	cpi	r24, 0x2B	; 43
 7a0:	79 f0       	breq	.+30     	; 0x7c0 <vfprintf+0xaa>
 7a2:	38 f4       	brcc	.+14     	; 0x7b2 <vfprintf+0x9c>
 7a4:	80 32       	cpi	r24, 0x20	; 32
 7a6:	79 f0       	breq	.+30     	; 0x7c6 <vfprintf+0xb0>
 7a8:	83 32       	cpi	r24, 0x23	; 35
 7aa:	a1 f4       	brne	.+40     	; 0x7d4 <vfprintf+0xbe>
 7ac:	23 2d       	mov	r18, r3
 7ae:	20 61       	ori	r18, 0x10	; 16
 7b0:	1d c0       	rjmp	.+58     	; 0x7ec <vfprintf+0xd6>
 7b2:	8d 32       	cpi	r24, 0x2D	; 45
 7b4:	61 f0       	breq	.+24     	; 0x7ce <vfprintf+0xb8>
 7b6:	80 33       	cpi	r24, 0x30	; 48
 7b8:	69 f4       	brne	.+26     	; 0x7d4 <vfprintf+0xbe>
 7ba:	23 2d       	mov	r18, r3
 7bc:	21 60       	ori	r18, 0x01	; 1
 7be:	16 c0       	rjmp	.+44     	; 0x7ec <vfprintf+0xd6>
 7c0:	83 2d       	mov	r24, r3
 7c2:	82 60       	ori	r24, 0x02	; 2
 7c4:	38 2e       	mov	r3, r24
 7c6:	e3 2d       	mov	r30, r3
 7c8:	e4 60       	ori	r30, 0x04	; 4
 7ca:	3e 2e       	mov	r3, r30
 7cc:	2a c0       	rjmp	.+84     	; 0x822 <vfprintf+0x10c>
 7ce:	f3 2d       	mov	r31, r3
 7d0:	f8 60       	ori	r31, 0x08	; 8
 7d2:	1d c0       	rjmp	.+58     	; 0x80e <vfprintf+0xf8>
 7d4:	37 fc       	sbrc	r3, 7
 7d6:	2d c0       	rjmp	.+90     	; 0x832 <vfprintf+0x11c>
 7d8:	20 ed       	ldi	r18, 0xD0	; 208
 7da:	28 0f       	add	r18, r24
 7dc:	2a 30       	cpi	r18, 0x0A	; 10
 7de:	40 f0       	brcs	.+16     	; 0x7f0 <vfprintf+0xda>
 7e0:	8e 32       	cpi	r24, 0x2E	; 46
 7e2:	b9 f4       	brne	.+46     	; 0x812 <vfprintf+0xfc>
 7e4:	36 fc       	sbrc	r3, 6
 7e6:	75 c1       	rjmp	.+746    	; 0xad2 <vfprintf+0x3bc>
 7e8:	23 2d       	mov	r18, r3
 7ea:	20 64       	ori	r18, 0x40	; 64
 7ec:	32 2e       	mov	r3, r18
 7ee:	19 c0       	rjmp	.+50     	; 0x822 <vfprintf+0x10c>
 7f0:	36 fe       	sbrs	r3, 6
 7f2:	06 c0       	rjmp	.+12     	; 0x800 <vfprintf+0xea>
 7f4:	8a e0       	ldi	r24, 0x0A	; 10
 7f6:	98 9e       	mul	r9, r24
 7f8:	20 0d       	add	r18, r0
 7fa:	11 24       	eor	r1, r1
 7fc:	92 2e       	mov	r9, r18
 7fe:	11 c0       	rjmp	.+34     	; 0x822 <vfprintf+0x10c>
 800:	ea e0       	ldi	r30, 0x0A	; 10
 802:	2e 9e       	mul	r2, r30
 804:	20 0d       	add	r18, r0
 806:	11 24       	eor	r1, r1
 808:	22 2e       	mov	r2, r18
 80a:	f3 2d       	mov	r31, r3
 80c:	f0 62       	ori	r31, 0x20	; 32
 80e:	3f 2e       	mov	r3, r31
 810:	08 c0       	rjmp	.+16     	; 0x822 <vfprintf+0x10c>
 812:	8c 36       	cpi	r24, 0x6C	; 108
 814:	21 f4       	brne	.+8      	; 0x81e <vfprintf+0x108>
 816:	83 2d       	mov	r24, r3
 818:	80 68       	ori	r24, 0x80	; 128
 81a:	38 2e       	mov	r3, r24
 81c:	02 c0       	rjmp	.+4      	; 0x822 <vfprintf+0x10c>
 81e:	88 36       	cpi	r24, 0x68	; 104
 820:	41 f4       	brne	.+16     	; 0x832 <vfprintf+0x11c>
 822:	f7 01       	movw	r30, r14
 824:	93 fd       	sbrc	r25, 3
 826:	85 91       	lpm	r24, Z+
 828:	93 ff       	sbrs	r25, 3
 82a:	81 91       	ld	r24, Z+
 82c:	7f 01       	movw	r14, r30
 82e:	81 11       	cpse	r24, r1
 830:	b3 cf       	rjmp	.-154    	; 0x798 <vfprintf+0x82>
 832:	98 2f       	mov	r25, r24
 834:	9f 7d       	andi	r25, 0xDF	; 223
 836:	95 54       	subi	r25, 0x45	; 69
 838:	93 30       	cpi	r25, 0x03	; 3
 83a:	28 f4       	brcc	.+10     	; 0x846 <vfprintf+0x130>
 83c:	0c 5f       	subi	r16, 0xFC	; 252
 83e:	1f 4f       	sbci	r17, 0xFF	; 255
 840:	9f e3       	ldi	r25, 0x3F	; 63
 842:	99 83       	std	Y+1, r25	; 0x01
 844:	0d c0       	rjmp	.+26     	; 0x860 <vfprintf+0x14a>
 846:	83 36       	cpi	r24, 0x63	; 99
 848:	31 f0       	breq	.+12     	; 0x856 <vfprintf+0x140>
 84a:	83 37       	cpi	r24, 0x73	; 115
 84c:	71 f0       	breq	.+28     	; 0x86a <vfprintf+0x154>
 84e:	83 35       	cpi	r24, 0x53	; 83
 850:	09 f0       	breq	.+2      	; 0x854 <vfprintf+0x13e>
 852:	55 c0       	rjmp	.+170    	; 0x8fe <vfprintf+0x1e8>
 854:	20 c0       	rjmp	.+64     	; 0x896 <vfprintf+0x180>
 856:	f8 01       	movw	r30, r16
 858:	80 81       	ld	r24, Z
 85a:	89 83       	std	Y+1, r24	; 0x01
 85c:	0e 5f       	subi	r16, 0xFE	; 254
 85e:	1f 4f       	sbci	r17, 0xFF	; 255
 860:	88 24       	eor	r8, r8
 862:	83 94       	inc	r8
 864:	91 2c       	mov	r9, r1
 866:	53 01       	movw	r10, r6
 868:	12 c0       	rjmp	.+36     	; 0x88e <vfprintf+0x178>
 86a:	28 01       	movw	r4, r16
 86c:	f2 e0       	ldi	r31, 0x02	; 2
 86e:	4f 0e       	add	r4, r31
 870:	51 1c       	adc	r5, r1
 872:	f8 01       	movw	r30, r16
 874:	a0 80       	ld	r10, Z
 876:	b1 80       	ldd	r11, Z+1	; 0x01
 878:	36 fe       	sbrs	r3, 6
 87a:	03 c0       	rjmp	.+6      	; 0x882 <vfprintf+0x16c>
 87c:	69 2d       	mov	r22, r9
 87e:	70 e0       	ldi	r23, 0x00	; 0
 880:	02 c0       	rjmp	.+4      	; 0x886 <vfprintf+0x170>
 882:	6f ef       	ldi	r22, 0xFF	; 255
 884:	7f ef       	ldi	r23, 0xFF	; 255
 886:	c5 01       	movw	r24, r10
 888:	4e d1       	rcall	.+668    	; 0xb26 <strnlen>
 88a:	4c 01       	movw	r8, r24
 88c:	82 01       	movw	r16, r4
 88e:	f3 2d       	mov	r31, r3
 890:	ff 77       	andi	r31, 0x7F	; 127
 892:	3f 2e       	mov	r3, r31
 894:	15 c0       	rjmp	.+42     	; 0x8c0 <vfprintf+0x1aa>
 896:	28 01       	movw	r4, r16
 898:	22 e0       	ldi	r18, 0x02	; 2
 89a:	42 0e       	add	r4, r18
 89c:	51 1c       	adc	r5, r1
 89e:	f8 01       	movw	r30, r16
 8a0:	a0 80       	ld	r10, Z
 8a2:	b1 80       	ldd	r11, Z+1	; 0x01
 8a4:	36 fe       	sbrs	r3, 6
 8a6:	03 c0       	rjmp	.+6      	; 0x8ae <vfprintf+0x198>
 8a8:	69 2d       	mov	r22, r9
 8aa:	70 e0       	ldi	r23, 0x00	; 0
 8ac:	02 c0       	rjmp	.+4      	; 0x8b2 <vfprintf+0x19c>
 8ae:	6f ef       	ldi	r22, 0xFF	; 255
 8b0:	7f ef       	ldi	r23, 0xFF	; 255
 8b2:	c5 01       	movw	r24, r10
 8b4:	2d d1       	rcall	.+602    	; 0xb10 <strnlen_P>
 8b6:	4c 01       	movw	r8, r24
 8b8:	f3 2d       	mov	r31, r3
 8ba:	f0 68       	ori	r31, 0x80	; 128
 8bc:	3f 2e       	mov	r3, r31
 8be:	82 01       	movw	r16, r4
 8c0:	33 fc       	sbrc	r3, 3
 8c2:	19 c0       	rjmp	.+50     	; 0x8f6 <vfprintf+0x1e0>
 8c4:	82 2d       	mov	r24, r2
 8c6:	90 e0       	ldi	r25, 0x00	; 0
 8c8:	88 16       	cp	r8, r24
 8ca:	99 06       	cpc	r9, r25
 8cc:	a0 f4       	brcc	.+40     	; 0x8f6 <vfprintf+0x1e0>
 8ce:	b6 01       	movw	r22, r12
 8d0:	80 e2       	ldi	r24, 0x20	; 32
 8d2:	90 e0       	ldi	r25, 0x00	; 0
 8d4:	33 d1       	rcall	.+614    	; 0xb3c <fputc>
 8d6:	2a 94       	dec	r2
 8d8:	f5 cf       	rjmp	.-22     	; 0x8c4 <vfprintf+0x1ae>
 8da:	f5 01       	movw	r30, r10
 8dc:	37 fc       	sbrc	r3, 7
 8de:	85 91       	lpm	r24, Z+
 8e0:	37 fe       	sbrs	r3, 7
 8e2:	81 91       	ld	r24, Z+
 8e4:	5f 01       	movw	r10, r30
 8e6:	b6 01       	movw	r22, r12
 8e8:	90 e0       	ldi	r25, 0x00	; 0
 8ea:	28 d1       	rcall	.+592    	; 0xb3c <fputc>
 8ec:	21 10       	cpse	r2, r1
 8ee:	2a 94       	dec	r2
 8f0:	21 e0       	ldi	r18, 0x01	; 1
 8f2:	82 1a       	sub	r8, r18
 8f4:	91 08       	sbc	r9, r1
 8f6:	81 14       	cp	r8, r1
 8f8:	91 04       	cpc	r9, r1
 8fa:	79 f7       	brne	.-34     	; 0x8da <vfprintf+0x1c4>
 8fc:	e1 c0       	rjmp	.+450    	; 0xac0 <vfprintf+0x3aa>
 8fe:	84 36       	cpi	r24, 0x64	; 100
 900:	11 f0       	breq	.+4      	; 0x906 <vfprintf+0x1f0>
 902:	89 36       	cpi	r24, 0x69	; 105
 904:	39 f5       	brne	.+78     	; 0x954 <vfprintf+0x23e>
 906:	f8 01       	movw	r30, r16
 908:	37 fe       	sbrs	r3, 7
 90a:	07 c0       	rjmp	.+14     	; 0x91a <vfprintf+0x204>
 90c:	60 81       	ld	r22, Z
 90e:	71 81       	ldd	r23, Z+1	; 0x01
 910:	82 81       	ldd	r24, Z+2	; 0x02
 912:	93 81       	ldd	r25, Z+3	; 0x03
 914:	0c 5f       	subi	r16, 0xFC	; 252
 916:	1f 4f       	sbci	r17, 0xFF	; 255
 918:	08 c0       	rjmp	.+16     	; 0x92a <vfprintf+0x214>
 91a:	60 81       	ld	r22, Z
 91c:	71 81       	ldd	r23, Z+1	; 0x01
 91e:	07 2e       	mov	r0, r23
 920:	00 0c       	add	r0, r0
 922:	88 0b       	sbc	r24, r24
 924:	99 0b       	sbc	r25, r25
 926:	0e 5f       	subi	r16, 0xFE	; 254
 928:	1f 4f       	sbci	r17, 0xFF	; 255
 92a:	f3 2d       	mov	r31, r3
 92c:	ff 76       	andi	r31, 0x6F	; 111
 92e:	3f 2e       	mov	r3, r31
 930:	97 ff       	sbrs	r25, 7
 932:	09 c0       	rjmp	.+18     	; 0x946 <vfprintf+0x230>
 934:	90 95       	com	r25
 936:	80 95       	com	r24
 938:	70 95       	com	r23
 93a:	61 95       	neg	r22
 93c:	7f 4f       	sbci	r23, 0xFF	; 255
 93e:	8f 4f       	sbci	r24, 0xFF	; 255
 940:	9f 4f       	sbci	r25, 0xFF	; 255
 942:	f0 68       	ori	r31, 0x80	; 128
 944:	3f 2e       	mov	r3, r31
 946:	2a e0       	ldi	r18, 0x0A	; 10
 948:	30 e0       	ldi	r19, 0x00	; 0
 94a:	a3 01       	movw	r20, r6
 94c:	33 d1       	rcall	.+614    	; 0xbb4 <__ultoa_invert>
 94e:	88 2e       	mov	r8, r24
 950:	86 18       	sub	r8, r6
 952:	44 c0       	rjmp	.+136    	; 0x9dc <vfprintf+0x2c6>
 954:	85 37       	cpi	r24, 0x75	; 117
 956:	31 f4       	brne	.+12     	; 0x964 <vfprintf+0x24e>
 958:	23 2d       	mov	r18, r3
 95a:	2f 7e       	andi	r18, 0xEF	; 239
 95c:	b2 2e       	mov	r11, r18
 95e:	2a e0       	ldi	r18, 0x0A	; 10
 960:	30 e0       	ldi	r19, 0x00	; 0
 962:	25 c0       	rjmp	.+74     	; 0x9ae <vfprintf+0x298>
 964:	93 2d       	mov	r25, r3
 966:	99 7f       	andi	r25, 0xF9	; 249
 968:	b9 2e       	mov	r11, r25
 96a:	8f 36       	cpi	r24, 0x6F	; 111
 96c:	c1 f0       	breq	.+48     	; 0x99e <vfprintf+0x288>
 96e:	18 f4       	brcc	.+6      	; 0x976 <vfprintf+0x260>
 970:	88 35       	cpi	r24, 0x58	; 88
 972:	79 f0       	breq	.+30     	; 0x992 <vfprintf+0x27c>
 974:	ae c0       	rjmp	.+348    	; 0xad2 <vfprintf+0x3bc>
 976:	80 37       	cpi	r24, 0x70	; 112
 978:	19 f0       	breq	.+6      	; 0x980 <vfprintf+0x26a>
 97a:	88 37       	cpi	r24, 0x78	; 120
 97c:	21 f0       	breq	.+8      	; 0x986 <vfprintf+0x270>
 97e:	a9 c0       	rjmp	.+338    	; 0xad2 <vfprintf+0x3bc>
 980:	e9 2f       	mov	r30, r25
 982:	e0 61       	ori	r30, 0x10	; 16
 984:	be 2e       	mov	r11, r30
 986:	b4 fe       	sbrs	r11, 4
 988:	0d c0       	rjmp	.+26     	; 0x9a4 <vfprintf+0x28e>
 98a:	fb 2d       	mov	r31, r11
 98c:	f4 60       	ori	r31, 0x04	; 4
 98e:	bf 2e       	mov	r11, r31
 990:	09 c0       	rjmp	.+18     	; 0x9a4 <vfprintf+0x28e>
 992:	34 fe       	sbrs	r3, 4
 994:	0a c0       	rjmp	.+20     	; 0x9aa <vfprintf+0x294>
 996:	29 2f       	mov	r18, r25
 998:	26 60       	ori	r18, 0x06	; 6
 99a:	b2 2e       	mov	r11, r18
 99c:	06 c0       	rjmp	.+12     	; 0x9aa <vfprintf+0x294>
 99e:	28 e0       	ldi	r18, 0x08	; 8
 9a0:	30 e0       	ldi	r19, 0x00	; 0
 9a2:	05 c0       	rjmp	.+10     	; 0x9ae <vfprintf+0x298>
 9a4:	20 e1       	ldi	r18, 0x10	; 16
 9a6:	30 e0       	ldi	r19, 0x00	; 0
 9a8:	02 c0       	rjmp	.+4      	; 0x9ae <vfprintf+0x298>
 9aa:	20 e1       	ldi	r18, 0x10	; 16
 9ac:	32 e0       	ldi	r19, 0x02	; 2
 9ae:	f8 01       	movw	r30, r16
 9b0:	b7 fe       	sbrs	r11, 7
 9b2:	07 c0       	rjmp	.+14     	; 0x9c2 <vfprintf+0x2ac>
 9b4:	60 81       	ld	r22, Z
 9b6:	71 81       	ldd	r23, Z+1	; 0x01
 9b8:	82 81       	ldd	r24, Z+2	; 0x02
 9ba:	93 81       	ldd	r25, Z+3	; 0x03
 9bc:	0c 5f       	subi	r16, 0xFC	; 252
 9be:	1f 4f       	sbci	r17, 0xFF	; 255
 9c0:	06 c0       	rjmp	.+12     	; 0x9ce <vfprintf+0x2b8>
 9c2:	60 81       	ld	r22, Z
 9c4:	71 81       	ldd	r23, Z+1	; 0x01
 9c6:	80 e0       	ldi	r24, 0x00	; 0
 9c8:	90 e0       	ldi	r25, 0x00	; 0
 9ca:	0e 5f       	subi	r16, 0xFE	; 254
 9cc:	1f 4f       	sbci	r17, 0xFF	; 255
 9ce:	a3 01       	movw	r20, r6
 9d0:	f1 d0       	rcall	.+482    	; 0xbb4 <__ultoa_invert>
 9d2:	88 2e       	mov	r8, r24
 9d4:	86 18       	sub	r8, r6
 9d6:	fb 2d       	mov	r31, r11
 9d8:	ff 77       	andi	r31, 0x7F	; 127
 9da:	3f 2e       	mov	r3, r31
 9dc:	36 fe       	sbrs	r3, 6
 9de:	0d c0       	rjmp	.+26     	; 0x9fa <vfprintf+0x2e4>
 9e0:	23 2d       	mov	r18, r3
 9e2:	2e 7f       	andi	r18, 0xFE	; 254
 9e4:	a2 2e       	mov	r10, r18
 9e6:	89 14       	cp	r8, r9
 9e8:	58 f4       	brcc	.+22     	; 0xa00 <vfprintf+0x2ea>
 9ea:	34 fe       	sbrs	r3, 4
 9ec:	0b c0       	rjmp	.+22     	; 0xa04 <vfprintf+0x2ee>
 9ee:	32 fc       	sbrc	r3, 2
 9f0:	09 c0       	rjmp	.+18     	; 0xa04 <vfprintf+0x2ee>
 9f2:	83 2d       	mov	r24, r3
 9f4:	8e 7e       	andi	r24, 0xEE	; 238
 9f6:	a8 2e       	mov	r10, r24
 9f8:	05 c0       	rjmp	.+10     	; 0xa04 <vfprintf+0x2ee>
 9fa:	b8 2c       	mov	r11, r8
 9fc:	a3 2c       	mov	r10, r3
 9fe:	03 c0       	rjmp	.+6      	; 0xa06 <vfprintf+0x2f0>
 a00:	b8 2c       	mov	r11, r8
 a02:	01 c0       	rjmp	.+2      	; 0xa06 <vfprintf+0x2f0>
 a04:	b9 2c       	mov	r11, r9
 a06:	a4 fe       	sbrs	r10, 4
 a08:	0f c0       	rjmp	.+30     	; 0xa28 <vfprintf+0x312>
 a0a:	fe 01       	movw	r30, r28
 a0c:	e8 0d       	add	r30, r8
 a0e:	f1 1d       	adc	r31, r1
 a10:	80 81       	ld	r24, Z
 a12:	80 33       	cpi	r24, 0x30	; 48
 a14:	21 f4       	brne	.+8      	; 0xa1e <vfprintf+0x308>
 a16:	9a 2d       	mov	r25, r10
 a18:	99 7e       	andi	r25, 0xE9	; 233
 a1a:	a9 2e       	mov	r10, r25
 a1c:	09 c0       	rjmp	.+18     	; 0xa30 <vfprintf+0x31a>
 a1e:	a2 fe       	sbrs	r10, 2
 a20:	06 c0       	rjmp	.+12     	; 0xa2e <vfprintf+0x318>
 a22:	b3 94       	inc	r11
 a24:	b3 94       	inc	r11
 a26:	04 c0       	rjmp	.+8      	; 0xa30 <vfprintf+0x31a>
 a28:	8a 2d       	mov	r24, r10
 a2a:	86 78       	andi	r24, 0x86	; 134
 a2c:	09 f0       	breq	.+2      	; 0xa30 <vfprintf+0x31a>
 a2e:	b3 94       	inc	r11
 a30:	a3 fc       	sbrc	r10, 3
 a32:	10 c0       	rjmp	.+32     	; 0xa54 <vfprintf+0x33e>
 a34:	a0 fe       	sbrs	r10, 0
 a36:	06 c0       	rjmp	.+12     	; 0xa44 <vfprintf+0x32e>
 a38:	b2 14       	cp	r11, r2
 a3a:	80 f4       	brcc	.+32     	; 0xa5c <vfprintf+0x346>
 a3c:	28 0c       	add	r2, r8
 a3e:	92 2c       	mov	r9, r2
 a40:	9b 18       	sub	r9, r11
 a42:	0d c0       	rjmp	.+26     	; 0xa5e <vfprintf+0x348>
 a44:	b2 14       	cp	r11, r2
 a46:	58 f4       	brcc	.+22     	; 0xa5e <vfprintf+0x348>
 a48:	b6 01       	movw	r22, r12
 a4a:	80 e2       	ldi	r24, 0x20	; 32
 a4c:	90 e0       	ldi	r25, 0x00	; 0
 a4e:	76 d0       	rcall	.+236    	; 0xb3c <fputc>
 a50:	b3 94       	inc	r11
 a52:	f8 cf       	rjmp	.-16     	; 0xa44 <vfprintf+0x32e>
 a54:	b2 14       	cp	r11, r2
 a56:	18 f4       	brcc	.+6      	; 0xa5e <vfprintf+0x348>
 a58:	2b 18       	sub	r2, r11
 a5a:	02 c0       	rjmp	.+4      	; 0xa60 <vfprintf+0x34a>
 a5c:	98 2c       	mov	r9, r8
 a5e:	21 2c       	mov	r2, r1
 a60:	a4 fe       	sbrs	r10, 4
 a62:	0f c0       	rjmp	.+30     	; 0xa82 <vfprintf+0x36c>
 a64:	b6 01       	movw	r22, r12
 a66:	80 e3       	ldi	r24, 0x30	; 48
 a68:	90 e0       	ldi	r25, 0x00	; 0
 a6a:	68 d0       	rcall	.+208    	; 0xb3c <fputc>
 a6c:	a2 fe       	sbrs	r10, 2
 a6e:	16 c0       	rjmp	.+44     	; 0xa9c <vfprintf+0x386>
 a70:	a1 fc       	sbrc	r10, 1
 a72:	03 c0       	rjmp	.+6      	; 0xa7a <vfprintf+0x364>
 a74:	88 e7       	ldi	r24, 0x78	; 120
 a76:	90 e0       	ldi	r25, 0x00	; 0
 a78:	02 c0       	rjmp	.+4      	; 0xa7e <vfprintf+0x368>
 a7a:	88 e5       	ldi	r24, 0x58	; 88
 a7c:	90 e0       	ldi	r25, 0x00	; 0
 a7e:	b6 01       	movw	r22, r12
 a80:	0c c0       	rjmp	.+24     	; 0xa9a <vfprintf+0x384>
 a82:	8a 2d       	mov	r24, r10
 a84:	86 78       	andi	r24, 0x86	; 134
 a86:	51 f0       	breq	.+20     	; 0xa9c <vfprintf+0x386>
 a88:	a1 fe       	sbrs	r10, 1
 a8a:	02 c0       	rjmp	.+4      	; 0xa90 <vfprintf+0x37a>
 a8c:	8b e2       	ldi	r24, 0x2B	; 43
 a8e:	01 c0       	rjmp	.+2      	; 0xa92 <vfprintf+0x37c>
 a90:	80 e2       	ldi	r24, 0x20	; 32
 a92:	a7 fc       	sbrc	r10, 7
 a94:	8d e2       	ldi	r24, 0x2D	; 45
 a96:	b6 01       	movw	r22, r12
 a98:	90 e0       	ldi	r25, 0x00	; 0
 a9a:	50 d0       	rcall	.+160    	; 0xb3c <fputc>
 a9c:	89 14       	cp	r8, r9
 a9e:	30 f4       	brcc	.+12     	; 0xaac <vfprintf+0x396>
 aa0:	b6 01       	movw	r22, r12
 aa2:	80 e3       	ldi	r24, 0x30	; 48
 aa4:	90 e0       	ldi	r25, 0x00	; 0
 aa6:	4a d0       	rcall	.+148    	; 0xb3c <fputc>
 aa8:	9a 94       	dec	r9
 aaa:	f8 cf       	rjmp	.-16     	; 0xa9c <vfprintf+0x386>
 aac:	8a 94       	dec	r8
 aae:	f3 01       	movw	r30, r6
 ab0:	e8 0d       	add	r30, r8
 ab2:	f1 1d       	adc	r31, r1
 ab4:	80 81       	ld	r24, Z
 ab6:	b6 01       	movw	r22, r12
 ab8:	90 e0       	ldi	r25, 0x00	; 0
 aba:	40 d0       	rcall	.+128    	; 0xb3c <fputc>
 abc:	81 10       	cpse	r8, r1
 abe:	f6 cf       	rjmp	.-20     	; 0xaac <vfprintf+0x396>
 ac0:	22 20       	and	r2, r2
 ac2:	09 f4       	brne	.+2      	; 0xac6 <vfprintf+0x3b0>
 ac4:	4e ce       	rjmp	.-868    	; 0x762 <vfprintf+0x4c>
 ac6:	b6 01       	movw	r22, r12
 ac8:	80 e2       	ldi	r24, 0x20	; 32
 aca:	90 e0       	ldi	r25, 0x00	; 0
 acc:	37 d0       	rcall	.+110    	; 0xb3c <fputc>
 ace:	2a 94       	dec	r2
 ad0:	f7 cf       	rjmp	.-18     	; 0xac0 <vfprintf+0x3aa>
 ad2:	f6 01       	movw	r30, r12
 ad4:	86 81       	ldd	r24, Z+6	; 0x06
 ad6:	97 81       	ldd	r25, Z+7	; 0x07
 ad8:	02 c0       	rjmp	.+4      	; 0xade <vfprintf+0x3c8>
 ada:	8f ef       	ldi	r24, 0xFF	; 255
 adc:	9f ef       	ldi	r25, 0xFF	; 255
 ade:	2b 96       	adiw	r28, 0x0b	; 11
 ae0:	0f b6       	in	r0, 0x3f	; 63
 ae2:	f8 94       	cli
 ae4:	de bf       	out	0x3e, r29	; 62
 ae6:	0f be       	out	0x3f, r0	; 63
 ae8:	cd bf       	out	0x3d, r28	; 61
 aea:	df 91       	pop	r29
 aec:	cf 91       	pop	r28
 aee:	1f 91       	pop	r17
 af0:	0f 91       	pop	r16
 af2:	ff 90       	pop	r15
 af4:	ef 90       	pop	r14
 af6:	df 90       	pop	r13
 af8:	cf 90       	pop	r12
 afa:	bf 90       	pop	r11
 afc:	af 90       	pop	r10
 afe:	9f 90       	pop	r9
 b00:	8f 90       	pop	r8
 b02:	7f 90       	pop	r7
 b04:	6f 90       	pop	r6
 b06:	5f 90       	pop	r5
 b08:	4f 90       	pop	r4
 b0a:	3f 90       	pop	r3
 b0c:	2f 90       	pop	r2
 b0e:	08 95       	ret

00000b10 <strnlen_P>:
 b10:	fc 01       	movw	r30, r24
 b12:	05 90       	lpm	r0, Z+
 b14:	61 50       	subi	r22, 0x01	; 1
 b16:	70 40       	sbci	r23, 0x00	; 0
 b18:	01 10       	cpse	r0, r1
 b1a:	d8 f7       	brcc	.-10     	; 0xb12 <strnlen_P+0x2>
 b1c:	80 95       	com	r24
 b1e:	90 95       	com	r25
 b20:	8e 0f       	add	r24, r30
 b22:	9f 1f       	adc	r25, r31
 b24:	08 95       	ret

00000b26 <strnlen>:
 b26:	fc 01       	movw	r30, r24
 b28:	61 50       	subi	r22, 0x01	; 1
 b2a:	70 40       	sbci	r23, 0x00	; 0
 b2c:	01 90       	ld	r0, Z+
 b2e:	01 10       	cpse	r0, r1
 b30:	d8 f7       	brcc	.-10     	; 0xb28 <strnlen+0x2>
 b32:	80 95       	com	r24
 b34:	90 95       	com	r25
 b36:	8e 0f       	add	r24, r30
 b38:	9f 1f       	adc	r25, r31
 b3a:	08 95       	ret

00000b3c <fputc>:
 b3c:	0f 93       	push	r16
 b3e:	1f 93       	push	r17
 b40:	cf 93       	push	r28
 b42:	df 93       	push	r29
 b44:	fb 01       	movw	r30, r22
 b46:	23 81       	ldd	r18, Z+3	; 0x03
 b48:	21 fd       	sbrc	r18, 1
 b4a:	03 c0       	rjmp	.+6      	; 0xb52 <fputc+0x16>
 b4c:	8f ef       	ldi	r24, 0xFF	; 255
 b4e:	9f ef       	ldi	r25, 0xFF	; 255
 b50:	2c c0       	rjmp	.+88     	; 0xbaa <fputc+0x6e>
 b52:	22 ff       	sbrs	r18, 2
 b54:	16 c0       	rjmp	.+44     	; 0xb82 <fputc+0x46>
 b56:	46 81       	ldd	r20, Z+6	; 0x06
 b58:	57 81       	ldd	r21, Z+7	; 0x07
 b5a:	24 81       	ldd	r18, Z+4	; 0x04
 b5c:	35 81       	ldd	r19, Z+5	; 0x05
 b5e:	42 17       	cp	r20, r18
 b60:	53 07       	cpc	r21, r19
 b62:	44 f4       	brge	.+16     	; 0xb74 <fputc+0x38>
 b64:	a0 81       	ld	r26, Z
 b66:	b1 81       	ldd	r27, Z+1	; 0x01
 b68:	9d 01       	movw	r18, r26
 b6a:	2f 5f       	subi	r18, 0xFF	; 255
 b6c:	3f 4f       	sbci	r19, 0xFF	; 255
 b6e:	31 83       	std	Z+1, r19	; 0x01
 b70:	20 83       	st	Z, r18
 b72:	8c 93       	st	X, r24
 b74:	26 81       	ldd	r18, Z+6	; 0x06
 b76:	37 81       	ldd	r19, Z+7	; 0x07
 b78:	2f 5f       	subi	r18, 0xFF	; 255
 b7a:	3f 4f       	sbci	r19, 0xFF	; 255
 b7c:	37 83       	std	Z+7, r19	; 0x07
 b7e:	26 83       	std	Z+6, r18	; 0x06
 b80:	14 c0       	rjmp	.+40     	; 0xbaa <fputc+0x6e>
 b82:	8b 01       	movw	r16, r22
 b84:	ec 01       	movw	r28, r24
 b86:	fb 01       	movw	r30, r22
 b88:	00 84       	ldd	r0, Z+8	; 0x08
 b8a:	f1 85       	ldd	r31, Z+9	; 0x09
 b8c:	e0 2d       	mov	r30, r0
 b8e:	09 95       	icall
 b90:	89 2b       	or	r24, r25
 b92:	e1 f6       	brne	.-72     	; 0xb4c <fputc+0x10>
 b94:	d8 01       	movw	r26, r16
 b96:	16 96       	adiw	r26, 0x06	; 6
 b98:	8d 91       	ld	r24, X+
 b9a:	9c 91       	ld	r25, X
 b9c:	17 97       	sbiw	r26, 0x07	; 7
 b9e:	01 96       	adiw	r24, 0x01	; 1
 ba0:	17 96       	adiw	r26, 0x07	; 7
 ba2:	9c 93       	st	X, r25
 ba4:	8e 93       	st	-X, r24
 ba6:	16 97       	sbiw	r26, 0x06	; 6
 ba8:	ce 01       	movw	r24, r28
 baa:	df 91       	pop	r29
 bac:	cf 91       	pop	r28
 bae:	1f 91       	pop	r17
 bb0:	0f 91       	pop	r16
 bb2:	08 95       	ret

00000bb4 <__ultoa_invert>:
 bb4:	fa 01       	movw	r30, r20
 bb6:	aa 27       	eor	r26, r26
 bb8:	28 30       	cpi	r18, 0x08	; 8
 bba:	51 f1       	breq	.+84     	; 0xc10 <__ultoa_invert+0x5c>
 bbc:	20 31       	cpi	r18, 0x10	; 16
 bbe:	81 f1       	breq	.+96     	; 0xc20 <__ultoa_invert+0x6c>
 bc0:	e8 94       	clt
 bc2:	6f 93       	push	r22
 bc4:	6e 7f       	andi	r22, 0xFE	; 254
 bc6:	6e 5f       	subi	r22, 0xFE	; 254
 bc8:	7f 4f       	sbci	r23, 0xFF	; 255
 bca:	8f 4f       	sbci	r24, 0xFF	; 255
 bcc:	9f 4f       	sbci	r25, 0xFF	; 255
 bce:	af 4f       	sbci	r26, 0xFF	; 255
 bd0:	b1 e0       	ldi	r27, 0x01	; 1
 bd2:	3e d0       	rcall	.+124    	; 0xc50 <__ultoa_invert+0x9c>
 bd4:	b4 e0       	ldi	r27, 0x04	; 4
 bd6:	3c d0       	rcall	.+120    	; 0xc50 <__ultoa_invert+0x9c>
 bd8:	67 0f       	add	r22, r23
 bda:	78 1f       	adc	r23, r24
 bdc:	89 1f       	adc	r24, r25
 bde:	9a 1f       	adc	r25, r26
 be0:	a1 1d       	adc	r26, r1
 be2:	68 0f       	add	r22, r24
 be4:	79 1f       	adc	r23, r25
 be6:	8a 1f       	adc	r24, r26
 be8:	91 1d       	adc	r25, r1
 bea:	a1 1d       	adc	r26, r1
 bec:	6a 0f       	add	r22, r26
 bee:	71 1d       	adc	r23, r1
 bf0:	81 1d       	adc	r24, r1
 bf2:	91 1d       	adc	r25, r1
 bf4:	a1 1d       	adc	r26, r1
 bf6:	20 d0       	rcall	.+64     	; 0xc38 <__ultoa_invert+0x84>
 bf8:	09 f4       	brne	.+2      	; 0xbfc <__ultoa_invert+0x48>
 bfa:	68 94       	set
 bfc:	3f 91       	pop	r19
 bfe:	2a e0       	ldi	r18, 0x0A	; 10
 c00:	26 9f       	mul	r18, r22
 c02:	11 24       	eor	r1, r1
 c04:	30 19       	sub	r19, r0
 c06:	30 5d       	subi	r19, 0xD0	; 208
 c08:	31 93       	st	Z+, r19
 c0a:	de f6       	brtc	.-74     	; 0xbc2 <__ultoa_invert+0xe>
 c0c:	cf 01       	movw	r24, r30
 c0e:	08 95       	ret
 c10:	46 2f       	mov	r20, r22
 c12:	47 70       	andi	r20, 0x07	; 7
 c14:	40 5d       	subi	r20, 0xD0	; 208
 c16:	41 93       	st	Z+, r20
 c18:	b3 e0       	ldi	r27, 0x03	; 3
 c1a:	0f d0       	rcall	.+30     	; 0xc3a <__ultoa_invert+0x86>
 c1c:	c9 f7       	brne	.-14     	; 0xc10 <__ultoa_invert+0x5c>
 c1e:	f6 cf       	rjmp	.-20     	; 0xc0c <__ultoa_invert+0x58>
 c20:	46 2f       	mov	r20, r22
 c22:	4f 70       	andi	r20, 0x0F	; 15
 c24:	40 5d       	subi	r20, 0xD0	; 208
 c26:	4a 33       	cpi	r20, 0x3A	; 58
 c28:	18 f0       	brcs	.+6      	; 0xc30 <__ultoa_invert+0x7c>
 c2a:	49 5d       	subi	r20, 0xD9	; 217
 c2c:	31 fd       	sbrc	r19, 1
 c2e:	40 52       	subi	r20, 0x20	; 32
 c30:	41 93       	st	Z+, r20
 c32:	02 d0       	rcall	.+4      	; 0xc38 <__ultoa_invert+0x84>
 c34:	a9 f7       	brne	.-22     	; 0xc20 <__ultoa_invert+0x6c>
 c36:	ea cf       	rjmp	.-44     	; 0xc0c <__ultoa_invert+0x58>
 c38:	b4 e0       	ldi	r27, 0x04	; 4
 c3a:	a6 95       	lsr	r26
 c3c:	97 95       	ror	r25
 c3e:	87 95       	ror	r24
 c40:	77 95       	ror	r23
 c42:	67 95       	ror	r22
 c44:	ba 95       	dec	r27
 c46:	c9 f7       	brne	.-14     	; 0xc3a <__ultoa_invert+0x86>
 c48:	00 97       	sbiw	r24, 0x00	; 0
 c4a:	61 05       	cpc	r22, r1
 c4c:	71 05       	cpc	r23, r1
 c4e:	08 95       	ret
 c50:	9b 01       	movw	r18, r22
 c52:	ac 01       	movw	r20, r24
 c54:	0a 2e       	mov	r0, r26
 c56:	06 94       	lsr	r0
 c58:	57 95       	ror	r21
 c5a:	47 95       	ror	r20
 c5c:	37 95       	ror	r19
 c5e:	27 95       	ror	r18
 c60:	ba 95       	dec	r27
 c62:	c9 f7       	brne	.-14     	; 0xc56 <__ultoa_invert+0xa2>
 c64:	62 0f       	add	r22, r18
 c66:	73 1f       	adc	r23, r19
 c68:	84 1f       	adc	r24, r20
 c6a:	95 1f       	adc	r25, r21
 c6c:	a0 1d       	adc	r26, r0
 c6e:	08 95       	ret

00000c70 <_exit>:
 c70:	f8 94       	cli

00000c72 <__stop_program>:
 c72:	ff cf       	rjmp	.-2      	; 0xc72 <__stop_program>
