
project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000090  00800100  00001d0e  00001da2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001d0e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001f  00800190  00800190  00001e32  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001e32  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001e90  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001d0  00000000  00000000  00001ed0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000022ee  00000000  00000000  000020a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001155  00000000  00000000  0000438e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000017fb  00000000  00000000  000054e3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000464  00000000  00000000  00006ce0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000ad2  00000000  00000000  00007144  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000160d  00000000  00000000  00007c16  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000178  00000000  00000000  00009223  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	55 c0       	rjmp	.+170    	; 0xac <__ctors_end>
       2:	00 00       	nop
       4:	34 c6       	rjmp	.+3176   	; 0xc6e <__vector_1>
       6:	00 00       	nop
       8:	6f c0       	rjmp	.+222    	; 0xe8 <__bad_interrupt>
       a:	00 00       	nop
       c:	6d c0       	rjmp	.+218    	; 0xe8 <__bad_interrupt>
       e:	00 00       	nop
      10:	6b c0       	rjmp	.+214    	; 0xe8 <__bad_interrupt>
      12:	00 00       	nop
      14:	69 c0       	rjmp	.+210    	; 0xe8 <__bad_interrupt>
      16:	00 00       	nop
      18:	67 c0       	rjmp	.+206    	; 0xe8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	65 c0       	rjmp	.+202    	; 0xe8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	63 c0       	rjmp	.+198    	; 0xe8 <__bad_interrupt>
      22:	00 00       	nop
      24:	61 c0       	rjmp	.+194    	; 0xe8 <__bad_interrupt>
      26:	00 00       	nop
      28:	5f c0       	rjmp	.+190    	; 0xe8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	5d c0       	rjmp	.+186    	; 0xe8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	5b c0       	rjmp	.+182    	; 0xe8 <__bad_interrupt>
      32:	00 00       	nop
      34:	59 c0       	rjmp	.+178    	; 0xe8 <__bad_interrupt>
      36:	00 00       	nop
      38:	57 c0       	rjmp	.+174    	; 0xe8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	55 c0       	rjmp	.+170    	; 0xe8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	a6 c5       	rjmp	.+2892   	; 0xb8e <__vector_16>
      42:	00 00       	nop
      44:	51 c0       	rjmp	.+162    	; 0xe8 <__bad_interrupt>
      46:	00 00       	nop
      48:	4f c0       	rjmp	.+158    	; 0xe8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	4d c0       	rjmp	.+154    	; 0xe8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	4b c0       	rjmp	.+150    	; 0xe8 <__bad_interrupt>
      52:	00 00       	nop
      54:	16 c6       	rjmp	.+3116   	; 0xc82 <__vector_21>
      56:	00 00       	nop
      58:	47 c0       	rjmp	.+142    	; 0xe8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	45 c0       	rjmp	.+138    	; 0xe8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	43 c0       	rjmp	.+134    	; 0xe8 <__bad_interrupt>
      62:	00 00       	nop
      64:	18 c6       	rjmp	.+3120   	; 0xc96 <__vector_25>
      66:	00 00       	nop
      68:	3f c0       	rjmp	.+126    	; 0xe8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	3d c0       	rjmp	.+122    	; 0xe8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	3b c0       	rjmp	.+118    	; 0xe8 <__bad_interrupt>
      72:	00 00       	nop
      74:	39 c0       	rjmp	.+114    	; 0xe8 <__bad_interrupt>
      76:	00 00       	nop
      78:	37 c0       	rjmp	.+110    	; 0xe8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	35 c0       	rjmp	.+106    	; 0xe8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	33 c0       	rjmp	.+102    	; 0xe8 <__bad_interrupt>
      82:	00 00       	nop
      84:	31 c0       	rjmp	.+98     	; 0xe8 <__bad_interrupt>
      86:	00 00       	nop
      88:	2f c0       	rjmp	.+94     	; 0xe8 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	2d c0       	rjmp	.+90     	; 0xe8 <__bad_interrupt>
      8e:	00 00       	nop
      90:	2b c0       	rjmp	.+86     	; 0xe8 <__bad_interrupt>
      92:	00 00       	nop
      94:	e5 01       	movw	r28, r10
      96:	b1 01       	movw	r22, r2
      98:	e5 01       	movw	r28, r10
      9a:	e7 01       	movw	r28, r14
      9c:	e5 01       	movw	r28, r10
      9e:	e7 01       	movw	r28, r14
      a0:	e5 01       	movw	r28, r10
      a2:	e5 01       	movw	r28, r10
      a4:	e7 01       	movw	r28, r14
      a6:	e5 01       	movw	r28, r10
      a8:	e7 01       	movw	r28, r14
      aa:	e5 01       	movw	r28, r10

000000ac <__ctors_end>:
      ac:	11 24       	eor	r1, r1
      ae:	1f be       	out	0x3f, r1	; 63
      b0:	cf ef       	ldi	r28, 0xFF	; 255
      b2:	d0 e1       	ldi	r29, 0x10	; 16
      b4:	de bf       	out	0x3e, r29	; 62
      b6:	cd bf       	out	0x3d, r28	; 61

000000b8 <__do_copy_data>:
      b8:	11 e0       	ldi	r17, 0x01	; 1
      ba:	a0 e0       	ldi	r26, 0x00	; 0
      bc:	b1 e0       	ldi	r27, 0x01	; 1
      be:	ee e0       	ldi	r30, 0x0E	; 14
      c0:	fd e1       	ldi	r31, 0x1D	; 29
      c2:	00 e0       	ldi	r16, 0x00	; 0
      c4:	0b bf       	out	0x3b, r16	; 59
      c6:	02 c0       	rjmp	.+4      	; 0xcc <__do_copy_data+0x14>
      c8:	07 90       	elpm	r0, Z+
      ca:	0d 92       	st	X+, r0
      cc:	a0 39       	cpi	r26, 0x90	; 144
      ce:	b1 07       	cpc	r27, r17
      d0:	d9 f7       	brne	.-10     	; 0xc8 <__do_copy_data+0x10>

000000d2 <__do_clear_bss>:
      d2:	21 e0       	ldi	r18, 0x01	; 1
      d4:	a0 e9       	ldi	r26, 0x90	; 144
      d6:	b1 e0       	ldi	r27, 0x01	; 1
      d8:	01 c0       	rjmp	.+2      	; 0xdc <.do_clear_bss_start>

000000da <.do_clear_bss_loop>:
      da:	1d 92       	st	X+, r1

000000dc <.do_clear_bss_start>:
      dc:	af 3a       	cpi	r26, 0xAF	; 175
      de:	b2 07       	cpc	r27, r18
      e0:	e1 f7       	brne	.-8      	; 0xda <.do_clear_bss_loop>
      e2:	7d d1       	rcall	.+762    	; 0x3de <main>
      e4:	0c 94 85 0e 	jmp	0x1d0a	; 0x1d0a <_exit>

000000e8 <__bad_interrupt>:
      e8:	8b cf       	rjmp	.-234    	; 0x0 <__vectors>

000000ea <can_init>:
      ea:	82 e0       	ldi	r24, 0x02	; 2
      ec:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
      f0:	90 e2       	ldi	r25, 0x20	; 32
      f2:	90 93 db 00 	sts	0x00DB, r25	; 0x8000db <__TEXT_REGION_LENGTH__+0x7e00db>
      f6:	93 e0       	ldi	r25, 0x03	; 3
      f8:	90 93 de 00 	sts	0x00DE, r25	; 0x8000de <__TEXT_REGION_LENGTH__+0x7e00de>
      fc:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
     100:	84 e0       	ldi	r24, 0x04	; 4
     102:	80 93 e3 00 	sts	0x00E3, r24	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>
     106:	83 e1       	ldi	r24, 0x13	; 19
     108:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
     10c:	80 e0       	ldi	r24, 0x00	; 0
     10e:	20 c0       	rjmp	.+64     	; 0x150 <can_init+0x66>
     110:	98 2f       	mov	r25, r24
     112:	92 95       	swap	r25
     114:	90 7f       	andi	r25, 0xF0	; 240
     116:	90 93 ed 00 	sts	0x00ED, r25	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     11a:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
     11e:	10 92 ef 00 	sts	0x00EF, r1	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
     122:	10 92 f0 00 	sts	0x00F0, r1	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
     126:	10 92 f1 00 	sts	0x00F1, r1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
     12a:	10 92 f2 00 	sts	0x00F2, r1	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
     12e:	10 92 f3 00 	sts	0x00F3, r1	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
     132:	10 92 f4 00 	sts	0x00F4, r1	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7e00f4>
     136:	10 92 f5 00 	sts	0x00F5, r1	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7e00f5>
     13a:	10 92 f6 00 	sts	0x00F6, r1	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7e00f6>
     13e:	10 92 f7 00 	sts	0x00F7, r1	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7e00f7>
     142:	10 92 f9 00 	sts	0x00F9, r1	; 0x8000f9 <__TEXT_REGION_LENGTH__+0x7e00f9>
     146:	10 92 f8 00 	sts	0x00F8, r1	; 0x8000f8 <__TEXT_REGION_LENGTH__+0x7e00f8>
     14a:	10 92 fa 00 	sts	0x00FA, r1	; 0x8000fa <__TEXT_REGION_LENGTH__+0x7e00fa>
     14e:	8f 5f       	subi	r24, 0xFF	; 255
     150:	8f 30       	cpi	r24, 0x0F	; 15
     152:	f0 f2       	brcs	.-68     	; 0x110 <can_init+0x26>
     154:	eb ed       	ldi	r30, 0xDB	; 219
     156:	f0 e0       	ldi	r31, 0x00	; 0
     158:	80 81       	ld	r24, Z
     15a:	80 68       	ori	r24, 0x80	; 128
     15c:	80 83       	st	Z, r24
     15e:	08 95       	ret

00000160 <CAN_SendMob>:
     160:	ef 92       	push	r14
     162:	ff 92       	push	r15
     164:	0f 93       	push	r16
     166:	82 95       	swap	r24
     168:	80 7f       	andi	r24, 0xF0	; 240
     16a:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     16e:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
     172:	22 23       	and	r18, r18
     174:	59 f1       	breq	.+86     	; 0x1cc <CAN_SendMob+0x6c>
     176:	84 2f       	mov	r24, r20
     178:	88 0f       	add	r24, r24
     17a:	88 0f       	add	r24, r24
     17c:	88 0f       	add	r24, r24
     17e:	80 93 f0 00 	sts	0x00F0, r24	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
     182:	db 01       	movw	r26, r22
     184:	ca 01       	movw	r24, r20
     186:	68 94       	set
     188:	14 f8       	bld	r1, 4
     18a:	b6 95       	lsr	r27
     18c:	a7 95       	ror	r26
     18e:	97 95       	ror	r25
     190:	87 95       	ror	r24
     192:	16 94       	lsr	r1
     194:	d1 f7       	brne	.-12     	; 0x18a <CAN_SendMob+0x2a>
     196:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
     19a:	db 01       	movw	r26, r22
     19c:	ca 01       	movw	r24, r20
     19e:	07 2e       	mov	r0, r23
     1a0:	7d e0       	ldi	r23, 0x0D	; 13
     1a2:	b6 95       	lsr	r27
     1a4:	a7 95       	ror	r26
     1a6:	97 95       	ror	r25
     1a8:	87 95       	ror	r24
     1aa:	7a 95       	dec	r23
     1ac:	d1 f7       	brne	.-12     	; 0x1a2 <CAN_SendMob+0x42>
     1ae:	70 2d       	mov	r23, r0
     1b0:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
     1b4:	03 2e       	mov	r0, r19
     1b6:	35 e1       	ldi	r19, 0x15	; 21
     1b8:	76 95       	lsr	r23
     1ba:	67 95       	ror	r22
     1bc:	57 95       	ror	r21
     1be:	47 95       	ror	r20
     1c0:	3a 95       	dec	r19
     1c2:	d1 f7       	brne	.-12     	; 0x1b8 <CAN_SendMob+0x58>
     1c4:	30 2d       	mov	r19, r0
     1c6:	40 93 f3 00 	sts	0x00F3, r20	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
     1ca:	10 c0       	rjmp	.+32     	; 0x1ec <CAN_SendMob+0x8c>
     1cc:	84 2f       	mov	r24, r20
     1ce:	82 95       	swap	r24
     1d0:	88 0f       	add	r24, r24
     1d2:	80 7e       	andi	r24, 0xE0	; 224
     1d4:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
     1d8:	68 94       	set
     1da:	12 f8       	bld	r1, 2
     1dc:	76 95       	lsr	r23
     1de:	67 95       	ror	r22
     1e0:	57 95       	ror	r21
     1e2:	47 95       	ror	r20
     1e4:	16 94       	lsr	r1
     1e6:	d1 f7       	brne	.-12     	; 0x1dc <CAN_SendMob+0x7c>
     1e8:	40 93 f3 00 	sts	0x00F3, r20	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
     1ec:	ef ee       	ldi	r30, 0xEF	; 239
     1ee:	f0 e0       	ldi	r31, 0x00	; 0
     1f0:	80 81       	ld	r24, Z
     1f2:	90 e1       	ldi	r25, 0x10	; 16
     1f4:	29 9f       	mul	r18, r25
     1f6:	90 01       	movw	r18, r0
     1f8:	11 24       	eor	r1, r1
     1fa:	28 2b       	or	r18, r24
     1fc:	20 83       	st	Z, r18
     1fe:	80 e0       	ldi	r24, 0x00	; 0
     200:	07 c0       	rjmp	.+14     	; 0x210 <CAN_SendMob+0xb0>
     202:	f7 01       	movw	r30, r14
     204:	e8 0f       	add	r30, r24
     206:	f1 1d       	adc	r31, r1
     208:	90 81       	ld	r25, Z
     20a:	90 93 fa 00 	sts	0x00FA, r25	; 0x8000fa <__TEXT_REGION_LENGTH__+0x7e00fa>
     20e:	8f 5f       	subi	r24, 0xFF	; 255
     210:	80 17       	cp	r24, r16
     212:	b8 f3       	brcs	.-18     	; 0x202 <CAN_SendMob+0xa2>
     214:	00 64       	ori	r16, 0x40	; 64
     216:	00 93 ef 00 	sts	0x00EF, r16	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
     21a:	0f 91       	pop	r16
     21c:	ff 90       	pop	r15
     21e:	ef 90       	pop	r14
     220:	08 95       	ret

00000222 <lcd_enable_pulse>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     222:	88 b1       	in	r24, 0x08	; 8
     224:	88 60       	ori	r24, 0x08	; 8
     226:	88 b9       	out	0x08, r24	; 8
     228:	82 e0       	ldi	r24, 0x02	; 2
     22a:	8a 95       	dec	r24
     22c:	f1 f7       	brne	.-4      	; 0x22a <lcd_enable_pulse+0x8>
     22e:	00 c0       	rjmp	.+0      	; 0x230 <lcd_enable_pulse+0xe>
     230:	88 b1       	in	r24, 0x08	; 8
     232:	87 7f       	andi	r24, 0xF7	; 247
     234:	88 b9       	out	0x08, r24	; 8
     236:	08 95       	ret

00000238 <lcd_init>:
     238:	cf 93       	push	r28
     23a:	df 93       	push	r29
     23c:	2f e7       	ldi	r18, 0x7F	; 127
     23e:	88 e3       	ldi	r24, 0x38	; 56
     240:	91 e0       	ldi	r25, 0x01	; 1
     242:	21 50       	subi	r18, 0x01	; 1
     244:	80 40       	sbci	r24, 0x00	; 0
     246:	90 40       	sbci	r25, 0x00	; 0
     248:	e1 f7       	brne	.-8      	; 0x242 <lcd_init+0xa>
     24a:	00 c0       	rjmp	.+0      	; 0x24c <lcd_init+0x14>
     24c:	00 00       	nop
     24e:	80 e3       	ldi	r24, 0x30	; 48
     250:	88 b9       	out	0x08, r24	; 8
     252:	e7 df       	rcall	.-50     	; 0x222 <lcd_enable_pulse>
     254:	2a e6       	ldi	r18, 0x6A	; 106
     256:	2a 95       	dec	r18
     258:	f1 f7       	brne	.-4      	; 0x256 <lcd_init+0x1e>
     25a:	00 c0       	rjmp	.+0      	; 0x25c <lcd_init+0x24>
     25c:	d0 e2       	ldi	r29, 0x20	; 32
     25e:	d8 b9       	out	0x08, r29	; 8
     260:	e0 df       	rcall	.-64     	; 0x222 <lcd_enable_pulse>
     262:	c0 e8       	ldi	r28, 0x80	; 128
     264:	c8 b9       	out	0x08, r28	; 8
     266:	dd df       	rcall	.-70     	; 0x222 <lcd_enable_pulse>
     268:	8a e6       	ldi	r24, 0x6A	; 106
     26a:	8a 95       	dec	r24
     26c:	f1 f7       	brne	.-4      	; 0x26a <lcd_init+0x32>
     26e:	00 c0       	rjmp	.+0      	; 0x270 <lcd_init+0x38>
     270:	d8 b9       	out	0x08, r29	; 8
     272:	d7 df       	rcall	.-82     	; 0x222 <lcd_enable_pulse>
     274:	c8 b9       	out	0x08, r28	; 8
     276:	d5 df       	rcall	.-86     	; 0x222 <lcd_enable_pulse>
     278:	9a e6       	ldi	r25, 0x6A	; 106
     27a:	9a 95       	dec	r25
     27c:	f1 f7       	brne	.-4      	; 0x27a <lcd_init+0x42>
     27e:	00 c0       	rjmp	.+0      	; 0x280 <lcd_init+0x48>
     280:	18 b8       	out	0x08, r1	; 8
     282:	cf df       	rcall	.-98     	; 0x222 <lcd_enable_pulse>
     284:	80 ef       	ldi	r24, 0xF0	; 240
     286:	88 b9       	out	0x08, r24	; 8
     288:	cc df       	rcall	.-104    	; 0x222 <lcd_enable_pulse>
     28a:	2a e6       	ldi	r18, 0x6A	; 106
     28c:	2a 95       	dec	r18
     28e:	f1 f7       	brne	.-4      	; 0x28c <lcd_init+0x54>
     290:	00 c0       	rjmp	.+0      	; 0x292 <lcd_init+0x5a>
     292:	18 b8       	out	0x08, r1	; 8
     294:	c6 df       	rcall	.-116    	; 0x222 <lcd_enable_pulse>
     296:	80 e1       	ldi	r24, 0x10	; 16
     298:	88 b9       	out	0x08, r24	; 8
     29a:	c3 df       	rcall	.-122    	; 0x222 <lcd_enable_pulse>
     29c:	8f e9       	ldi	r24, 0x9F	; 159
     29e:	9f e0       	ldi	r25, 0x0F	; 15
     2a0:	01 97       	sbiw	r24, 0x01	; 1
     2a2:	f1 f7       	brne	.-4      	; 0x2a0 <lcd_init+0x68>
     2a4:	00 c0       	rjmp	.+0      	; 0x2a6 <lcd_init+0x6e>
     2a6:	00 00       	nop
     2a8:	18 b8       	out	0x08, r1	; 8
     2aa:	bb df       	rcall	.-138    	; 0x222 <lcd_enable_pulse>
     2ac:	80 e6       	ldi	r24, 0x60	; 96
     2ae:	88 b9       	out	0x08, r24	; 8
     2b0:	b8 df       	rcall	.-144    	; 0x222 <lcd_enable_pulse>
     2b2:	8f e1       	ldi	r24, 0x1F	; 31
     2b4:	9e e4       	ldi	r25, 0x4E	; 78
     2b6:	01 97       	sbiw	r24, 0x01	; 1
     2b8:	f1 f7       	brne	.-4      	; 0x2b6 <lcd_init+0x7e>
     2ba:	00 c0       	rjmp	.+0      	; 0x2bc <lcd_init+0x84>
     2bc:	00 00       	nop
     2be:	df 91       	pop	r29
     2c0:	cf 91       	pop	r28
     2c2:	08 95       	ret

000002c4 <lcd_write_char>:
     2c4:	cf 93       	push	r28
     2c6:	c8 2f       	mov	r28, r24
     2c8:	2a e6       	ldi	r18, 0x6A	; 106
     2ca:	2a 95       	dec	r18
     2cc:	f1 f7       	brne	.-4      	; 0x2ca <lcd_write_char+0x6>
     2ce:	00 c0       	rjmp	.+0      	; 0x2d0 <lcd_write_char+0xc>
     2d0:	80 7f       	andi	r24, 0xF0	; 240
     2d2:	84 60       	ori	r24, 0x04	; 4
     2d4:	88 b9       	out	0x08, r24	; 8
     2d6:	a5 df       	rcall	.-182    	; 0x222 <lcd_enable_pulse>
     2d8:	20 e1       	ldi	r18, 0x10	; 16
     2da:	c2 9f       	mul	r28, r18
     2dc:	c0 01       	movw	r24, r0
     2de:	11 24       	eor	r1, r1
     2e0:	84 60       	ori	r24, 0x04	; 4
     2e2:	88 b9       	out	0x08, r24	; 8
     2e4:	9e df       	rcall	.-196    	; 0x222 <lcd_enable_pulse>
     2e6:	cf 91       	pop	r28
     2e8:	08 95       	ret

000002ea <lcd_set_cursor_position>:
     2ea:	cf 93       	push	r28
     2ec:	2a e6       	ldi	r18, 0x6A	; 106
     2ee:	2a 95       	dec	r18
     2f0:	f1 f7       	brne	.-4      	; 0x2ee <lcd_set_cursor_position+0x4>
     2f2:	00 c0       	rjmp	.+0      	; 0x2f4 <lcd_set_cursor_position+0xa>
     2f4:	83 34       	cpi	r24, 0x43	; 67
     2f6:	60 f4       	brcc	.+24     	; 0x310 <lcd_set_cursor_position+0x26>
     2f8:	c8 2f       	mov	r28, r24
     2fa:	c0 68       	ori	r28, 0x80	; 128
     2fc:	80 7f       	andi	r24, 0xF0	; 240
     2fe:	80 68       	ori	r24, 0x80	; 128
     300:	88 b9       	out	0x08, r24	; 8
     302:	8f df       	rcall	.-226    	; 0x222 <lcd_enable_pulse>
     304:	20 e1       	ldi	r18, 0x10	; 16
     306:	c2 9f       	mul	r28, r18
     308:	c0 01       	movw	r24, r0
     30a:	11 24       	eor	r1, r1
     30c:	88 b9       	out	0x08, r24	; 8
     30e:	89 df       	rcall	.-238    	; 0x222 <lcd_enable_pulse>
     310:	cf 91       	pop	r28
     312:	08 95       	ret

00000314 <lcd_write_string>:
     314:	cf 93       	push	r28
     316:	df 93       	push	r29
     318:	ec 01       	movw	r28, r24
     31a:	02 c0       	rjmp	.+4      	; 0x320 <lcd_write_string+0xc>
     31c:	21 96       	adiw	r28, 0x01	; 1
     31e:	d2 df       	rcall	.-92     	; 0x2c4 <lcd_write_char>
     320:	88 81       	ld	r24, Y
     322:	81 11       	cpse	r24, r1
     324:	fb cf       	rjmp	.-10     	; 0x31c <lcd_write_string+0x8>
     326:	df 91       	pop	r29
     328:	cf 91       	pop	r28
     32a:	08 95       	ret

0000032c <port_init>:
* Output:
* Notes:
******************************************************************************/
void port_init(void)
{
	DDRA = (0<<PA0) | (0<<PA1) | (0<<PA2) | (0<<PA3) | (0<<PA4);
     32c:	11 b8       	out	0x01, r1	; 1
	PORTA = (1<<PA0) | (1<<PA1) | (1<<PA2) | (1<<PA3) | (1<<PA4);
     32e:	8f e1       	ldi	r24, 0x1F	; 31
     330:	82 b9       	out	0x02, r24	; 2
	
	DDRD = (0<<PD0);
     332:	1a b8       	out	0x0a, r1	; 10
	PORTD = (1<<PD0);
     334:	81 e0       	ldi	r24, 0x01	; 1
     336:	8b b9       	out	0x0b, r24	; 11
	
	DDRB = 0xff;
     338:	8f ef       	ldi	r24, 0xFF	; 255
     33a:	84 b9       	out	0x04, r24	; 4
	PORTB = 0;
     33c:	15 b8       	out	0x05, r1	; 5
	
	DDRF = (1<<PF1) | (1<<PF2);
     33e:	86 e0       	ldi	r24, 0x06	; 6
     340:	80 bb       	out	0x10, r24	; 16
	PORTF = (1<<PF1) | (1<<PF2);
     342:	81 bb       	out	0x11, r24	; 17
	
	DDRC = (1<<LCD_E) | (1<<LCD_RS) | (1<<LCD_D7) | (1<<LCD_D6) | (1<<LCD_D5) | (1<<LCD_D4);
     344:	8c ef       	ldi	r24, 0xFC	; 252
     346:	87 b9       	out	0x07, r24	; 7
	PORTC = (0<<LCD_E) | (0<<LCD_RS) | (0<<LCD_D7) | (0<<LCD_D6) | (0<<LCD_D5) | (0<<LCD_D4);
     348:	18 b8       	out	0x08, r1	; 8
     34a:	08 95       	ret

0000034c <calc_month_length>:
* Description:      calculates the length of a month
* Input:			month, year
* Output:			the length of the month, either: 28, 29, 30, 31
* Notes:
******************************************************************************/
uint8_t calc_month_length(uint8_t month, uint16_t year) {
     34c:	ab 01       	movw	r20, r22
	switch(month) {
     34e:	90 e0       	ldi	r25, 0x00	; 0
     350:	fc 01       	movw	r30, r24
     352:	31 97       	sbiw	r30, 0x01	; 1
     354:	ec 30       	cpi	r30, 0x0C	; 12
     356:	f1 05       	cpc	r31, r1
     358:	b8 f5       	brcc	.+110    	; 0x3c8 <calc_month_length+0x7c>
     35a:	e6 5b       	subi	r30, 0xB6	; 182
     35c:	ff 4f       	sbci	r31, 0xFF	; 255
     35e:	0c 94 7e 0b 	jmp	0x16fc	; 0x16fc <__tablejump2__>
		case 1: return 31;
		case 2: {
			if((year % 400) == 0 || ((year % 4) == 0 && (year % 100) != 0)) return 29;
     362:	9b 01       	movw	r18, r22
     364:	32 95       	swap	r19
     366:	22 95       	swap	r18
     368:	2f 70       	andi	r18, 0x0F	; 15
     36a:	23 27       	eor	r18, r19
     36c:	3f 70       	andi	r19, 0x0F	; 15
     36e:	23 27       	eor	r18, r19
     370:	ae e3       	ldi	r26, 0x3E	; 62
     372:	ba e0       	ldi	r27, 0x0A	; 10
     374:	0e 94 87 0b 	call	0x170e	; 0x170e <__umulhisi3>
     378:	20 e9       	ldi	r18, 0x90	; 144
     37a:	31 e0       	ldi	r19, 0x01	; 1
     37c:	bc 01       	movw	r22, r24
     37e:	62 9f       	mul	r22, r18
     380:	c0 01       	movw	r24, r0
     382:	63 9f       	mul	r22, r19
     384:	90 0d       	add	r25, r0
     386:	72 9f       	mul	r23, r18
     388:	90 0d       	add	r25, r0
     38a:	11 24       	eor	r1, r1
     38c:	48 17       	cp	r20, r24
     38e:	59 07       	cpc	r21, r25
     390:	01 f1       	breq	.+64     	; 0x3d2 <calc_month_length+0x86>
     392:	ca 01       	movw	r24, r20
     394:	83 70       	andi	r24, 0x03	; 3
     396:	99 27       	eor	r25, r25
     398:	89 2b       	or	r24, r25
     39a:	e9 f4       	brne	.+58     	; 0x3d6 <calc_month_length+0x8a>
     39c:	9a 01       	movw	r18, r20
     39e:	36 95       	lsr	r19
     3a0:	27 95       	ror	r18
     3a2:	36 95       	lsr	r19
     3a4:	27 95       	ror	r18
     3a6:	ab e7       	ldi	r26, 0x7B	; 123
     3a8:	b4 e1       	ldi	r27, 0x14	; 20
     3aa:	0e 94 87 0b 	call	0x170e	; 0x170e <__umulhisi3>
     3ae:	96 95       	lsr	r25
     3b0:	87 95       	ror	r24
     3b2:	64 e6       	ldi	r22, 0x64	; 100
     3b4:	68 9f       	mul	r22, r24
     3b6:	90 01       	movw	r18, r0
     3b8:	69 9f       	mul	r22, r25
     3ba:	30 0d       	add	r19, r0
     3bc:	11 24       	eor	r1, r1
     3be:	42 17       	cp	r20, r18
     3c0:	53 07       	cpc	r21, r19
     3c2:	59 f4       	brne	.+22     	; 0x3da <calc_month_length+0x8e>
			else return 28;
     3c4:	8c e1       	ldi	r24, 0x1C	; 28
     3c6:	08 95       	ret
		case 9: return 30;
		case 10: return 31;
		case 11: return 30;
		case 12: return 31;
	}
}
     3c8:	08 95       	ret
* Output:			the length of the month, either: 28, 29, 30, 31
* Notes:
******************************************************************************/
uint8_t calc_month_length(uint8_t month, uint16_t year) {
	switch(month) {
		case 1: return 31;
     3ca:	8f e1       	ldi	r24, 0x1F	; 31
     3cc:	08 95       	ret
		case 2: {
			if((year % 400) == 0 || ((year % 4) == 0 && (year % 100) != 0)) return 29;
			else return 28;
		}
		case 3: return 31;
		case 4: return 30;
     3ce:	8e e1       	ldi	r24, 0x1E	; 30
     3d0:	08 95       	ret
******************************************************************************/
uint8_t calc_month_length(uint8_t month, uint16_t year) {
	switch(month) {
		case 1: return 31;
		case 2: {
			if((year % 400) == 0 || ((year % 4) == 0 && (year % 100) != 0)) return 29;
     3d2:	8d e1       	ldi	r24, 0x1D	; 29
     3d4:	08 95       	ret
			else return 28;
     3d6:	8c e1       	ldi	r24, 0x1C	; 28
     3d8:	08 95       	ret
******************************************************************************/
uint8_t calc_month_length(uint8_t month, uint16_t year) {
	switch(month) {
		case 1: return 31;
		case 2: {
			if((year % 400) == 0 || ((year % 4) == 0 && (year % 100) != 0)) return 29;
     3da:	8d e1       	ldi	r24, 0x1D	; 29
		case 9: return 30;
		case 10: return 31;
		case 11: return 30;
		case 12: return 31;
	}
}
     3dc:	08 95       	ret

000003de <main>:
* Input:
* Output:
* Notes:
******************************************************************************/
int main(void)
{
     3de:	cf 93       	push	r28
     3e0:	df 93       	push	r29
     3e2:	cd b7       	in	r28, 0x3d	; 61
     3e4:	de b7       	in	r29, 0x3e	; 62
     3e6:	e9 97       	sbiw	r28, 0x39	; 57
     3e8:	0f b6       	in	r0, 0x3f	; 63
     3ea:	f8 94       	cli
     3ec:	de bf       	out	0x3e, r29	; 62
     3ee:	0f be       	out	0x3f, r0	; 63
     3f0:	cd bf       	out	0x3d, r28	; 61
	port_init();
     3f2:	9c df       	rcall	.-200    	; 0x32c <port_init>
	timer_init();
     3f4:	66 d4       	rcall	.+2252   	; 0xcc2 <timer_init>
	external_int_init();
     3f6:	6d d4       	rcall	.+2266   	; 0xcd2 <external_int_init>
	uart0_init(BAUD9600);
     3f8:	83 e3       	ldi	r24, 0x33	; 51
     3fa:	90 e0       	ldi	r25, 0x00	; 0
	lcd_init();
     3fc:	87 d7       	rcall	.+3854   	; 0x130c <uart0_init>
     3fe:	1c df       	rcall	.-456    	; 0x238 <lcd_init>
	adc_init();
     400:	6e d4       	rcall	.+2268   	; 0xcde <adc_init>
     402:	c5 d5       	rcall	.+2954   	; 0xf8e <twi_init>
	
	// TWI initialization
	twi_init();
     404:	72 de       	rcall	.-796    	; 0xea <can_init>
     406:	78 94       	sei
	
	// CAN initialization
	can_init();
     408:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <task_10ms>
	
	sei();
     40c:	88 23       	and	r24, r24
	char string_for_write[50];
	
    /* Replace with your application code */
    while (1) 
    {
		if(task_10ms)
     40e:	09 f4       	brne	.+2      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
     410:	e4 c1       	rjmp	.+968    	; 0x7da <__LOCK_REGION_LENGTH__+0x3da>
     412:	00 99       	sbic	0x00, 0	; 0
     414:	42 c0       	rjmp	.+132    	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
     416:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <PA0_pushed>
		{
			// Set time and save time -> BUTTON1 logic
			if((PINA & (1<<PA0)) == 0 && PA0_pushed == FALSE) {
     41a:	81 11       	cpse	r24, r1
     41c:	3e c0       	rjmp	.+124    	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
     41e:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <curr_edit>
     422:	82 30       	cpi	r24, 0x02	; 2
				if(curr_edit == NOEDIT || curr_edit == TIME) {
     424:	11 f0       	breq	.+4      	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
     426:	81 11       	cpse	r24, r1
     428:	35 c0       	rjmp	.+106    	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
     42a:	95 b1       	in	r25, 0x05	; 5
     42c:	81 e0       	ldi	r24, 0x01	; 1
     42e:	89 27       	eor	r24, r25
					PORTB ^= (1<<PB0);
     430:	85 b9       	out	0x05, r24	; 5
     432:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <curr_edit>
     436:	10 92 92 01 	sts	0x0192, r1	; 0x800192 <edited_value>
					curr_edit = TIME;
     43a:	85 e0       	ldi	r24, 0x05	; 5
					
					edited_value = 0;
     43c:	e3 e0       	ldi	r30, 0x03	; 3
     43e:	f1 e0       	ldi	r31, 0x01	; 1
					sprintf(edited_text, "PERC");
     440:	a7 ea       	ldi	r26, 0xA7	; 167
     442:	b1 e0       	ldi	r27, 0x01	; 1
     444:	01 90       	ld	r0, Z+
     446:	0d 92       	st	X+, r0
     448:	8a 95       	dec	r24
     44a:	e1 f7       	brne	.-8      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
     44c:	80 91 a5 01 	lds	r24, 0x01A5	; 0x8001a5 <timer_cnt>
     450:	90 91 a6 01 	lds	r25, 0x01A6	; 0x8001a6 <timer_cnt+0x1>
					
					time_0 = timer_cnt;
     454:	90 93 9b 01 	sts	0x019B, r25	; 0x80019b <time_0+0x1>
     458:	80 93 9a 01 	sts	0x019A, r24	; 0x80019a <time_0>
     45c:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <time_edit_save>
     460:	81 30       	cpi	r24, 0x01	; 1
					
					if(time_edit_save == SAVE) {
     462:	19 f4       	brne	.+6      	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
     464:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <time_edit_save>
     468:	15 c0       	rjmp	.+42     	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
						time_edit_save = EDIT;
     46a:	81 11       	cpse	r24, r1
     46c:	13 c0       	rjmp	.+38     	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
     46e:	81 e0       	ldi	r24, 0x01	; 1
					} else if(time_edit_save == EDIT) {
     470:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <time_edit_save>
						time_edit_save = SAVE;
     474:	c0 90 93 01 	lds	r12, 0x0193	; 0x800193 <ev>
     478:	d0 90 94 01 	lds	r13, 0x0194	; 0x800194 <ev+0x1>
						twi_mt_mode(curr_edit, masodperc, perc, ora, nap, honap, ev);
     47c:	e0 90 95 01 	lds	r14, 0x0195	; 0x800195 <honap>
     480:	00 91 96 01 	lds	r16, 0x0196	; 0x800196 <nap>
     484:	20 91 97 01 	lds	r18, 0x0197	; 0x800197 <ora>
     488:	40 91 98 01 	lds	r20, 0x0198	; 0x800198 <perc>
     48c:	60 91 99 01 	lds	r22, 0x0199	; 0x800199 <masodperc>
     490:	80 e0       	ldi	r24, 0x00	; 0
     492:	86 d5       	rcall	.+2828   	; 0xfa0 <twi_mt_mode>
     494:	81 e0       	ldi	r24, 0x01	; 1
     496:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <PA0_pushed>
					}
					
				}
				
				PA0_pushed = TRUE;
     49a:	00 9b       	sbis	0x00, 0	; 0
     49c:	06 c0       	rjmp	.+12     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
     49e:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <PA0_pushed>
			}
			if((PINA & (1<<PA0)) == (1<<PA0) && PA0_pushed == TRUE) PA0_pushed = FALSE;
     4a2:	81 30       	cpi	r24, 0x01	; 1
     4a4:	11 f4       	brne	.+4      	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
     4a6:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <PA0_pushed>
     4aa:	04 99       	sbic	0x00, 4	; 0
     4ac:	42 c0       	rjmp	.+132    	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
     4ae:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <PA4_pushed>
			
			// Set date and save date -> BUTTON5 logic
			if((PINA & (1<<PA4)) == 0 && PA4_pushed == FALSE) {
     4b2:	81 11       	cpse	r24, r1
     4b4:	3e c0       	rjmp	.+124    	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
     4b6:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <curr_edit>
     4ba:	81 50       	subi	r24, 0x01	; 1
				if(curr_edit == NOEDIT || curr_edit == DATE) {
     4bc:	82 30       	cpi	r24, 0x02	; 2
     4be:	b0 f5       	brcc	.+108    	; 0x52c <__LOCK_REGION_LENGTH__+0x12c>
     4c0:	85 b1       	in	r24, 0x05	; 5
     4c2:	91 e0       	ldi	r25, 0x01	; 1
     4c4:	89 27       	eor	r24, r25
					PORTB ^= (1<<PB0);
     4c6:	85 b9       	out	0x05, r24	; 5
     4c8:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <curr_edit>
     4cc:	10 92 92 01 	sts	0x0192, r1	; 0x800192 <edited_value>
					curr_edit = DATE;
     4d0:	e7 ea       	ldi	r30, 0xA7	; 167
					
					edited_value = 0;
     4d2:	f1 e0       	ldi	r31, 0x01	; 1
     4d4:	8e e4       	ldi	r24, 0x4E	; 78
					sprintf(edited_text, "NAP");
     4d6:	91 e4       	ldi	r25, 0x41	; 65
     4d8:	91 83       	std	Z+1, r25	; 0x01
     4da:	80 83       	st	Z, r24
     4dc:	80 e5       	ldi	r24, 0x50	; 80
     4de:	90 e0       	ldi	r25, 0x00	; 0
     4e0:	93 83       	std	Z+3, r25	; 0x03
     4e2:	82 83       	std	Z+2, r24	; 0x02
     4e4:	80 91 a5 01 	lds	r24, 0x01A5	; 0x8001a5 <timer_cnt>
     4e8:	90 91 a6 01 	lds	r25, 0x01A6	; 0x8001a6 <timer_cnt+0x1>
					
					time_0 = timer_cnt;
     4ec:	90 93 9b 01 	sts	0x019B, r25	; 0x80019b <time_0+0x1>
     4f0:	80 93 9a 01 	sts	0x019A, r24	; 0x80019a <time_0>
     4f4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     4f8:	81 30       	cpi	r24, 0x01	; 1
					
					if(date_edit_save == SAVE) {
     4fa:	19 f4       	brne	.+6      	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
     4fc:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
     500:	15 c0       	rjmp	.+42     	; 0x52c <__LOCK_REGION_LENGTH__+0x12c>
						date_edit_save = EDIT;
     502:	81 11       	cpse	r24, r1
     504:	13 c0       	rjmp	.+38     	; 0x52c <__LOCK_REGION_LENGTH__+0x12c>
     506:	81 e0       	ldi	r24, 0x01	; 1
					} else if(date_edit_save == EDIT) {
     508:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
						date_edit_save = SAVE;
     50c:	10 92 99 01 	sts	0x0199, r1	; 0x800199 <masodperc>
     510:	c0 90 93 01 	lds	r12, 0x0193	; 0x800193 <ev>
						masodperc = 0;
     514:	d0 90 94 01 	lds	r13, 0x0194	; 0x800194 <ev+0x1>
						twi_mt_mode(curr_edit, masodperc, perc, ora, nap, honap, ev);
     518:	e0 90 95 01 	lds	r14, 0x0195	; 0x800195 <honap>
     51c:	00 91 96 01 	lds	r16, 0x0196	; 0x800196 <nap>
     520:	20 91 97 01 	lds	r18, 0x0197	; 0x800197 <ora>
     524:	40 91 98 01 	lds	r20, 0x0198	; 0x800198 <perc>
     528:	60 e0       	ldi	r22, 0x00	; 0
     52a:	3a d5       	rcall	.+2676   	; 0xfa0 <twi_mt_mode>
     52c:	81 e0       	ldi	r24, 0x01	; 1
     52e:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <PA4_pushed>
					}
				}
				
				PA4_pushed = TRUE;
     532:	04 9b       	sbis	0x00, 4	; 0
     534:	06 c0       	rjmp	.+12     	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
     536:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <PA4_pushed>
			}
			if((PINA & (1<<PA4)) == (1<<PA4) && PA4_pushed == TRUE) PA4_pushed = FALSE; 
     53a:	81 30       	cpi	r24, 0x01	; 1
     53c:	11 f4       	brne	.+4      	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
     53e:	10 92 9c 01 	sts	0x019C, r1	; 0x80019c <PA4_pushed>
     542:	03 99       	sbic	0x00, 3	; 0
     544:	61 c0       	rjmp	.+194    	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
     546:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <PA3_pushed>
			
			// change between values that will be edited -> BUTTON4 logic
			if((PINA & (1<<PA3)) == 0 && PA3_pushed == FALSE) {
     54a:	81 11       	cpse	r24, r1
     54c:	5d c0       	rjmp	.+186    	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
     54e:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <curr_edit>
     552:	81 11       	cpse	r24, r1
				if(curr_edit == TIME) {
     554:	26 c0       	rjmp	.+76     	; 0x5a2 <__LOCK_REGION_LENGTH__+0x1a2>
     556:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <edited_value>
     55a:	81 30       	cpi	r24, 0x01	; 1
					if(edited_value != 1) edited_value++;
     55c:	21 f0       	breq	.+8      	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
     55e:	8f 5f       	subi	r24, 0xFF	; 255
     560:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <edited_value>
     564:	02 c0       	rjmp	.+4      	; 0x56a <__LOCK_REGION_LENGTH__+0x16a>
     566:	10 92 92 01 	sts	0x0192, r1	; 0x800192 <edited_value>
     56a:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <edited_value>
					else edited_value = 0;
     56e:	88 23       	and	r24, r24
					
					switch(edited_value) {
     570:	19 f0       	breq	.+6      	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
     572:	81 30       	cpi	r24, 0x01	; 1
     574:	59 f0       	breq	.+22     	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
     576:	45 c0       	rjmp	.+138    	; 0x602 <__LOCK_REGION_LENGTH__+0x202>
     578:	85 e0       	ldi	r24, 0x05	; 5
     57a:	e3 e0       	ldi	r30, 0x03	; 3
     57c:	f1 e0       	ldi	r31, 0x01	; 1
						case 0: {
							sprintf(edited_text, "PERC");
     57e:	a7 ea       	ldi	r26, 0xA7	; 167
     580:	b1 e0       	ldi	r27, 0x01	; 1
     582:	01 90       	ld	r0, Z+
     584:	0d 92       	st	X+, r0
     586:	8a 95       	dec	r24
     588:	e1 f7       	brne	.-8      	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
     58a:	3b c0       	rjmp	.+118    	; 0x602 <__LOCK_REGION_LENGTH__+0x202>
     58c:	e7 ea       	ldi	r30, 0xA7	; 167
     58e:	f1 e0       	ldi	r31, 0x01	; 1
							break;
     590:	8f e4       	ldi	r24, 0x4F	; 79
						}
						case 1: {
							sprintf(edited_text, "ORA");
     592:	92 e5       	ldi	r25, 0x52	; 82
     594:	91 83       	std	Z+1, r25	; 0x01
     596:	80 83       	st	Z, r24
     598:	81 e4       	ldi	r24, 0x41	; 65
     59a:	90 e0       	ldi	r25, 0x00	; 0
     59c:	93 83       	std	Z+3, r25	; 0x03
     59e:	82 83       	std	Z+2, r24	; 0x02
     5a0:	30 c0       	rjmp	.+96     	; 0x602 <__LOCK_REGION_LENGTH__+0x202>
     5a2:	81 30       	cpi	r24, 0x01	; 1
     5a4:	71 f5       	brne	.+92     	; 0x602 <__LOCK_REGION_LENGTH__+0x202>
							break;
     5a6:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <edited_value>
						}
					}
					
				} else if(curr_edit == DATE) {
     5aa:	82 30       	cpi	r24, 0x02	; 2
					if(edited_value != 2) edited_value++;
     5ac:	21 f0       	breq	.+8      	; 0x5b6 <__LOCK_REGION_LENGTH__+0x1b6>
     5ae:	8f 5f       	subi	r24, 0xFF	; 255
     5b0:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <edited_value>
     5b4:	02 c0       	rjmp	.+4      	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
     5b6:	10 92 92 01 	sts	0x0192, r1	; 0x800192 <edited_value>
     5ba:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <edited_value>
					else edited_value = 0;
     5be:	81 30       	cpi	r24, 0x01	; 1
					
					switch(edited_value) {
     5c0:	79 f0       	breq	.+30     	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
     5c2:	18 f0       	brcs	.+6      	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
     5c4:	82 30       	cpi	r24, 0x02	; 2
     5c6:	b1 f0       	breq	.+44     	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
     5c8:	1c c0       	rjmp	.+56     	; 0x602 <__LOCK_REGION_LENGTH__+0x202>
     5ca:	e7 ea       	ldi	r30, 0xA7	; 167
     5cc:	f1 e0       	ldi	r31, 0x01	; 1
     5ce:	8e e4       	ldi	r24, 0x4E	; 78
						case 0: {
							sprintf(edited_text, "NAP");
     5d0:	91 e4       	ldi	r25, 0x41	; 65
     5d2:	91 83       	std	Z+1, r25	; 0x01
     5d4:	80 83       	st	Z, r24
     5d6:	80 e5       	ldi	r24, 0x50	; 80
     5d8:	90 e0       	ldi	r25, 0x00	; 0
     5da:	93 83       	std	Z+3, r25	; 0x03
     5dc:	82 83       	std	Z+2, r24	; 0x02
     5de:	11 c0       	rjmp	.+34     	; 0x602 <__LOCK_REGION_LENGTH__+0x202>
     5e0:	86 e0       	ldi	r24, 0x06	; 6
     5e2:	e9 e8       	ldi	r30, 0x89	; 137
							break;
     5e4:	f1 e0       	ldi	r31, 0x01	; 1
						}
						case 1: {
							sprintf(edited_text, "HONAP");
     5e6:	a7 ea       	ldi	r26, 0xA7	; 167
     5e8:	b1 e0       	ldi	r27, 0x01	; 1
     5ea:	01 90       	ld	r0, Z+
     5ec:	0d 92       	st	X+, r0
     5ee:	8a 95       	dec	r24
     5f0:	e1 f7       	brne	.-8      	; 0x5ea <__LOCK_REGION_LENGTH__+0x1ea>
     5f2:	07 c0       	rjmp	.+14     	; 0x602 <__LOCK_REGION_LENGTH__+0x202>
     5f4:	e7 ea       	ldi	r30, 0xA7	; 167
     5f6:	f1 e0       	ldi	r31, 0x01	; 1
							break;
     5f8:	85 e4       	ldi	r24, 0x45	; 69
						}
						case 2: {
							sprintf(edited_text, "EV");
     5fa:	96 e5       	ldi	r25, 0x56	; 86
     5fc:	91 83       	std	Z+1, r25	; 0x01
     5fe:	80 83       	st	Z, r24
     600:	12 82       	std	Z+2, r1	; 0x02
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	80 93 9d 01 	sts	0x019D, r24	; 0x80019d <PA3_pushed>
							break;
						}
					}
				}
				
				PA3_pushed = TRUE;
     608:	03 9b       	sbis	0x00, 3	; 0
     60a:	06 c0       	rjmp	.+12     	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
     60c:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <PA3_pushed>
			}
			if((PINA & (1<<PA3)) == (1<<PA3) && PA3_pushed == TRUE) PA3_pushed = FALSE;
     610:	81 30       	cpi	r24, 0x01	; 1
     612:	11 f4       	brne	.+4      	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
     614:	10 92 9d 01 	sts	0x019D, r1	; 0x80019d <PA3_pushed>
     618:	01 99       	sbic	0x00, 1	; 0
     61a:	65 c0       	rjmp	.+202    	; 0x6e6 <__LOCK_REGION_LENGTH__+0x2e6>
     61c:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <PA1_pushed>
			
			// increase the actual value of the edited value -> BUTTON2 logic
			if((PINA & (1<<PA1)) == 0 && PA1_pushed == FALSE) {
     620:	81 11       	cpse	r24, r1
     622:	61 c0       	rjmp	.+194    	; 0x6e6 <__LOCK_REGION_LENGTH__+0x2e6>
     624:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <curr_edit>
     628:	81 11       	cpse	r24, r1
				if(curr_edit == TIME) {
     62a:	1d c0       	rjmp	.+58     	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
     62c:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <edited_value>
     630:	88 23       	and	r24, r24
					switch(edited_value) {
     632:	19 f0       	breq	.+6      	; 0x63a <__LOCK_REGION_LENGTH__+0x23a>
     634:	81 30       	cpi	r24, 0x01	; 1
     636:	61 f0       	breq	.+24     	; 0x650 <__LOCK_REGION_LENGTH__+0x250>
     638:	53 c0       	rjmp	.+166    	; 0x6e0 <__LOCK_REGION_LENGTH__+0x2e0>
     63a:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <perc>
     63e:	8b 33       	cpi	r24, 0x3B	; 59
						case 0: {
							if(perc != 59) perc++;
     640:	21 f0       	breq	.+8      	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
     642:	8f 5f       	subi	r24, 0xFF	; 255
     644:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <perc>
     648:	4b c0       	rjmp	.+150    	; 0x6e0 <__LOCK_REGION_LENGTH__+0x2e0>
     64a:	10 92 98 01 	sts	0x0198, r1	; 0x800198 <perc>
     64e:	48 c0       	rjmp	.+144    	; 0x6e0 <__LOCK_REGION_LENGTH__+0x2e0>
							else perc = 0;
     650:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <ora>
     654:	87 31       	cpi	r24, 0x17	; 23
							break;
						}
						case 1: {
							if(ora != 23) ora++;
     656:	21 f0       	breq	.+8      	; 0x660 <__LOCK_REGION_LENGTH__+0x260>
     658:	8f 5f       	subi	r24, 0xFF	; 255
     65a:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <ora>
     65e:	40 c0       	rjmp	.+128    	; 0x6e0 <__LOCK_REGION_LENGTH__+0x2e0>
     660:	10 92 97 01 	sts	0x0197, r1	; 0x800197 <ora>
     664:	3d c0       	rjmp	.+122    	; 0x6e0 <__LOCK_REGION_LENGTH__+0x2e0>
							else ora = 0;
     666:	81 30       	cpi	r24, 0x01	; 1
     668:	d9 f5       	brne	.+118    	; 0x6e0 <__LOCK_REGION_LENGTH__+0x2e0>
     66a:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <edited_value>
							break;
						}
					}
				} else if(curr_edit == DATE) {
     66e:	81 30       	cpi	r24, 0x01	; 1
					switch(edited_value) {
     670:	b9 f0       	breq	.+46     	; 0x6a0 <__LOCK_REGION_LENGTH__+0x2a0>
     672:	18 f0       	brcs	.+6      	; 0x67a <__LOCK_REGION_LENGTH__+0x27a>
     674:	82 30       	cpi	r24, 0x02	; 2
     676:	01 f1       	breq	.+64     	; 0x6b8 <__LOCK_REGION_LENGTH__+0x2b8>
     678:	33 c0       	rjmp	.+102    	; 0x6e0 <__LOCK_REGION_LENGTH__+0x2e0>
     67a:	60 91 93 01 	lds	r22, 0x0193	; 0x800193 <ev>
						case 0: {
							if(nap != calc_month_length(honap, ev)) nap++;
     67e:	70 91 94 01 	lds	r23, 0x0194	; 0x800194 <ev+0x1>
     682:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <honap>
     686:	62 de       	rcall	.-828    	; 0x34c <calc_month_length>
     688:	90 91 96 01 	lds	r25, 0x0196	; 0x800196 <nap>
     68c:	89 17       	cp	r24, r25
     68e:	21 f0       	breq	.+8      	; 0x698 <__LOCK_REGION_LENGTH__+0x298>
     690:	9f 5f       	subi	r25, 0xFF	; 255
     692:	90 93 96 01 	sts	0x0196, r25	; 0x800196 <nap>
     696:	24 c0       	rjmp	.+72     	; 0x6e0 <__LOCK_REGION_LENGTH__+0x2e0>
     698:	81 e0       	ldi	r24, 0x01	; 1
     69a:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <nap>
							else nap = 1;
     69e:	20 c0       	rjmp	.+64     	; 0x6e0 <__LOCK_REGION_LENGTH__+0x2e0>
     6a0:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <honap>
     6a4:	8c 30       	cpi	r24, 0x0C	; 12
							break;
						}
						case 1: {
							if(honap != 12) honap++;
     6a6:	21 f0       	breq	.+8      	; 0x6b0 <__LOCK_REGION_LENGTH__+0x2b0>
     6a8:	8f 5f       	subi	r24, 0xFF	; 255
     6aa:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <honap>
     6ae:	18 c0       	rjmp	.+48     	; 0x6e0 <__LOCK_REGION_LENGTH__+0x2e0>
     6b0:	81 e0       	ldi	r24, 0x01	; 1
     6b2:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <honap>
							else honap = 1;
     6b6:	14 c0       	rjmp	.+40     	; 0x6e0 <__LOCK_REGION_LENGTH__+0x2e0>
     6b8:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <ev>
     6bc:	90 91 94 01 	lds	r25, 0x0194	; 0x800194 <ev+0x1>
							break;
						}
						case 2: {
							if(ev != 2099) ev++;
     6c0:	83 33       	cpi	r24, 0x33	; 51
     6c2:	28 e0       	ldi	r18, 0x08	; 8
     6c4:	92 07       	cpc	r25, r18
     6c6:	31 f0       	breq	.+12     	; 0x6d4 <__LOCK_REGION_LENGTH__+0x2d4>
     6c8:	01 96       	adiw	r24, 0x01	; 1
     6ca:	90 93 94 01 	sts	0x0194, r25	; 0x800194 <ev+0x1>
     6ce:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ev>
     6d2:	06 c0       	rjmp	.+12     	; 0x6e0 <__LOCK_REGION_LENGTH__+0x2e0>
     6d4:	80 ed       	ldi	r24, 0xD0	; 208
     6d6:	97 e0       	ldi	r25, 0x07	; 7
     6d8:	90 93 94 01 	sts	0x0194, r25	; 0x800194 <ev+0x1>
							else ev = 2000;
     6dc:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ev>
     6e0:	81 e0       	ldi	r24, 0x01	; 1
     6e2:	80 93 9f 01 	sts	0x019F, r24	; 0x80019f <PA1_pushed>
							break;
						}
					}
				}
				
				PA1_pushed = TRUE;
     6e6:	01 9b       	sbis	0x00, 1	; 0
     6e8:	06 c0       	rjmp	.+12     	; 0x6f6 <__LOCK_REGION_LENGTH__+0x2f6>
     6ea:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <PA1_pushed>
			}
			if((PINA & (1<<PA1)) == (1<<PA1) && PA1_pushed == TRUE) PA1_pushed = FALSE;
     6ee:	81 30       	cpi	r24, 0x01	; 1
     6f0:	11 f4       	brne	.+4      	; 0x6f6 <__LOCK_REGION_LENGTH__+0x2f6>
     6f2:	10 92 9f 01 	sts	0x019F, r1	; 0x80019f <PA1_pushed>
     6f6:	02 99       	sbic	0x00, 2	; 0
     6f8:	66 c0       	rjmp	.+204    	; 0x7c6 <__LOCK_REGION_LENGTH__+0x3c6>
     6fa:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <PA2_pushed>
			
			// decrease the actual value of the edited value -> BUTTON3 logic
			if((PINA & (1<<PA2)) == 0 && PA2_pushed == FALSE) {
     6fe:	81 11       	cpse	r24, r1
     700:	62 c0       	rjmp	.+196    	; 0x7c6 <__LOCK_REGION_LENGTH__+0x3c6>
     702:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <curr_edit>
     706:	81 11       	cpse	r24, r1
				if(curr_edit == TIME) {
     708:	1f c0       	rjmp	.+62     	; 0x748 <__LOCK_REGION_LENGTH__+0x348>
     70a:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <edited_value>
     70e:	88 23       	and	r24, r24
					switch(edited_value) {
     710:	19 f0       	breq	.+6      	; 0x718 <__LOCK_REGION_LENGTH__+0x318>
     712:	81 30       	cpi	r24, 0x01	; 1
     714:	69 f0       	breq	.+26     	; 0x730 <__LOCK_REGION_LENGTH__+0x330>
     716:	54 c0       	rjmp	.+168    	; 0x7c0 <__LOCK_REGION_LENGTH__+0x3c0>
     718:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <perc>
     71c:	88 23       	and	r24, r24
						case 0: {
							if(perc != 0) perc--;
     71e:	21 f0       	breq	.+8      	; 0x728 <__LOCK_REGION_LENGTH__+0x328>
     720:	81 50       	subi	r24, 0x01	; 1
     722:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <perc>
     726:	4c c0       	rjmp	.+152    	; 0x7c0 <__LOCK_REGION_LENGTH__+0x3c0>
     728:	8b e3       	ldi	r24, 0x3B	; 59
     72a:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <perc>
							else perc = 59;
     72e:	48 c0       	rjmp	.+144    	; 0x7c0 <__LOCK_REGION_LENGTH__+0x3c0>
     730:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <ora>
     734:	88 23       	and	r24, r24
							break;
						}
						case 1: {
							if(ora != 0) ora--;
     736:	21 f0       	breq	.+8      	; 0x740 <__LOCK_REGION_LENGTH__+0x340>
     738:	81 50       	subi	r24, 0x01	; 1
     73a:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <ora>
     73e:	40 c0       	rjmp	.+128    	; 0x7c0 <__LOCK_REGION_LENGTH__+0x3c0>
     740:	87 e1       	ldi	r24, 0x17	; 23
     742:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <ora>
							else ora = 23;
     746:	3c c0       	rjmp	.+120    	; 0x7c0 <__LOCK_REGION_LENGTH__+0x3c0>
     748:	81 30       	cpi	r24, 0x01	; 1
     74a:	d1 f5       	brne	.+116    	; 0x7c0 <__LOCK_REGION_LENGTH__+0x3c0>
     74c:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <edited_value>
							break;
						}
					}
					} else if(curr_edit == DATE) {
     750:	81 30       	cpi	r24, 0x01	; 1
					switch(edited_value) {
     752:	b1 f0       	breq	.+44     	; 0x780 <__LOCK_REGION_LENGTH__+0x380>
     754:	18 f0       	brcs	.+6      	; 0x75c <__LOCK_REGION_LENGTH__+0x35c>
     756:	82 30       	cpi	r24, 0x02	; 2
     758:	f9 f0       	breq	.+62     	; 0x798 <__LOCK_REGION_LENGTH__+0x398>
     75a:	32 c0       	rjmp	.+100    	; 0x7c0 <__LOCK_REGION_LENGTH__+0x3c0>
     75c:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <nap>
     760:	81 30       	cpi	r24, 0x01	; 1
						case 0: {
							if(nap != 1) nap--;
     762:	21 f0       	breq	.+8      	; 0x76c <__LOCK_REGION_LENGTH__+0x36c>
     764:	81 50       	subi	r24, 0x01	; 1
     766:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <nap>
     76a:	2a c0       	rjmp	.+84     	; 0x7c0 <__LOCK_REGION_LENGTH__+0x3c0>
     76c:	60 91 93 01 	lds	r22, 0x0193	; 0x800193 <ev>
							else nap = calc_month_length(honap, ev);
     770:	70 91 94 01 	lds	r23, 0x0194	; 0x800194 <ev+0x1>
     774:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <honap>
     778:	e9 dd       	rcall	.-1070   	; 0x34c <calc_month_length>
     77a:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <nap>
     77e:	20 c0       	rjmp	.+64     	; 0x7c0 <__LOCK_REGION_LENGTH__+0x3c0>
     780:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <honap>
     784:	81 30       	cpi	r24, 0x01	; 1
							break;
						}
						case 1: {
							if(honap != 1) honap--;
     786:	21 f0       	breq	.+8      	; 0x790 <__LOCK_REGION_LENGTH__+0x390>
     788:	81 50       	subi	r24, 0x01	; 1
     78a:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <honap>
     78e:	18 c0       	rjmp	.+48     	; 0x7c0 <__LOCK_REGION_LENGTH__+0x3c0>
     790:	8c e0       	ldi	r24, 0x0C	; 12
     792:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <honap>
							else honap = 12;
     796:	14 c0       	rjmp	.+40     	; 0x7c0 <__LOCK_REGION_LENGTH__+0x3c0>
     798:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <ev>
     79c:	90 91 94 01 	lds	r25, 0x0194	; 0x800194 <ev+0x1>
							break;
						}
						case 2: {
							if(ev != 2000) ev--;
     7a0:	80 3d       	cpi	r24, 0xD0	; 208
     7a2:	67 e0       	ldi	r22, 0x07	; 7
     7a4:	96 07       	cpc	r25, r22
     7a6:	31 f0       	breq	.+12     	; 0x7b4 <__LOCK_REGION_LENGTH__+0x3b4>
     7a8:	01 97       	sbiw	r24, 0x01	; 1
     7aa:	90 93 94 01 	sts	0x0194, r25	; 0x800194 <ev+0x1>
     7ae:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ev>
     7b2:	06 c0       	rjmp	.+12     	; 0x7c0 <__LOCK_REGION_LENGTH__+0x3c0>
     7b4:	83 e3       	ldi	r24, 0x33	; 51
     7b6:	98 e0       	ldi	r25, 0x08	; 8
     7b8:	90 93 94 01 	sts	0x0194, r25	; 0x800194 <ev+0x1>
							else ev = 2099;
     7bc:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ev>
     7c0:	81 e0       	ldi	r24, 0x01	; 1
     7c2:	80 93 9e 01 	sts	0x019E, r24	; 0x80019e <PA2_pushed>
							break;
						}
					}
				}
				
				PA2_pushed = TRUE;
     7c6:	02 9b       	sbis	0x00, 2	; 0
     7c8:	06 c0       	rjmp	.+12     	; 0x7d6 <__LOCK_REGION_LENGTH__+0x3d6>
     7ca:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <PA2_pushed>
			}
			if((PINA & (1<<PA2)) == (1<<PA2) && PA2_pushed == TRUE) PA2_pushed = FALSE;
     7ce:	81 30       	cpi	r24, 0x01	; 1
     7d0:	11 f4       	brne	.+4      	; 0x7d6 <__LOCK_REGION_LENGTH__+0x3d6>
     7d2:	10 92 9e 01 	sts	0x019E, r1	; 0x80019e <PA2_pushed>
     7d6:	10 92 a4 01 	sts	0x01A4, r1	; 0x8001a4 <task_10ms>
     7da:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <task_100ms>
			
			
			task_10ms=FALSE;
     7de:	88 23       	and	r24, r24
		}
		if(task_100ms)
     7e0:	09 f4       	brne	.+2      	; 0x7e4 <__LOCK_REGION_LENGTH__+0x3e4>
     7e2:	30 c1       	rjmp	.+608    	; 0xa44 <__LOCK_REGION_LENGTH__+0x644>
     7e4:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <curr_edit>
     7e8:	81 11       	cpse	r24, r1
		{
			if(curr_edit == TIME) {
     7ea:	76 c0       	rjmp	.+236    	; 0x8d8 <__LOCK_REGION_LENGTH__+0x4d8>
     7ec:	80 91 a5 01 	lds	r24, 0x01A5	; 0x8001a5 <timer_cnt>
     7f0:	90 91 a6 01 	lds	r25, 0x01A6	; 0x8001a6 <timer_cnt+0x1>
				if(timer_cnt - time_0 < 100) {
     7f4:	20 91 9a 01 	lds	r18, 0x019A	; 0x80019a <time_0>
     7f8:	30 91 9b 01 	lds	r19, 0x019B	; 0x80019b <time_0+0x1>
     7fc:	82 1b       	sub	r24, r18
     7fe:	93 0b       	sbc	r25, r19
     800:	84 36       	cpi	r24, 0x64	; 100
     802:	91 05       	cpc	r25, r1
     804:	d0 f4       	brcc	.+52     	; 0x83a <__LOCK_REGION_LENGTH__+0x43a>
     806:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <time_edit_save>
     80a:	81 11       	cpse	r24, r1
					if(time_edit_save == EDIT) sprintf(string_for_write, "IDO SZERKESZTESE");
     80c:	09 c0       	rjmp	.+18     	; 0x820 <__LOCK_REGION_LENGTH__+0x420>
     80e:	91 e1       	ldi	r25, 0x11	; 17
     810:	e8 e0       	ldi	r30, 0x08	; 8
     812:	f1 e0       	ldi	r31, 0x01	; 1
     814:	de 01       	movw	r26, r28
     816:	11 96       	adiw	r26, 0x01	; 1
     818:	01 90       	ld	r0, Z+
     81a:	0d 92       	st	X+, r0
     81c:	9a 95       	dec	r25
     81e:	e1 f7       	brne	.-8      	; 0x818 <__LOCK_REGION_LENGTH__+0x418>
     820:	81 30       	cpi	r24, 0x01	; 1
     822:	09 f0       	breq	.+2      	; 0x826 <__LOCK_REGION_LENGTH__+0x426>
     824:	59 c0       	rjmp	.+178    	; 0x8d8 <__LOCK_REGION_LENGTH__+0x4d8>
					if(time_edit_save == SAVE) sprintf(string_for_write, "IDO ELMENTVE    ");
     826:	81 e1       	ldi	r24, 0x11	; 17
     828:	e9 e1       	ldi	r30, 0x19	; 25
     82a:	f1 e0       	ldi	r31, 0x01	; 1
     82c:	de 01       	movw	r26, r28
     82e:	11 96       	adiw	r26, 0x01	; 1
     830:	01 90       	ld	r0, Z+
     832:	0d 92       	st	X+, r0
     834:	8a 95       	dec	r24
     836:	e1 f7       	brne	.-8      	; 0x830 <__LOCK_REGION_LENGTH__+0x430>
     838:	4f c0       	rjmp	.+158    	; 0x8d8 <__LOCK_REGION_LENGTH__+0x4d8>
     83a:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <time_edit_save>
     83e:	81 11       	cpse	r24, r1
				} else {
					if(time_edit_save == EDIT) sprintf(string_for_write, "%02d:%02d %10s", ora, perc, edited_text);
     840:	1a c0       	rjmp	.+52     	; 0x876 <__LOCK_REGION_LENGTH__+0x476>
     842:	87 ea       	ldi	r24, 0xA7	; 167
     844:	91 e0       	ldi	r25, 0x01	; 1
     846:	9f 93       	push	r25
     848:	8f 93       	push	r24
     84a:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <perc>
     84e:	1f 92       	push	r1
     850:	8f 93       	push	r24
     852:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <ora>
     856:	1f 92       	push	r1
     858:	8f 93       	push	r24
     85a:	8a e2       	ldi	r24, 0x2A	; 42
     85c:	91 e0       	ldi	r25, 0x01	; 1
     85e:	9f 93       	push	r25
     860:	8f 93       	push	r24
     862:	ce 01       	movw	r24, r28
     864:	01 96       	adiw	r24, 0x01	; 1
     866:	9f 93       	push	r25
     868:	8f 93       	push	r24
     86a:	74 d7       	rcall	.+3816   	; 0x1754 <sprintf>
     86c:	0f b6       	in	r0, 0x3f	; 63
     86e:	f8 94       	cli
     870:	de bf       	out	0x3e, r29	; 62
     872:	0f be       	out	0x3f, r0	; 63
     874:	cd bf       	out	0x3d, r28	; 61
     876:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <time_edit_save>
     87a:	81 30       	cpi	r24, 0x01	; 1
					if(time_edit_save == SAVE) {
     87c:	69 f5       	brne	.+90     	; 0x8d8 <__LOCK_REGION_LENGTH__+0x4d8>
     87e:	80 91 91 01 	lds	r24, 0x0191	; 0x800191 <__data_end+0x1>
     882:	8f 93       	push	r24
						sprintf(string_for_write, "%04d%02d%02d %02d%02d %02d", ev, honap, nap, ora, perc, homerseklet);
     884:	80 91 90 01 	lds	r24, 0x0190	; 0x800190 <__data_end>
     888:	8f 93       	push	r24
     88a:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <perc>
     88e:	1f 92       	push	r1
     890:	8f 93       	push	r24
     892:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <ora>
     896:	1f 92       	push	r1
     898:	8f 93       	push	r24
     89a:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <nap>
     89e:	1f 92       	push	r1
     8a0:	8f 93       	push	r24
     8a2:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <honap>
     8a6:	1f 92       	push	r1
     8a8:	8f 93       	push	r24
     8aa:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <ev+0x1>
     8ae:	8f 93       	push	r24
     8b0:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <ev>
     8b4:	8f 93       	push	r24
     8b6:	89 e3       	ldi	r24, 0x39	; 57
     8b8:	91 e0       	ldi	r25, 0x01	; 1
     8ba:	9f 93       	push	r25
     8bc:	8f 93       	push	r24
     8be:	ce 01       	movw	r24, r28
     8c0:	01 96       	adiw	r24, 0x01	; 1
     8c2:	9f 93       	push	r25
     8c4:	8f 93       	push	r24
     8c6:	46 d7       	rcall	.+3724   	; 0x1754 <sprintf>
     8c8:	82 e0       	ldi	r24, 0x02	; 2
     8ca:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <curr_edit>
						// sprintf(string_for_write, "%04d%02d%02d %02d%02d %02d", ev, honap, nap, ora, perc, masodperc);
						curr_edit = NOEDIT;
     8ce:	0f b6       	in	r0, 0x3f	; 63
     8d0:	f8 94       	cli
     8d2:	de bf       	out	0x3e, r29	; 62
     8d4:	0f be       	out	0x3f, r0	; 63
     8d6:	cd bf       	out	0x3d, r28	; 61
     8d8:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <curr_edit>
     8dc:	81 30       	cpi	r24, 0x01	; 1
					}
				}
			}
			
			if(curr_edit == DATE) {
     8de:	09 f0       	breq	.+2      	; 0x8e2 <__LOCK_REGION_LENGTH__+0x4e2>
     8e0:	7c c0       	rjmp	.+248    	; 0x9da <__LOCK_REGION_LENGTH__+0x5da>
     8e2:	80 91 a5 01 	lds	r24, 0x01A5	; 0x8001a5 <timer_cnt>
     8e6:	90 91 a6 01 	lds	r25, 0x01A6	; 0x8001a6 <timer_cnt+0x1>
				if(timer_cnt - time_0 < 100) {
     8ea:	20 91 9a 01 	lds	r18, 0x019A	; 0x80019a <time_0>
     8ee:	30 91 9b 01 	lds	r19, 0x019B	; 0x80019b <time_0+0x1>
     8f2:	82 1b       	sub	r24, r18
     8f4:	93 0b       	sbc	r25, r19
     8f6:	84 36       	cpi	r24, 0x64	; 100
     8f8:	91 05       	cpc	r25, r1
     8fa:	d0 f4       	brcc	.+52     	; 0x930 <__LOCK_REGION_LENGTH__+0x530>
     8fc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     900:	81 11       	cpse	r24, r1
					if(date_edit_save == EDIT) sprintf(string_for_write, "DATUM SZERK.    ");
     902:	09 c0       	rjmp	.+18     	; 0x916 <__LOCK_REGION_LENGTH__+0x516>
     904:	91 e1       	ldi	r25, 0x11	; 17
     906:	e4 e5       	ldi	r30, 0x54	; 84
     908:	f1 e0       	ldi	r31, 0x01	; 1
     90a:	de 01       	movw	r26, r28
     90c:	11 96       	adiw	r26, 0x01	; 1
     90e:	01 90       	ld	r0, Z+
     910:	0d 92       	st	X+, r0
     912:	9a 95       	dec	r25
     914:	e1 f7       	brne	.-8      	; 0x90e <__LOCK_REGION_LENGTH__+0x50e>
     916:	81 30       	cpi	r24, 0x01	; 1
     918:	09 f0       	breq	.+2      	; 0x91c <__LOCK_REGION_LENGTH__+0x51c>
     91a:	5f c0       	rjmp	.+190    	; 0x9da <__LOCK_REGION_LENGTH__+0x5da>
					if(date_edit_save == SAVE) sprintf(string_for_write, "DATUM ELMENTVE  ");
     91c:	81 e1       	ldi	r24, 0x11	; 17
     91e:	e5 e6       	ldi	r30, 0x65	; 101
     920:	f1 e0       	ldi	r31, 0x01	; 1
     922:	de 01       	movw	r26, r28
     924:	11 96       	adiw	r26, 0x01	; 1
     926:	01 90       	ld	r0, Z+
     928:	0d 92       	st	X+, r0
     92a:	8a 95       	dec	r24
     92c:	e1 f7       	brne	.-8      	; 0x926 <__LOCK_REGION_LENGTH__+0x526>
     92e:	55 c0       	rjmp	.+170    	; 0x9da <__LOCK_REGION_LENGTH__+0x5da>
     930:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     934:	81 11       	cpse	r24, r1
				} else {
					if(date_edit_save == EDIT) sprintf(string_for_write, "%04d-%02d-%02d %5s", ev, honap, nap, edited_text);
     936:	20 c0       	rjmp	.+64     	; 0x978 <__LOCK_REGION_LENGTH__+0x578>
     938:	87 ea       	ldi	r24, 0xA7	; 167
     93a:	91 e0       	ldi	r25, 0x01	; 1
     93c:	9f 93       	push	r25
     93e:	8f 93       	push	r24
     940:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <nap>
     944:	1f 92       	push	r1
     946:	8f 93       	push	r24
     948:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <honap>
     94c:	1f 92       	push	r1
     94e:	8f 93       	push	r24
     950:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <ev+0x1>
     954:	8f 93       	push	r24
     956:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <ev>
     95a:	8f 93       	push	r24
     95c:	86 e7       	ldi	r24, 0x76	; 118
     95e:	91 e0       	ldi	r25, 0x01	; 1
     960:	9f 93       	push	r25
     962:	8f 93       	push	r24
     964:	ce 01       	movw	r24, r28
     966:	01 96       	adiw	r24, 0x01	; 1
     968:	9f 93       	push	r25
     96a:	8f 93       	push	r24
     96c:	f3 d6       	rcall	.+3558   	; 0x1754 <sprintf>
     96e:	0f b6       	in	r0, 0x3f	; 63
     970:	f8 94       	cli
     972:	de bf       	out	0x3e, r29	; 62
     974:	0f be       	out	0x3f, r0	; 63
     976:	cd bf       	out	0x3d, r28	; 61
     978:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     97c:	81 30       	cpi	r24, 0x01	; 1
					if(date_edit_save == SAVE) {
     97e:	69 f5       	brne	.+90     	; 0x9da <__LOCK_REGION_LENGTH__+0x5da>
     980:	80 91 91 01 	lds	r24, 0x0191	; 0x800191 <__data_end+0x1>
     984:	8f 93       	push	r24
						sprintf(string_for_write, "%04d%02d%02d %02d%02d %02d", ev, honap, nap, ora, perc, homerseklet);
     986:	80 91 90 01 	lds	r24, 0x0190	; 0x800190 <__data_end>
     98a:	8f 93       	push	r24
     98c:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <perc>
     990:	1f 92       	push	r1
     992:	8f 93       	push	r24
     994:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <ora>
     998:	1f 92       	push	r1
     99a:	8f 93       	push	r24
     99c:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <nap>
     9a0:	1f 92       	push	r1
     9a2:	8f 93       	push	r24
     9a4:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <honap>
     9a8:	1f 92       	push	r1
     9aa:	8f 93       	push	r24
     9ac:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <ev+0x1>
     9b0:	8f 93       	push	r24
     9b2:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <ev>
     9b6:	8f 93       	push	r24
     9b8:	89 e3       	ldi	r24, 0x39	; 57
     9ba:	91 e0       	ldi	r25, 0x01	; 1
     9bc:	9f 93       	push	r25
     9be:	8f 93       	push	r24
     9c0:	ce 01       	movw	r24, r28
     9c2:	01 96       	adiw	r24, 0x01	; 1
     9c4:	9f 93       	push	r25
     9c6:	8f 93       	push	r24
     9c8:	c5 d6       	rcall	.+3466   	; 0x1754 <sprintf>
     9ca:	82 e0       	ldi	r24, 0x02	; 2
     9cc:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <curr_edit>
						// sprintf(string_for_write, "%04d%02d%02d %02d%02d %02d", ev, honap, nap, ora, perc, masodperc);
						curr_edit = NOEDIT;
     9d0:	0f b6       	in	r0, 0x3f	; 63
     9d2:	f8 94       	cli
     9d4:	de bf       	out	0x3e, r29	; 62
     9d6:	0f be       	out	0x3f, r0	; 63
     9d8:	cd bf       	out	0x3d, r28	; 61
     9da:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <curr_edit>
     9de:	82 30       	cpi	r24, 0x02	; 2
					}
				}
			}
			
			if(curr_edit == NOEDIT) {
     9e0:	51 f5       	brne	.+84     	; 0xa36 <__LOCK_REGION_LENGTH__+0x636>
     9e2:	80 91 91 01 	lds	r24, 0x0191	; 0x800191 <__data_end+0x1>
     9e6:	8f 93       	push	r24
				sprintf(string_for_write, "%04d%02d%02d %02d%02d %02d", ev, honap, nap, ora, perc, homerseklet);
     9e8:	80 91 90 01 	lds	r24, 0x0190	; 0x800190 <__data_end>
     9ec:	8f 93       	push	r24
     9ee:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <perc>
     9f2:	1f 92       	push	r1
     9f4:	8f 93       	push	r24
     9f6:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <ora>
     9fa:	1f 92       	push	r1
     9fc:	8f 93       	push	r24
     9fe:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <nap>
     a02:	1f 92       	push	r1
     a04:	8f 93       	push	r24
     a06:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <honap>
     a0a:	1f 92       	push	r1
     a0c:	8f 93       	push	r24
     a0e:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <ev+0x1>
     a12:	8f 93       	push	r24
     a14:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <ev>
     a18:	8f 93       	push	r24
     a1a:	89 e3       	ldi	r24, 0x39	; 57
     a1c:	91 e0       	ldi	r25, 0x01	; 1
     a1e:	9f 93       	push	r25
     a20:	8f 93       	push	r24
     a22:	ce 01       	movw	r24, r28
     a24:	01 96       	adiw	r24, 0x01	; 1
     a26:	9f 93       	push	r25
     a28:	8f 93       	push	r24
     a2a:	94 d6       	rcall	.+3368   	; 0x1754 <sprintf>
     a2c:	0f b6       	in	r0, 0x3f	; 63
     a2e:	f8 94       	cli
     a30:	de bf       	out	0x3e, r29	; 62
     a32:	0f be       	out	0x3f, r0	; 63
     a34:	cd bf       	out	0x3d, r28	; 61
     a36:	80 e0       	ldi	r24, 0x00	; 0
				// sprintf(string_for_write, "%04d%02d%02d %02d%02d %02d", ev, honap, nap, ora, perc, masodperc);
			}
			
			lcd_set_cursor_position(0);
     a38:	58 dc       	rcall	.-1872   	; 0x2ea <lcd_set_cursor_position>
     a3a:	ce 01       	movw	r24, r28
     a3c:	01 96       	adiw	r24, 0x01	; 1
			lcd_write_string(string_for_write);
     a3e:	6a dc       	rcall	.-1836   	; 0x314 <lcd_write_string>
     a40:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <task_100ms>
     a44:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <task_500ms>
			
			
			task_100ms=FALSE;
     a48:	88 23       	and	r24, r24
		}
		if(task_500ms)
     a4a:	b9 f0       	breq	.+46     	; 0xa7a <__LOCK_REGION_LENGTH__+0x67a>
     a4c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <curr_edit>
     a50:	82 30       	cpi	r24, 0x02	; 2
		{
			if(curr_edit == NOEDIT) {
     a52:	89 f4       	brne	.+34     	; 0xa76 <__LOCK_REGION_LENGTH__+0x676>
     a54:	0f 2e       	mov	r0, r31
     a56:	f3 e9       	ldi	r31, 0x93	; 147
				twi_mr_mode(&masodperc, &perc, &ora, &nap, &honap, &ev);	
     a58:	ef 2e       	mov	r14, r31
     a5a:	f1 e0       	ldi	r31, 0x01	; 1
     a5c:	ff 2e       	mov	r15, r31
     a5e:	f0 2d       	mov	r31, r0
     a60:	05 e9       	ldi	r16, 0x95	; 149
     a62:	11 e0       	ldi	r17, 0x01	; 1
     a64:	26 e9       	ldi	r18, 0x96	; 150
     a66:	31 e0       	ldi	r19, 0x01	; 1
     a68:	47 e9       	ldi	r20, 0x97	; 151
     a6a:	51 e0       	ldi	r21, 0x01	; 1
     a6c:	68 e9       	ldi	r22, 0x98	; 152
     a6e:	71 e0       	ldi	r23, 0x01	; 1
     a70:	89 e9       	ldi	r24, 0x99	; 153
     a72:	91 e0       	ldi	r25, 0x01	; 1
     a74:	57 d3       	rcall	.+1710   	; 0x1124 <twi_mr_mode>
     a76:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <task_500ms>
			}
			task_500ms=FALSE;
     a7a:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <task_1s>
		}
		
		if(task_1s) {
     a7e:	88 23       	and	r24, r24
     a80:	09 f4       	brne	.+2      	; 0xa84 <__LOCK_REGION_LENGTH__+0x684>
     a82:	c2 cc       	rjmp	.-1660   	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
     a84:	40 91 93 01 	lds	r20, 0x0193	; 0x800193 <ev>
			// send data via CAN
			// DATE, TIME
			uint8_t cnt_4bit = 3;
			
			uint8_t ev_rovid = ev % 100;
     a88:	50 91 94 01 	lds	r21, 0x0194	; 0x800194 <ev+0x1>
     a8c:	9a 01       	movw	r18, r20
     a8e:	36 95       	lsr	r19
     a90:	27 95       	ror	r18
     a92:	36 95       	lsr	r19
     a94:	27 95       	ror	r18
     a96:	ab e7       	ldi	r26, 0x7B	; 123
     a98:	b4 e1       	ldi	r27, 0x14	; 20
     a9a:	39 d6       	rcall	.+3186   	; 0x170e <__umulhisi3>
     a9c:	bc 01       	movw	r22, r24
     a9e:	76 95       	lsr	r23
     aa0:	67 95       	ror	r22
     aa2:	24 e6       	ldi	r18, 0x64	; 100
     aa4:	26 9f       	mul	r18, r22
     aa6:	c0 01       	movw	r24, r0
     aa8:	27 9f       	mul	r18, r23
     aaa:	90 0d       	add	r25, r0
     aac:	11 24       	eor	r1, r1
     aae:	ba 01       	movw	r22, r20
     ab0:	68 1b       	sub	r22, r24
     ab2:	79 0b       	sbc	r23, r25
     ab4:	70 91 95 01 	lds	r23, 0x0195	; 0x800195 <honap>
     ab8:	87 2f       	mov	r24, r23
			uint8_t honap_0_bit = honap & 1;
     aba:	8e 70       	andi	r24, 0x0E	; 14
     abc:	20 91 96 01 	lds	r18, 0x0196	; 0x800196 <nap>
			uint8_t honap_123_bit = honap & (0b00001110);
     ac0:	32 2f       	mov	r19, r18
			uint8_t hetnapja = 5;
			uint8_t nap_01_bit = nap & (0b00000011);
     ac2:	33 70       	andi	r19, 0x03	; 3
     ac4:	42 2f       	mov	r20, r18
     ac6:	4c 71       	andi	r20, 0x1C	; 28
     ac8:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <masodperc>
			uint8_t nap_234_bit = nap & (0b00011100);
     acc:	59 2f       	mov	r21, r25
			uint8_t masodperc_01_bit = masodperc & (0b00000011);
     ace:	53 70       	andi	r21, 0x03	; 3
     ad0:	9c 73       	andi	r25, 0x3C	; 60
     ad2:	70 fb       	bst	r23, 0
     ad4:	aa 24       	eor	r10, r10
			uint8_t masodperc_2345_bit = masodperc & (0b00111100);
     ad6:	a0 f8       	bld	r10, 0
			
			uint8_t can_tx_data[5];
			can_tx_data[0] = ev_rovid | (honap_0_bit<<7);
     ad8:	b1 2c       	mov	r11, r1
     ada:	f5 01       	movw	r30, r10
     adc:	f6 95       	lsr	r31
     ade:	fe 2f       	mov	r31, r30
     ae0:	ee 27       	eor	r30, r30
     ae2:	f7 95       	ror	r31
     ae4:	e7 95       	ror	r30
     ae6:	6e 2b       	or	r22, r30
     ae8:	6b ab       	std	Y+51, r22	; 0x33
     aea:	60 e4       	ldi	r22, 0x40	; 64
     aec:	36 9f       	mul	r19, r22
     aee:	90 01       	movw	r18, r0
			can_tx_data[1] = (honap_123_bit>>1) | (hetnapja<<3) | (nap_01_bit<<6);
     af0:	11 24       	eor	r1, r1
     af2:	86 95       	lsr	r24
     af4:	88 62       	ori	r24, 0x28	; 40
     af6:	28 2b       	or	r18, r24
     af8:	2c ab       	std	Y+52, r18	; 0x34
     afa:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <ora>
     afe:	28 2f       	mov	r18, r24
			can_tx_data[2] = (nap_234_bit>>2) | (ora<<3);
     b00:	30 e0       	ldi	r19, 0x00	; 0
     b02:	22 0f       	add	r18, r18
     b04:	33 1f       	adc	r19, r19
     b06:	22 0f       	add	r18, r18
     b08:	33 1f       	adc	r19, r19
     b0a:	22 0f       	add	r18, r18
     b0c:	33 1f       	adc	r19, r19
     b0e:	84 2f       	mov	r24, r20
     b10:	86 95       	lsr	r24
     b12:	86 95       	lsr	r24
     b14:	28 2b       	or	r18, r24
     b16:	2d ab       	std	Y+53, r18	; 0x35
     b18:	80 e4       	ldi	r24, 0x40	; 64
     b1a:	58 9f       	mul	r21, r24
     b1c:	90 01       	movw	r18, r0
			can_tx_data[3] = perc | (masodperc_01_bit<<6);
     b1e:	11 24       	eor	r1, r1
     b20:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <perc>
     b24:	28 2b       	or	r18, r24
     b26:	2e ab       	std	Y+54, r18	; 0x36
     b28:	96 95       	lsr	r25
			can_tx_data[4] = (masodperc_2345_bit>>2) |(cnt_4bit<<4);
     b2a:	96 95       	lsr	r25
     b2c:	90 63       	ori	r25, 0x30	; 48
     b2e:	9f ab       	std	Y+55, r25	; 0x37
     b30:	ce 01       	movw	r24, r28
			CAN_SendMob(0,0x1FE,FALSE,5,can_tx_data);
     b32:	c3 96       	adiw	r24, 0x33	; 51
     b34:	7c 01       	movw	r14, r24
     b36:	05 e0       	ldi	r16, 0x05	; 5
     b38:	20 e0       	ldi	r18, 0x00	; 0
     b3a:	4e ef       	ldi	r20, 0xFE	; 254
     b3c:	51 e0       	ldi	r21, 0x01	; 1
     b3e:	60 e0       	ldi	r22, 0x00	; 0
     b40:	70 e0       	ldi	r23, 0x00	; 0
     b42:	80 e0       	ldi	r24, 0x00	; 0
     b44:	0d db       	rcall	.-2534   	; 0x160 <CAN_SendMob>
     b46:	5b d1       	rcall	.+694    	; 0xdfe <read_temperature>
     b48:	95 95       	asr	r25
			
			// TEMPERATURE
			homerseklet = (read_temperature()>>1);
     b4a:	87 95       	ror	r24
     b4c:	90 93 91 01 	sts	0x0191, r25	; 0x800191 <__data_end+0x1>
     b50:	80 93 90 01 	sts	0x0190, r24	; 0x800190 <__data_end>
     b54:	9c 01       	movw	r18, r24
     b56:	22 0f       	add	r18, r18
     b58:	33 1f       	adc	r19, r19
			
			int16_t homerseklet_can = (homerseklet-100) * 10;
     b5a:	88 0f       	add	r24, r24
     b5c:	99 1f       	adc	r25, r25
     b5e:	88 0f       	add	r24, r24
     b60:	99 1f       	adc	r25, r25
     b62:	88 0f       	add	r24, r24
     b64:	99 1f       	adc	r25, r25
     b66:	82 0f       	add	r24, r18
     b68:	93 1f       	adc	r25, r19
     b6a:	88 5e       	subi	r24, 0xE8	; 232
     b6c:	93 40       	sbci	r25, 0x03	; 3
     b6e:	88 af       	std	Y+56, r24	; 0x38
     b70:	99 af       	std	Y+57, r25	; 0x39
			uint8_t homerseklet_can9_12 = (uint8_t)(homerseklet_can>>8);

			uint8_t can_tx_data_1[2];
			can_tx_data_1[0] = 0x00;
			can_tx_data_1[1] = 99;
			can_tx_data_1[0] = homerseklet_can0_8;
     b72:	ce 01       	movw	r24, r28
			can_tx_data_1[1] = homerseklet_can9_12;
     b74:	c8 96       	adiw	r24, 0x38	; 56
			CAN_SendMob(1,0x1FF,FALSE,2,can_tx_data_1);
     b76:	7c 01       	movw	r14, r24
     b78:	02 e0       	ldi	r16, 0x02	; 2
     b7a:	20 e0       	ldi	r18, 0x00	; 0
     b7c:	4f ef       	ldi	r20, 0xFF	; 255
     b7e:	51 e0       	ldi	r21, 0x01	; 1
     b80:	60 e0       	ldi	r22, 0x00	; 0
     b82:	70 e0       	ldi	r23, 0x00	; 0
     b84:	81 e0       	ldi	r24, 0x01	; 1
     b86:	ec da       	rcall	.-2600   	; 0x160 <CAN_SendMob>
     b88:	10 92 a1 01 	sts	0x01A1, r1	; 0x8001a1 <task_1s>
     b8c:	3d cc       	rjmp	.-1926   	; 0x408 <__LOCK_REGION_LENGTH__+0x8>

00000b8e <__vector_16>:
			
			task_1s = FALSE;
     b8e:	1f 92       	push	r1
     b90:	0f 92       	push	r0
     b92:	0f b6       	in	r0, 0x3f	; 63

/******************************************************************************
* Interrupt Routines
******************************************************************************/
ISR(TIMER0_COMP_vect) //timer CTC interrupt
{
     b94:	0f 92       	push	r0
     b96:	11 24       	eor	r1, r1
     b98:	2f 93       	push	r18
     b9a:	3f 93       	push	r19
     b9c:	4f 93       	push	r20
     b9e:	5f 93       	push	r21
     ba0:	6f 93       	push	r22
     ba2:	7f 93       	push	r23
     ba4:	8f 93       	push	r24
     ba6:	9f 93       	push	r25
     ba8:	af 93       	push	r26
     baa:	bf 93       	push	r27
	timer_cnt++;
     bac:	40 91 a5 01 	lds	r20, 0x01A5	; 0x8001a5 <timer_cnt>
     bb0:	50 91 a6 01 	lds	r21, 0x01A6	; 0x8001a6 <timer_cnt+0x1>
     bb4:	4f 5f       	subi	r20, 0xFF	; 255
     bb6:	5f 4f       	sbci	r21, 0xFF	; 255
     bb8:	50 93 a6 01 	sts	0x01A6, r21	; 0x8001a6 <timer_cnt+0x1>
     bbc:	40 93 a5 01 	sts	0x01A5, r20	; 0x8001a5 <timer_cnt>
	if(timer_cnt % 1 == 0) task_10ms = TRUE;
     bc0:	81 e0       	ldi	r24, 0x01	; 1
     bc2:	80 93 a4 01 	sts	0x01A4, r24	; 0x8001a4 <task_10ms>
	if(timer_cnt % 10 == 0) task_100ms = TRUE;
     bc6:	9a 01       	movw	r18, r20
     bc8:	ad ec       	ldi	r26, 0xCD	; 205
     bca:	bc ec       	ldi	r27, 0xCC	; 204
     bcc:	a0 d5       	rcall	.+2880   	; 0x170e <__umulhisi3>
     bce:	96 95       	lsr	r25
     bd0:	87 95       	ror	r24
     bd2:	96 95       	lsr	r25
     bd4:	87 95       	ror	r24
     bd6:	96 95       	lsr	r25
     bd8:	87 95       	ror	r24
     bda:	9c 01       	movw	r18, r24
     bdc:	22 0f       	add	r18, r18
     bde:	33 1f       	adc	r19, r19
     be0:	88 0f       	add	r24, r24
     be2:	99 1f       	adc	r25, r25
     be4:	88 0f       	add	r24, r24
     be6:	99 1f       	adc	r25, r25
     be8:	88 0f       	add	r24, r24
     bea:	99 1f       	adc	r25, r25
     bec:	82 0f       	add	r24, r18
     bee:	93 1f       	adc	r25, r19
     bf0:	48 17       	cp	r20, r24
     bf2:	59 07       	cpc	r21, r25
     bf4:	19 f4       	brne	.+6      	; 0xbfc <__vector_16+0x6e>
     bf6:	81 e0       	ldi	r24, 0x01	; 1
     bf8:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <task_100ms>
	if(timer_cnt % 50 == 0) task_500ms =TRUE;
     bfc:	9a 01       	movw	r18, r20
     bfe:	36 95       	lsr	r19
     c00:	27 95       	ror	r18
     c02:	ab e7       	ldi	r26, 0x7B	; 123
     c04:	b4 e1       	ldi	r27, 0x14	; 20
     c06:	83 d5       	rcall	.+2822   	; 0x170e <__umulhisi3>
     c08:	96 95       	lsr	r25
     c0a:	87 95       	ror	r24
     c0c:	62 e3       	ldi	r22, 0x32	; 50
     c0e:	68 9f       	mul	r22, r24
     c10:	90 01       	movw	r18, r0
     c12:	69 9f       	mul	r22, r25
     c14:	30 0d       	add	r19, r0
     c16:	11 24       	eor	r1, r1
     c18:	42 17       	cp	r20, r18
     c1a:	53 07       	cpc	r21, r19
     c1c:	19 f4       	brne	.+6      	; 0xc24 <__vector_16+0x96>
     c1e:	81 e0       	ldi	r24, 0x01	; 1
     c20:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <task_500ms>
	if(timer_cnt % 100 == 0) task_1s = TRUE;
     c24:	9a 01       	movw	r18, r20
     c26:	36 95       	lsr	r19
     c28:	27 95       	ror	r18
     c2a:	36 95       	lsr	r19
     c2c:	27 95       	ror	r18
     c2e:	ab e7       	ldi	r26, 0x7B	; 123
     c30:	b4 e1       	ldi	r27, 0x14	; 20
     c32:	6d d5       	rcall	.+2778   	; 0x170e <__umulhisi3>
     c34:	96 95       	lsr	r25
     c36:	87 95       	ror	r24
     c38:	64 e6       	ldi	r22, 0x64	; 100
     c3a:	68 9f       	mul	r22, r24
     c3c:	90 01       	movw	r18, r0
     c3e:	69 9f       	mul	r22, r25
     c40:	30 0d       	add	r19, r0
     c42:	11 24       	eor	r1, r1
     c44:	42 17       	cp	r20, r18
     c46:	53 07       	cpc	r21, r19
     c48:	19 f4       	brne	.+6      	; 0xc50 <__vector_16+0xc2>
     c4a:	81 e0       	ldi	r24, 0x01	; 1
     c4c:	80 93 a1 01 	sts	0x01A1, r24	; 0x8001a1 <task_1s>
}
     c50:	bf 91       	pop	r27
     c52:	af 91       	pop	r26
     c54:	9f 91       	pop	r25
     c56:	8f 91       	pop	r24
     c58:	7f 91       	pop	r23
     c5a:	6f 91       	pop	r22
     c5c:	5f 91       	pop	r21
     c5e:	4f 91       	pop	r20
     c60:	3f 91       	pop	r19
     c62:	2f 91       	pop	r18
     c64:	0f 90       	pop	r0
     c66:	0f be       	out	0x3f, r0	; 63
     c68:	0f 90       	pop	r0
     c6a:	1f 90       	pop	r1
     c6c:	18 95       	reti

00000c6e <__vector_1>:

ISR(INT0_vect) //extint 0 interrput
{
     c6e:	1f 92       	push	r1
     c70:	0f 92       	push	r0
     c72:	0f b6       	in	r0, 0x3f	; 63
     c74:	0f 92       	push	r0
     c76:	11 24       	eor	r1, r1

}
     c78:	0f 90       	pop	r0
     c7a:	0f be       	out	0x3f, r0	; 63
     c7c:	0f 90       	pop	r0
     c7e:	1f 90       	pop	r1
     c80:	18 95       	reti

00000c82 <__vector_21>:

ISR(USART0_RX_vect)
{
     c82:	1f 92       	push	r1
     c84:	0f 92       	push	r0
     c86:	0f b6       	in	r0, 0x3f	; 63
     c88:	0f 92       	push	r0
     c8a:	11 24       	eor	r1, r1
	// char c = UDR0;
	// lcd_write_char(c);
}
     c8c:	0f 90       	pop	r0
     c8e:	0f be       	out	0x3f, r0	; 63
     c90:	0f 90       	pop	r0
     c92:	1f 90       	pop	r1
     c94:	18 95       	reti

00000c96 <__vector_25>:

ISR(ADC_vect)
{
     c96:	1f 92       	push	r1
     c98:	0f 92       	push	r0
     c9a:	0f b6       	in	r0, 0x3f	; 63
     c9c:	0f 92       	push	r0
     c9e:	11 24       	eor	r1, r1
     ca0:	8f 93       	push	r24
     ca2:	9f 93       	push	r25
	ad_result = ADC;
     ca4:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     ca8:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     cac:	90 93 ae 01 	sts	0x01AE, r25	; 0x8001ae <ad_result+0x1>
     cb0:	80 93 ad 01 	sts	0x01AD, r24	; 0x8001ad <ad_result>
     cb4:	9f 91       	pop	r25
     cb6:	8f 91       	pop	r24
     cb8:	0f 90       	pop	r0
     cba:	0f be       	out	0x3f, r0	; 63
     cbc:	0f 90       	pop	r0
     cbe:	1f 90       	pop	r1
     cc0:	18 95       	reti

00000cc2 <timer_init>:
     cc2:	8d e0       	ldi	r24, 0x0D	; 13
     cc4:	84 bd       	out	0x24, r24	; 36
     cc6:	8d e4       	ldi	r24, 0x4D	; 77
     cc8:	87 bd       	out	0x27, r24	; 39
     cca:	82 e0       	ldi	r24, 0x02	; 2
     ccc:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
     cd0:	08 95       	ret

00000cd2 <external_int_init>:
     cd2:	82 e0       	ldi	r24, 0x02	; 2
     cd4:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
     cd8:	81 e0       	ldi	r24, 0x01	; 1
     cda:	8d bb       	out	0x1d, r24	; 29
     cdc:	08 95       	ret

00000cde <adc_init>:
     cde:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     ce2:	ea e7       	ldi	r30, 0x7A	; 122
     ce4:	f0 e0       	ldi	r31, 0x00	; 0
     ce6:	8f e8       	ldi	r24, 0x8F	; 143
     ce8:	80 83       	st	Z, r24
     cea:	80 81       	ld	r24, Z
     cec:	80 64       	ori	r24, 0x40	; 64
     cee:	80 83       	st	Z, r24
     cf0:	08 95       	ret

00000cf2 <set_input>:
     cf2:	14 b8       	out	0x04, r1	; 4
     cf4:	15 b8       	out	0x05, r1	; 5
     cf6:	08 95       	ret

00000cf8 <set_output>:
     cf8:	91 e0       	ldi	r25, 0x01	; 1
     cfa:	94 b9       	out	0x04, r25	; 4
     cfc:	81 30       	cpi	r24, 0x01	; 1
     cfe:	11 f4       	brne	.+4      	; 0xd04 <set_output+0xc>
     d00:	85 b9       	out	0x05, r24	; 5
     d02:	08 95       	ret
     d04:	81 11       	cpse	r24, r1
     d06:	01 c0       	rjmp	.+2      	; 0xd0a <set_output+0x12>
     d08:	15 b8       	out	0x05, r1	; 5
     d0a:	08 95       	ret

00000d0c <reset_presence_pulse>:
     d0c:	cf 93       	push	r28
     d0e:	c0 e0       	ldi	r28, 0x00	; 0
     d10:	15 c0       	rjmp	.+42     	; 0xd3c <reset_presence_pulse+0x30>
     d12:	80 e0       	ldi	r24, 0x00	; 0
     d14:	f1 df       	rcall	.-30     	; 0xcf8 <set_output>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     d16:	87 ee       	ldi	r24, 0xE7	; 231
     d18:	93 e0       	ldi	r25, 0x03	; 3
     d1a:	01 97       	sbiw	r24, 0x01	; 1
     d1c:	f1 f7       	brne	.-4      	; 0xd1a <reset_presence_pulse+0xe>
     d1e:	00 c0       	rjmp	.+0      	; 0xd20 <reset_presence_pulse+0x14>
     d20:	00 00       	nop
     d22:	e7 df       	rcall	.-50     	; 0xcf2 <set_input>
     d24:	9a eb       	ldi	r25, 0xBA	; 186
     d26:	9a 95       	dec	r25
     d28:	f1 f7       	brne	.-4      	; 0xd26 <reset_presence_pulse+0x1a>
     d2a:	00 c0       	rjmp	.+0      	; 0xd2c <reset_presence_pulse+0x20>
     d2c:	18 9b       	sbis	0x03, 0	; 3
     d2e:	c1 e0       	ldi	r28, 0x01	; 1
     d30:	8b e5       	ldi	r24, 0x5B	; 91
     d32:	93 e0       	ldi	r25, 0x03	; 3
     d34:	01 97       	sbiw	r24, 0x01	; 1
     d36:	f1 f7       	brne	.-4      	; 0xd34 <reset_presence_pulse+0x28>
     d38:	00 c0       	rjmp	.+0      	; 0xd3a <reset_presence_pulse+0x2e>
     d3a:	00 00       	nop
     d3c:	cc 23       	and	r28, r28
     d3e:	49 f3       	breq	.-46     	; 0xd12 <reset_presence_pulse+0x6>
     d40:	cf 91       	pop	r28
     d42:	08 95       	ret

00000d44 <write_slot>:
     d44:	cf 93       	push	r28
     d46:	c8 2f       	mov	r28, r24
     d48:	80 e0       	ldi	r24, 0x00	; 0
     d4a:	d6 df       	rcall	.-84     	; 0xcf8 <set_output>
     d4c:	c1 30       	cpi	r28, 0x01	; 1
     d4e:	49 f4       	brne	.+18     	; 0xd62 <write_slot+0x1e>
     d50:	8d e0       	ldi	r24, 0x0D	; 13
     d52:	8a 95       	dec	r24
     d54:	f1 f7       	brne	.-4      	; 0xd52 <write_slot+0xe>
     d56:	00 00       	nop
     d58:	cc df       	rcall	.-104    	; 0xcf2 <set_input>
     d5a:	88 ec       	ldi	r24, 0xC8	; 200
     d5c:	8a 95       	dec	r24
     d5e:	f1 f7       	brne	.-4      	; 0xd5c <write_slot+0x18>
     d60:	07 c0       	rjmp	.+14     	; 0xd70 <write_slot+0x2c>
     d62:	c1 11       	cpse	r28, r1
     d64:	05 c0       	rjmp	.+10     	; 0xd70 <write_slot+0x2c>
     d66:	85 ed       	ldi	r24, 0xD5	; 213
     d68:	8a 95       	dec	r24
     d6a:	f1 f7       	brne	.-4      	; 0xd68 <write_slot+0x24>
     d6c:	00 00       	nop
     d6e:	c1 df       	rcall	.-126    	; 0xcf2 <set_input>
     d70:	85 e0       	ldi	r24, 0x05	; 5
     d72:	8a 95       	dec	r24
     d74:	f1 f7       	brne	.-4      	; 0xd72 <write_slot+0x2e>
     d76:	00 00       	nop
     d78:	cf 91       	pop	r28
     d7a:	08 95       	ret

00000d7c <read_slot>:
     d7c:	80 e0       	ldi	r24, 0x00	; 0
     d7e:	bc df       	rcall	.-136    	; 0xcf8 <set_output>
     d80:	85 e0       	ldi	r24, 0x05	; 5
     d82:	8a 95       	dec	r24
     d84:	f1 f7       	brne	.-4      	; 0xd82 <read_slot+0x6>
     d86:	00 00       	nop
     d88:	b4 df       	rcall	.-152    	; 0xcf2 <set_input>
     d8a:	8a e3       	ldi	r24, 0x3A	; 58
     d8c:	8a 95       	dec	r24
     d8e:	f1 f7       	brne	.-4      	; 0xd8c <read_slot+0x10>
     d90:	00 c0       	rjmp	.+0      	; 0xd92 <read_slot+0x16>
     d92:	93 b1       	in	r25, 0x03	; 3
     d94:	89 2f       	mov	r24, r25
     d96:	81 70       	andi	r24, 0x01	; 1
     d98:	90 ff       	sbrs	r25, 0
     d9a:	08 c0       	rjmp	.+16     	; 0xdac <read_slot+0x30>
     d9c:	18 99       	sbic	0x03, 0	; 3
     d9e:	05 c0       	rjmp	.+10     	; 0xdaa <read_slot+0x2e>
     da0:	8a eb       	ldi	r24, 0xBA	; 186
     da2:	8a 95       	dec	r24
     da4:	f1 f7       	brne	.-4      	; 0xda2 <read_slot+0x26>
     da6:	00 c0       	rjmp	.+0      	; 0xda8 <read_slot+0x2c>
     da8:	08 95       	ret
     daa:	81 e0       	ldi	r24, 0x01	; 1
     dac:	08 95       	ret

00000dae <write_8_bit>:
     dae:	cf 93       	push	r28
     db0:	df 93       	push	r29
     db2:	d8 2f       	mov	r29, r24
     db4:	c0 e0       	ldi	r28, 0x00	; 0
     db6:	1e c0       	rjmp	.+60     	; 0xdf4 <write_8_bit+0x46>
     db8:	8d 2f       	mov	r24, r29
     dba:	90 e0       	ldi	r25, 0x00	; 0
     dbc:	9c 01       	movw	r18, r24
     dbe:	0c 2e       	mov	r0, r28
     dc0:	02 c0       	rjmp	.+4      	; 0xdc6 <write_8_bit+0x18>
     dc2:	35 95       	asr	r19
     dc4:	27 95       	ror	r18
     dc6:	0a 94       	dec	r0
     dc8:	e2 f7       	brpl	.-8      	; 0xdc2 <write_8_bit+0x14>
     dca:	20 fd       	sbrc	r18, 0
     dcc:	03 c0       	rjmp	.+6      	; 0xdd4 <write_8_bit+0x26>
     dce:	80 e0       	ldi	r24, 0x00	; 0
     dd0:	b9 df       	rcall	.-142    	; 0xd44 <write_slot>
     dd2:	0f c0       	rjmp	.+30     	; 0xdf2 <write_8_bit+0x44>
     dd4:	21 e0       	ldi	r18, 0x01	; 1
     dd6:	30 e0       	ldi	r19, 0x00	; 0
     dd8:	0c 2e       	mov	r0, r28
     dda:	02 c0       	rjmp	.+4      	; 0xde0 <write_8_bit+0x32>
     ddc:	22 0f       	add	r18, r18
     dde:	33 1f       	adc	r19, r19
     de0:	0a 94       	dec	r0
     de2:	e2 f7       	brpl	.-8      	; 0xddc <write_8_bit+0x2e>
     de4:	82 23       	and	r24, r18
     de6:	93 23       	and	r25, r19
     de8:	28 17       	cp	r18, r24
     dea:	39 07       	cpc	r19, r25
     dec:	11 f4       	brne	.+4      	; 0xdf2 <write_8_bit+0x44>
     dee:	81 e0       	ldi	r24, 0x01	; 1
     df0:	a9 df       	rcall	.-174    	; 0xd44 <write_slot>
     df2:	cf 5f       	subi	r28, 0xFF	; 255
     df4:	c8 30       	cpi	r28, 0x08	; 8
     df6:	00 f3       	brcs	.-64     	; 0xdb8 <write_8_bit+0xa>
     df8:	df 91       	pop	r29
     dfa:	cf 91       	pop	r28
     dfc:	08 95       	ret

00000dfe <read_temperature>:
     dfe:	0f 93       	push	r16
     e00:	1f 93       	push	r17
     e02:	cf 93       	push	r28
     e04:	83 df       	rcall	.-250    	; 0xd0c <reset_presence_pulse>
     e06:	8c ec       	ldi	r24, 0xCC	; 204
     e08:	d2 df       	rcall	.-92     	; 0xdae <write_8_bit>
     e0a:	84 e4       	ldi	r24, 0x44	; 68
     e0c:	d0 df       	rcall	.-96     	; 0xdae <write_8_bit>
     e0e:	b6 df       	rcall	.-148    	; 0xd7c <read_slot>
     e10:	88 23       	and	r24, r24
     e12:	e9 f3       	breq	.-6      	; 0xe0e <read_temperature+0x10>
     e14:	7b df       	rcall	.-266    	; 0xd0c <reset_presence_pulse>
     e16:	8c ec       	ldi	r24, 0xCC	; 204
     e18:	ca df       	rcall	.-108    	; 0xdae <write_8_bit>
     e1a:	8e eb       	ldi	r24, 0xBE	; 190
     e1c:	c8 df       	rcall	.-112    	; 0xdae <write_8_bit>
     e1e:	c0 e0       	ldi	r28, 0x00	; 0
     e20:	00 e0       	ldi	r16, 0x00	; 0
     e22:	10 e0       	ldi	r17, 0x00	; 0
     e24:	0b c0       	rjmp	.+22     	; 0xe3c <read_temperature+0x3e>
     e26:	aa df       	rcall	.-172    	; 0xd7c <read_slot>
     e28:	90 e0       	ldi	r25, 0x00	; 0
     e2a:	0c 2e       	mov	r0, r28
     e2c:	02 c0       	rjmp	.+4      	; 0xe32 <read_temperature+0x34>
     e2e:	88 0f       	add	r24, r24
     e30:	99 1f       	adc	r25, r25
     e32:	0a 94       	dec	r0
     e34:	e2 f7       	brpl	.-8      	; 0xe2e <read_temperature+0x30>
     e36:	08 2b       	or	r16, r24
     e38:	19 2b       	or	r17, r25
     e3a:	cf 5f       	subi	r28, 0xFF	; 255
     e3c:	c0 31       	cpi	r28, 0x10	; 16
     e3e:	98 f3       	brcs	.-26     	; 0xe26 <read_temperature+0x28>
     e40:	65 df       	rcall	.-310    	; 0xd0c <reset_presence_pulse>
     e42:	c8 01       	movw	r24, r16
     e44:	cf 91       	pop	r28
     e46:	1f 91       	pop	r17
     e48:	0f 91       	pop	r16
     e4a:	08 95       	ret

00000e4c <decimal_to_bcd>:
     e4c:	84 36       	cpi	r24, 0x64	; 100
     e4e:	c8 f4       	brcc	.+50     	; 0xe82 <decimal_to_bcd+0x36>
     e50:	9d ec       	ldi	r25, 0xCD	; 205
     e52:	89 9f       	mul	r24, r25
     e54:	91 2d       	mov	r25, r1
     e56:	11 24       	eor	r1, r1
     e58:	49 2f       	mov	r20, r25
     e5a:	46 95       	lsr	r20
     e5c:	46 95       	lsr	r20
     e5e:	46 95       	lsr	r20
     e60:	44 0f       	add	r20, r20
     e62:	24 2f       	mov	r18, r20
     e64:	22 0f       	add	r18, r18
     e66:	22 0f       	add	r18, r18
     e68:	42 0f       	add	r20, r18
     e6a:	84 1b       	sub	r24, r20
     e6c:	48 2f       	mov	r20, r24
     e6e:	96 95       	lsr	r25
     e70:	96 95       	lsr	r25
     e72:	96 95       	lsr	r25
     e74:	80 e1       	ldi	r24, 0x10	; 16
     e76:	98 9f       	mul	r25, r24
     e78:	90 01       	movw	r18, r0
     e7a:	11 24       	eor	r1, r1
     e7c:	84 2f       	mov	r24, r20
     e7e:	82 2b       	or	r24, r18
     e80:	08 95       	ret
     e82:	8f ef       	ldi	r24, 0xFF	; 255
     e84:	08 95       	ret

00000e86 <bcd_to_decimal>:
     e86:	98 2f       	mov	r25, r24
     e88:	92 95       	swap	r25
     e8a:	9f 70       	andi	r25, 0x0F	; 15
     e8c:	8f 70       	andi	r24, 0x0F	; 15
     e8e:	99 0f       	add	r25, r25
     e90:	29 2f       	mov	r18, r25
     e92:	22 0f       	add	r18, r18
     e94:	22 0f       	add	r18, r18
     e96:	92 0f       	add	r25, r18
     e98:	89 0f       	add	r24, r25
     e9a:	08 95       	ret

00000e9c <calc_day_of_week>:
     e9c:	8f 92       	push	r8
     e9e:	9f 92       	push	r9
     ea0:	af 92       	push	r10
     ea2:	bf 92       	push	r11
     ea4:	df 92       	push	r13
     ea6:	ef 92       	push	r14
     ea8:	ff 92       	push	r15
     eaa:	0f 93       	push	r16
     eac:	1f 93       	push	r17
     eae:	cf 93       	push	r28
     eb0:	df 93       	push	r29
     eb2:	7c 01       	movw	r14, r24
     eb4:	56 2f       	mov	r21, r22
     eb6:	d4 2e       	mov	r13, r20
     eb8:	8c 01       	movw	r16, r24
     eba:	16 95       	lsr	r17
     ebc:	07 95       	ror	r16
     ebe:	16 95       	lsr	r17
     ec0:	07 95       	ror	r16
     ec2:	98 01       	movw	r18, r16
     ec4:	ab e7       	ldi	r26, 0x7B	; 123
     ec6:	b4 e1       	ldi	r27, 0x14	; 20
     ec8:	22 d4       	rcall	.+2116   	; 0x170e <__umulhisi3>
     eca:	ec 01       	movw	r28, r24
     ecc:	d6 95       	lsr	r29
     ece:	c7 95       	ror	r28
     ed0:	65 2f       	mov	r22, r21
     ed2:	70 e0       	ldi	r23, 0x00	; 0
     ed4:	80 e0       	ldi	r24, 0x00	; 0
     ed6:	90 e0       	ldi	r25, 0x00	; 0
     ed8:	bc d2       	rcall	.+1400   	; 0x1452 <__floatsisf>
     eda:	26 e6       	ldi	r18, 0x66	; 102
     edc:	36 e6       	ldi	r19, 0x66	; 102
     ede:	46 e2       	ldi	r20, 0x26	; 38
     ee0:	50 e4       	ldi	r21, 0x40	; 64
     ee2:	96 d3       	rcall	.+1836   	; 0x1610 <__mulsf3>
     ee4:	2d ec       	ldi	r18, 0xCD	; 205
     ee6:	3c ec       	ldi	r19, 0xCC	; 204
     ee8:	4c e4       	ldi	r20, 0x4C	; 76
     eea:	5e e3       	ldi	r21, 0x3E	; 62
     eec:	1a d2       	rcall	.+1076   	; 0x1322 <__subsf3>
     eee:	ec d2       	rcall	.+1496   	; 0x14c8 <floor>
     ef0:	4b 01       	movw	r8, r22
     ef2:	5c 01       	movw	r10, r24
     ef4:	6d 2d       	mov	r22, r13
     ef6:	70 e0       	ldi	r23, 0x00	; 0
     ef8:	80 e0       	ldi	r24, 0x00	; 0
     efa:	90 e0       	ldi	r25, 0x00	; 0
     efc:	aa d2       	rcall	.+1364   	; 0x1452 <__floatsisf>
     efe:	a5 01       	movw	r20, r10
     f00:	94 01       	movw	r18, r8
     f02:	10 d2       	rcall	.+1056   	; 0x1324 <__addsf3>
     f04:	4b 01       	movw	r8, r22
     f06:	5c 01       	movw	r10, r24
     f08:	be 01       	movw	r22, r28
     f0a:	77 27       	eor	r23, r23
     f0c:	66 0f       	add	r22, r22
     f0e:	77 1f       	adc	r23, r23
     f10:	07 2e       	mov	r0, r23
     f12:	00 0c       	add	r0, r0
     f14:	88 0b       	sbc	r24, r24
     f16:	99 0b       	sbc	r25, r25
     f18:	9c d2       	rcall	.+1336   	; 0x1452 <__floatsisf>
     f1a:	9b 01       	movw	r18, r22
     f1c:	ac 01       	movw	r20, r24
     f1e:	c5 01       	movw	r24, r10
     f20:	b4 01       	movw	r22, r8
     f22:	ff d1       	rcall	.+1022   	; 0x1322 <__subsf3>
     f24:	4b 01       	movw	r8, r22
     f26:	5c 01       	movw	r10, r24
     f28:	b7 01       	movw	r22, r14
     f2a:	80 e0       	ldi	r24, 0x00	; 0
     f2c:	90 e0       	ldi	r25, 0x00	; 0
     f2e:	8f d2       	rcall	.+1310   	; 0x144e <__floatunsisf>
     f30:	a5 01       	movw	r20, r10
     f32:	94 01       	movw	r18, r8
     f34:	f7 d1       	rcall	.+1006   	; 0x1324 <__addsf3>
     f36:	4b 01       	movw	r8, r22
     f38:	5c 01       	movw	r10, r24
     f3a:	b8 01       	movw	r22, r16
     f3c:	80 e0       	ldi	r24, 0x00	; 0
     f3e:	90 e0       	ldi	r25, 0x00	; 0
     f40:	86 d2       	rcall	.+1292   	; 0x144e <__floatunsisf>
     f42:	c2 d2       	rcall	.+1412   	; 0x14c8 <floor>
     f44:	9b 01       	movw	r18, r22
     f46:	ac 01       	movw	r20, r24
     f48:	c5 01       	movw	r24, r10
     f4a:	b4 01       	movw	r22, r8
     f4c:	eb d1       	rcall	.+982    	; 0x1324 <__addsf3>
     f4e:	4b 01       	movw	r8, r22
     f50:	5c 01       	movw	r10, r24
     f52:	6c 2f       	mov	r22, r28
     f54:	66 95       	lsr	r22
     f56:	66 95       	lsr	r22
     f58:	70 e0       	ldi	r23, 0x00	; 0
     f5a:	80 e0       	ldi	r24, 0x00	; 0
     f5c:	90 e0       	ldi	r25, 0x00	; 0
     f5e:	79 d2       	rcall	.+1266   	; 0x1452 <__floatsisf>
     f60:	b3 d2       	rcall	.+1382   	; 0x14c8 <floor>
     f62:	9b 01       	movw	r18, r22
     f64:	ac 01       	movw	r20, r24
     f66:	c5 01       	movw	r24, r10
     f68:	b4 01       	movw	r22, r8
     f6a:	dc d1       	rcall	.+952    	; 0x1324 <__addsf3>
     f6c:	3f d2       	rcall	.+1150   	; 0x13ec <__fixsfsi>
     f6e:	cb 01       	movw	r24, r22
     f70:	67 e0       	ldi	r22, 0x07	; 7
     f72:	70 e0       	ldi	r23, 0x00	; 0
     f74:	b0 d3       	rcall	.+1888   	; 0x16d6 <__divmodhi4>
     f76:	df 91       	pop	r29
     f78:	cf 91       	pop	r28
     f7a:	1f 91       	pop	r17
     f7c:	0f 91       	pop	r16
     f7e:	ff 90       	pop	r15
     f80:	ef 90       	pop	r14
     f82:	df 90       	pop	r13
     f84:	bf 90       	pop	r11
     f86:	af 90       	pop	r10
     f88:	9f 90       	pop	r9
     f8a:	8f 90       	pop	r8
     f8c:	08 95       	ret

00000f8e <twi_init>:
     f8e:	1a b8       	out	0x0a, r1	; 10
     f90:	81 e0       	ldi	r24, 0x01	; 1
     f92:	8b b9       	out	0x0b, r24	; 11
     f94:	88 e0       	ldi	r24, 0x08	; 8
     f96:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
     f9a:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     f9e:	08 95       	ret

00000fa0 <twi_mt_mode>:
     fa0:	cf 92       	push	r12
     fa2:	df 92       	push	r13
     fa4:	ef 92       	push	r14
     fa6:	0f 93       	push	r16
     fa8:	1f 93       	push	r17
     faa:	cf 93       	push	r28
     fac:	df 93       	push	r29
     fae:	c8 2f       	mov	r28, r24
     fb0:	14 2f       	mov	r17, r20
     fb2:	d2 2f       	mov	r29, r18
     fb4:	94 ea       	ldi	r25, 0xA4	; 164
     fb6:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     fba:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     fbe:	99 23       	and	r25, r25
     fc0:	e4 f7       	brge	.-8      	; 0xfba <twi_mt_mode+0x1a>
     fc2:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     fc6:	98 7f       	andi	r25, 0xF8	; 248
     fc8:	98 30       	cpi	r25, 0x08	; 8
     fca:	11 f0       	breq	.+4      	; 0xfd0 <twi_mt_mode+0x30>
     fcc:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     fd0:	90 ed       	ldi	r25, 0xD0	; 208
     fd2:	90 93 bb 00 	sts	0x00BB, r25	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     fd6:	94 e8       	ldi	r25, 0x84	; 132
     fd8:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     fdc:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     fe0:	99 23       	and	r25, r25
     fe2:	e4 f7       	brge	.-8      	; 0xfdc <twi_mt_mode+0x3c>
     fe4:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     fe8:	98 7f       	andi	r25, 0xF8	; 248
     fea:	98 31       	cpi	r25, 0x18	; 24
     fec:	11 f0       	breq	.+4      	; 0xff2 <twi_mt_mode+0x52>
     fee:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     ff2:	c1 11       	cpse	r28, r1
     ff4:	03 c0       	rjmp	.+6      	; 0xffc <twi_mt_mode+0x5c>
     ff6:	10 92 bb 00 	sts	0x00BB, r1	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     ffa:	05 c0       	rjmp	.+10     	; 0x1006 <__DATA_REGION_LENGTH__+0x6>
     ffc:	c1 30       	cpi	r28, 0x01	; 1
     ffe:	19 f4       	brne	.+6      	; 0x1006 <__DATA_REGION_LENGTH__+0x6>
    1000:	83 e0       	ldi	r24, 0x03	; 3
    1002:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    1006:	94 e8       	ldi	r25, 0x84	; 132
    1008:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    100c:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    1010:	99 23       	and	r25, r25
    1012:	e4 f7       	brge	.-8      	; 0x100c <__DATA_REGION_LENGTH__+0xc>
    1014:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    1018:	98 7f       	andi	r25, 0xF8	; 248
    101a:	98 32       	cpi	r25, 0x28	; 40
    101c:	11 f0       	breq	.+4      	; 0x1022 <__DATA_REGION_LENGTH__+0x22>
    101e:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    1022:	c1 11       	cpse	r28, r1
    1024:	05 c0       	rjmp	.+10     	; 0x1030 <__DATA_REGION_LENGTH__+0x30>
    1026:	86 2f       	mov	r24, r22
    1028:	11 df       	rcall	.-478    	; 0xe4c <decimal_to_bcd>
    102a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    102e:	08 c0       	rjmp	.+16     	; 0x1040 <__DATA_REGION_LENGTH__+0x40>
    1030:	c1 30       	cpi	r28, 0x01	; 1
    1032:	31 f4       	brne	.+12     	; 0x1040 <__DATA_REGION_LENGTH__+0x40>
    1034:	40 2f       	mov	r20, r16
    1036:	6e 2d       	mov	r22, r14
    1038:	c6 01       	movw	r24, r12
    103a:	30 df       	rcall	.-416    	; 0xe9c <calc_day_of_week>
    103c:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    1040:	84 e8       	ldi	r24, 0x84	; 132
    1042:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    1046:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    104a:	88 23       	and	r24, r24
    104c:	e4 f7       	brge	.-8      	; 0x1046 <__DATA_REGION_LENGTH__+0x46>
    104e:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    1052:	88 7f       	andi	r24, 0xF8	; 248
    1054:	88 32       	cpi	r24, 0x28	; 40
    1056:	11 f0       	breq	.+4      	; 0x105c <__DATA_REGION_LENGTH__+0x5c>
    1058:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    105c:	c1 11       	cpse	r28, r1
    105e:	05 c0       	rjmp	.+10     	; 0x106a <__DATA_REGION_LENGTH__+0x6a>
    1060:	81 2f       	mov	r24, r17
    1062:	f4 de       	rcall	.-536    	; 0xe4c <decimal_to_bcd>
    1064:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    1068:	06 c0       	rjmp	.+12     	; 0x1076 <__DATA_REGION_LENGTH__+0x76>
    106a:	c1 30       	cpi	r28, 0x01	; 1
    106c:	21 f4       	brne	.+8      	; 0x1076 <__DATA_REGION_LENGTH__+0x76>
    106e:	80 2f       	mov	r24, r16
    1070:	ed de       	rcall	.-550    	; 0xe4c <decimal_to_bcd>
    1072:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    1076:	84 e8       	ldi	r24, 0x84	; 132
    1078:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    107c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    1080:	88 23       	and	r24, r24
    1082:	e4 f7       	brge	.-8      	; 0x107c <__DATA_REGION_LENGTH__+0x7c>
    1084:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    1088:	88 7f       	andi	r24, 0xF8	; 248
    108a:	88 32       	cpi	r24, 0x28	; 40
    108c:	11 f0       	breq	.+4      	; 0x1092 <__DATA_REGION_LENGTH__+0x92>
    108e:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    1092:	c1 11       	cpse	r28, r1
    1094:	05 c0       	rjmp	.+10     	; 0x10a0 <__DATA_REGION_LENGTH__+0xa0>
    1096:	8d 2f       	mov	r24, r29
    1098:	d9 de       	rcall	.-590    	; 0xe4c <decimal_to_bcd>
    109a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    109e:	06 c0       	rjmp	.+12     	; 0x10ac <__DATA_REGION_LENGTH__+0xac>
    10a0:	c1 30       	cpi	r28, 0x01	; 1
    10a2:	21 f4       	brne	.+8      	; 0x10ac <__DATA_REGION_LENGTH__+0xac>
    10a4:	8e 2d       	mov	r24, r14
    10a6:	d2 de       	rcall	.-604    	; 0xe4c <decimal_to_bcd>
    10a8:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    10ac:	84 e8       	ldi	r24, 0x84	; 132
    10ae:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    10b2:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    10b6:	88 23       	and	r24, r24
    10b8:	e4 f7       	brge	.-8      	; 0x10b2 <__DATA_REGION_LENGTH__+0xb2>
    10ba:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    10be:	88 7f       	andi	r24, 0xF8	; 248
    10c0:	88 32       	cpi	r24, 0x28	; 40
    10c2:	11 f0       	breq	.+4      	; 0x10c8 <__DATA_REGION_LENGTH__+0xc8>
    10c4:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    10c8:	c1 30       	cpi	r28, 0x01	; 1
    10ca:	99 f4       	brne	.+38     	; 0x10f2 <__DATA_REGION_LENGTH__+0xf2>
    10cc:	96 01       	movw	r18, r12
    10ce:	36 95       	lsr	r19
    10d0:	27 95       	ror	r18
    10d2:	36 95       	lsr	r19
    10d4:	27 95       	ror	r18
    10d6:	ab e7       	ldi	r26, 0x7B	; 123
    10d8:	b4 e1       	ldi	r27, 0x14	; 20
    10da:	19 d3       	rcall	.+1586   	; 0x170e <__umulhisi3>
    10dc:	96 95       	lsr	r25
    10de:	87 95       	ror	r24
    10e0:	3c 2d       	mov	r19, r12
    10e2:	24 e6       	ldi	r18, 0x64	; 100
    10e4:	82 9f       	mul	r24, r18
    10e6:	30 19       	sub	r19, r0
    10e8:	11 24       	eor	r1, r1
    10ea:	83 2f       	mov	r24, r19
    10ec:	af de       	rcall	.-674    	; 0xe4c <decimal_to_bcd>
    10ee:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    10f2:	84 e8       	ldi	r24, 0x84	; 132
    10f4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    10f8:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    10fc:	88 23       	and	r24, r24
    10fe:	e4 f7       	brge	.-8      	; 0x10f8 <__DATA_REGION_LENGTH__+0xf8>
    1100:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    1104:	88 7f       	andi	r24, 0xF8	; 248
    1106:	88 32       	cpi	r24, 0x28	; 40
    1108:	11 f0       	breq	.+4      	; 0x110e <__stack+0xf>
    110a:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    110e:	84 e9       	ldi	r24, 0x94	; 148
    1110:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    1114:	df 91       	pop	r29
    1116:	cf 91       	pop	r28
    1118:	1f 91       	pop	r17
    111a:	0f 91       	pop	r16
    111c:	ef 90       	pop	r14
    111e:	df 90       	pop	r13
    1120:	cf 90       	pop	r12
    1122:	08 95       	ret

00001124 <twi_mr_mode>:
    1124:	8f 92       	push	r8
    1126:	9f 92       	push	r9
    1128:	af 92       	push	r10
    112a:	bf 92       	push	r11
    112c:	cf 92       	push	r12
    112e:	df 92       	push	r13
    1130:	ef 92       	push	r14
    1132:	ff 92       	push	r15
    1134:	0f 93       	push	r16
    1136:	1f 93       	push	r17
    1138:	cf 93       	push	r28
    113a:	df 93       	push	r29
    113c:	4c 01       	movw	r8, r24
    113e:	5b 01       	movw	r10, r22
    1140:	6a 01       	movw	r12, r20
    1142:	e9 01       	movw	r28, r18
    1144:	84 ea       	ldi	r24, 0xA4	; 164
    1146:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    114a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    114e:	88 23       	and	r24, r24
    1150:	e4 f7       	brge	.-8      	; 0x114a <twi_mr_mode+0x26>
    1152:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    1156:	88 7f       	andi	r24, 0xF8	; 248
    1158:	88 30       	cpi	r24, 0x08	; 8
    115a:	11 f0       	breq	.+4      	; 0x1160 <twi_mr_mode+0x3c>
    115c:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    1160:	80 ed       	ldi	r24, 0xD0	; 208
    1162:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    1166:	84 e8       	ldi	r24, 0x84	; 132
    1168:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    116c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    1170:	88 23       	and	r24, r24
    1172:	e4 f7       	brge	.-8      	; 0x116c <twi_mr_mode+0x48>
    1174:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    1178:	88 7f       	andi	r24, 0xF8	; 248
    117a:	88 31       	cpi	r24, 0x18	; 24
    117c:	11 f0       	breq	.+4      	; 0x1182 <twi_mr_mode+0x5e>
    117e:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    1182:	10 92 bb 00 	sts	0x00BB, r1	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    1186:	84 e8       	ldi	r24, 0x84	; 132
    1188:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    118c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    1190:	88 23       	and	r24, r24
    1192:	e4 f7       	brge	.-8      	; 0x118c <twi_mr_mode+0x68>
    1194:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    1198:	88 7f       	andi	r24, 0xF8	; 248
    119a:	88 32       	cpi	r24, 0x28	; 40
    119c:	11 f0       	breq	.+4      	; 0x11a2 <twi_mr_mode+0x7e>
    119e:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    11a2:	84 ea       	ldi	r24, 0xA4	; 164
    11a4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    11a8:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    11ac:	88 23       	and	r24, r24
    11ae:	e4 f7       	brge	.-8      	; 0x11a8 <twi_mr_mode+0x84>
    11b0:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    11b4:	88 7f       	andi	r24, 0xF8	; 248
    11b6:	80 31       	cpi	r24, 0x10	; 16
    11b8:	11 f0       	breq	.+4      	; 0x11be <twi_mr_mode+0x9a>
    11ba:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    11be:	81 ed       	ldi	r24, 0xD1	; 209
    11c0:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    11c4:	84 e8       	ldi	r24, 0x84	; 132
    11c6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    11ca:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    11ce:	88 23       	and	r24, r24
    11d0:	e4 f7       	brge	.-8      	; 0x11ca <twi_mr_mode+0xa6>
    11d2:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    11d6:	88 7f       	andi	r24, 0xF8	; 248
    11d8:	80 34       	cpi	r24, 0x40	; 64
    11da:	11 f0       	breq	.+4      	; 0x11e0 <twi_mr_mode+0xbc>
    11dc:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    11e0:	84 ec       	ldi	r24, 0xC4	; 196
    11e2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    11e6:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    11ea:	88 23       	and	r24, r24
    11ec:	e4 f7       	brge	.-8      	; 0x11e6 <twi_mr_mode+0xc2>
    11ee:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    11f2:	88 7f       	andi	r24, 0xF8	; 248
    11f4:	80 35       	cpi	r24, 0x50	; 80
    11f6:	11 f0       	breq	.+4      	; 0x11fc <twi_mr_mode+0xd8>
    11f8:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    11fc:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    1200:	8f 77       	andi	r24, 0x7F	; 127
    1202:	41 de       	rcall	.-894    	; 0xe86 <bcd_to_decimal>
    1204:	f4 01       	movw	r30, r8
    1206:	80 83       	st	Z, r24
    1208:	84 ec       	ldi	r24, 0xC4	; 196
    120a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    120e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    1212:	88 23       	and	r24, r24
    1214:	e4 f7       	brge	.-8      	; 0x120e <twi_mr_mode+0xea>
    1216:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    121a:	88 7f       	andi	r24, 0xF8	; 248
    121c:	80 35       	cpi	r24, 0x50	; 80
    121e:	11 f0       	breq	.+4      	; 0x1224 <twi_mr_mode+0x100>
    1220:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    1224:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    1228:	2e de       	rcall	.-932    	; 0xe86 <bcd_to_decimal>
    122a:	f5 01       	movw	r30, r10
    122c:	80 83       	st	Z, r24
    122e:	84 ec       	ldi	r24, 0xC4	; 196
    1230:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    1234:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    1238:	88 23       	and	r24, r24
    123a:	e4 f7       	brge	.-8      	; 0x1234 <twi_mr_mode+0x110>
    123c:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    1240:	88 7f       	andi	r24, 0xF8	; 248
    1242:	80 35       	cpi	r24, 0x50	; 80
    1244:	11 f0       	breq	.+4      	; 0x124a <twi_mr_mode+0x126>
    1246:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    124a:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    124e:	1b de       	rcall	.-970    	; 0xe86 <bcd_to_decimal>
    1250:	f6 01       	movw	r30, r12
    1252:	80 83       	st	Z, r24
    1254:	84 ec       	ldi	r24, 0xC4	; 196
    1256:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    125a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    125e:	88 23       	and	r24, r24
    1260:	e4 f7       	brge	.-8      	; 0x125a <twi_mr_mode+0x136>
    1262:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    1266:	88 7f       	andi	r24, 0xF8	; 248
    1268:	80 35       	cpi	r24, 0x50	; 80
    126a:	11 f0       	breq	.+4      	; 0x1270 <twi_mr_mode+0x14c>
    126c:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    1270:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    1274:	84 ec       	ldi	r24, 0xC4	; 196
    1276:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    127a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    127e:	88 23       	and	r24, r24
    1280:	e4 f7       	brge	.-8      	; 0x127a <twi_mr_mode+0x156>
    1282:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    1286:	88 7f       	andi	r24, 0xF8	; 248
    1288:	80 35       	cpi	r24, 0x50	; 80
    128a:	11 f0       	breq	.+4      	; 0x1290 <twi_mr_mode+0x16c>
    128c:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    1290:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    1294:	f8 dd       	rcall	.-1040   	; 0xe86 <bcd_to_decimal>
    1296:	88 83       	st	Y, r24
    1298:	84 ec       	ldi	r24, 0xC4	; 196
    129a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    129e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    12a2:	88 23       	and	r24, r24
    12a4:	e4 f7       	brge	.-8      	; 0x129e <twi_mr_mode+0x17a>
    12a6:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    12aa:	88 7f       	andi	r24, 0xF8	; 248
    12ac:	80 35       	cpi	r24, 0x50	; 80
    12ae:	11 f0       	breq	.+4      	; 0x12b4 <twi_mr_mode+0x190>
    12b0:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    12b4:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    12b8:	e6 dd       	rcall	.-1076   	; 0xe86 <bcd_to_decimal>
    12ba:	f8 01       	movw	r30, r16
    12bc:	80 83       	st	Z, r24
    12be:	84 e8       	ldi	r24, 0x84	; 132
    12c0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    12c4:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    12c8:	88 23       	and	r24, r24
    12ca:	e4 f7       	brge	.-8      	; 0x12c4 <twi_mr_mode+0x1a0>
    12cc:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    12d0:	88 7f       	andi	r24, 0xF8	; 248
    12d2:	88 35       	cpi	r24, 0x58	; 88
    12d4:	11 f0       	breq	.+4      	; 0x12da <twi_mr_mode+0x1b6>
    12d6:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    12da:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    12de:	d3 dd       	rcall	.-1114   	; 0xe86 <bcd_to_decimal>
    12e0:	90 e0       	ldi	r25, 0x00	; 0
    12e2:	80 53       	subi	r24, 0x30	; 48
    12e4:	98 4f       	sbci	r25, 0xF8	; 248
    12e6:	f7 01       	movw	r30, r14
    12e8:	91 83       	std	Z+1, r25	; 0x01
    12ea:	80 83       	st	Z, r24
    12ec:	84 e9       	ldi	r24, 0x94	; 148
    12ee:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    12f2:	df 91       	pop	r29
    12f4:	cf 91       	pop	r28
    12f6:	1f 91       	pop	r17
    12f8:	0f 91       	pop	r16
    12fa:	ff 90       	pop	r15
    12fc:	ef 90       	pop	r14
    12fe:	df 90       	pop	r13
    1300:	cf 90       	pop	r12
    1302:	bf 90       	pop	r11
    1304:	af 90       	pop	r10
    1306:	9f 90       	pop	r9
    1308:	8f 90       	pop	r8
    130a:	08 95       	ret

0000130c <uart0_init>:
    130c:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
    1310:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
    1314:	8e e0       	ldi	r24, 0x0E	; 14
    1316:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
    131a:	88 e9       	ldi	r24, 0x98	; 152
    131c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    1320:	08 95       	ret

00001322 <__subsf3>:
    1322:	50 58       	subi	r21, 0x80	; 128

00001324 <__addsf3>:
    1324:	bb 27       	eor	r27, r27
    1326:	aa 27       	eor	r26, r26
    1328:	0e d0       	rcall	.+28     	; 0x1346 <__addsf3x>
    132a:	21 c1       	rjmp	.+578    	; 0x156e <__fp_round>
    132c:	12 d1       	rcall	.+548    	; 0x1552 <__fp_pscA>
    132e:	30 f0       	brcs	.+12     	; 0x133c <__addsf3+0x18>
    1330:	17 d1       	rcall	.+558    	; 0x1560 <__fp_pscB>
    1332:	20 f0       	brcs	.+8      	; 0x133c <__addsf3+0x18>
    1334:	31 f4       	brne	.+12     	; 0x1342 <__addsf3+0x1e>
    1336:	9f 3f       	cpi	r25, 0xFF	; 255
    1338:	11 f4       	brne	.+4      	; 0x133e <__addsf3+0x1a>
    133a:	1e f4       	brtc	.+6      	; 0x1342 <__addsf3+0x1e>
    133c:	07 c1       	rjmp	.+526    	; 0x154c <__fp_nan>
    133e:	0e f4       	brtc	.+2      	; 0x1342 <__addsf3+0x1e>
    1340:	e0 95       	com	r30
    1342:	e7 fb       	bst	r30, 7
    1344:	d4 c0       	rjmp	.+424    	; 0x14ee <__fp_inf>

00001346 <__addsf3x>:
    1346:	e9 2f       	mov	r30, r25
    1348:	23 d1       	rcall	.+582    	; 0x1590 <__fp_split3>
    134a:	80 f3       	brcs	.-32     	; 0x132c <__addsf3+0x8>
    134c:	ba 17       	cp	r27, r26
    134e:	62 07       	cpc	r22, r18
    1350:	73 07       	cpc	r23, r19
    1352:	84 07       	cpc	r24, r20
    1354:	95 07       	cpc	r25, r21
    1356:	18 f0       	brcs	.+6      	; 0x135e <__addsf3x+0x18>
    1358:	71 f4       	brne	.+28     	; 0x1376 <__addsf3x+0x30>
    135a:	9e f5       	brtc	.+102    	; 0x13c2 <__addsf3x+0x7c>
    135c:	52 c1       	rjmp	.+676    	; 0x1602 <__fp_zero>
    135e:	0e f4       	brtc	.+2      	; 0x1362 <__addsf3x+0x1c>
    1360:	e0 95       	com	r30
    1362:	0b 2e       	mov	r0, r27
    1364:	ba 2f       	mov	r27, r26
    1366:	a0 2d       	mov	r26, r0
    1368:	0b 01       	movw	r0, r22
    136a:	b9 01       	movw	r22, r18
    136c:	90 01       	movw	r18, r0
    136e:	0c 01       	movw	r0, r24
    1370:	ca 01       	movw	r24, r20
    1372:	a0 01       	movw	r20, r0
    1374:	11 24       	eor	r1, r1
    1376:	ff 27       	eor	r31, r31
    1378:	59 1b       	sub	r21, r25
    137a:	99 f0       	breq	.+38     	; 0x13a2 <__addsf3x+0x5c>
    137c:	59 3f       	cpi	r21, 0xF9	; 249
    137e:	50 f4       	brcc	.+20     	; 0x1394 <__addsf3x+0x4e>
    1380:	50 3e       	cpi	r21, 0xE0	; 224
    1382:	68 f1       	brcs	.+90     	; 0x13de <__addsf3x+0x98>
    1384:	1a 16       	cp	r1, r26
    1386:	f0 40       	sbci	r31, 0x00	; 0
    1388:	a2 2f       	mov	r26, r18
    138a:	23 2f       	mov	r18, r19
    138c:	34 2f       	mov	r19, r20
    138e:	44 27       	eor	r20, r20
    1390:	58 5f       	subi	r21, 0xF8	; 248
    1392:	f3 cf       	rjmp	.-26     	; 0x137a <__addsf3x+0x34>
    1394:	46 95       	lsr	r20
    1396:	37 95       	ror	r19
    1398:	27 95       	ror	r18
    139a:	a7 95       	ror	r26
    139c:	f0 40       	sbci	r31, 0x00	; 0
    139e:	53 95       	inc	r21
    13a0:	c9 f7       	brne	.-14     	; 0x1394 <__addsf3x+0x4e>
    13a2:	7e f4       	brtc	.+30     	; 0x13c2 <__addsf3x+0x7c>
    13a4:	1f 16       	cp	r1, r31
    13a6:	ba 0b       	sbc	r27, r26
    13a8:	62 0b       	sbc	r22, r18
    13aa:	73 0b       	sbc	r23, r19
    13ac:	84 0b       	sbc	r24, r20
    13ae:	ba f0       	brmi	.+46     	; 0x13de <__addsf3x+0x98>
    13b0:	91 50       	subi	r25, 0x01	; 1
    13b2:	a1 f0       	breq	.+40     	; 0x13dc <__addsf3x+0x96>
    13b4:	ff 0f       	add	r31, r31
    13b6:	bb 1f       	adc	r27, r27
    13b8:	66 1f       	adc	r22, r22
    13ba:	77 1f       	adc	r23, r23
    13bc:	88 1f       	adc	r24, r24
    13be:	c2 f7       	brpl	.-16     	; 0x13b0 <__addsf3x+0x6a>
    13c0:	0e c0       	rjmp	.+28     	; 0x13de <__addsf3x+0x98>
    13c2:	ba 0f       	add	r27, r26
    13c4:	62 1f       	adc	r22, r18
    13c6:	73 1f       	adc	r23, r19
    13c8:	84 1f       	adc	r24, r20
    13ca:	48 f4       	brcc	.+18     	; 0x13de <__addsf3x+0x98>
    13cc:	87 95       	ror	r24
    13ce:	77 95       	ror	r23
    13d0:	67 95       	ror	r22
    13d2:	b7 95       	ror	r27
    13d4:	f7 95       	ror	r31
    13d6:	9e 3f       	cpi	r25, 0xFE	; 254
    13d8:	08 f0       	brcs	.+2      	; 0x13dc <__addsf3x+0x96>
    13da:	b3 cf       	rjmp	.-154    	; 0x1342 <__addsf3+0x1e>
    13dc:	93 95       	inc	r25
    13de:	88 0f       	add	r24, r24
    13e0:	08 f0       	brcs	.+2      	; 0x13e4 <__addsf3x+0x9e>
    13e2:	99 27       	eor	r25, r25
    13e4:	ee 0f       	add	r30, r30
    13e6:	97 95       	ror	r25
    13e8:	87 95       	ror	r24
    13ea:	08 95       	ret

000013ec <__fixsfsi>:
    13ec:	04 d0       	rcall	.+8      	; 0x13f6 <__fixunssfsi>
    13ee:	68 94       	set
    13f0:	b1 11       	cpse	r27, r1
    13f2:	08 c1       	rjmp	.+528    	; 0x1604 <__fp_szero>
    13f4:	08 95       	ret

000013f6 <__fixunssfsi>:
    13f6:	d4 d0       	rcall	.+424    	; 0x15a0 <__fp_splitA>
    13f8:	88 f0       	brcs	.+34     	; 0x141c <__fixunssfsi+0x26>
    13fa:	9f 57       	subi	r25, 0x7F	; 127
    13fc:	90 f0       	brcs	.+36     	; 0x1422 <__fixunssfsi+0x2c>
    13fe:	b9 2f       	mov	r27, r25
    1400:	99 27       	eor	r25, r25
    1402:	b7 51       	subi	r27, 0x17	; 23
    1404:	a0 f0       	brcs	.+40     	; 0x142e <__fixunssfsi+0x38>
    1406:	d1 f0       	breq	.+52     	; 0x143c <__fixunssfsi+0x46>
    1408:	66 0f       	add	r22, r22
    140a:	77 1f       	adc	r23, r23
    140c:	88 1f       	adc	r24, r24
    140e:	99 1f       	adc	r25, r25
    1410:	1a f0       	brmi	.+6      	; 0x1418 <__fixunssfsi+0x22>
    1412:	ba 95       	dec	r27
    1414:	c9 f7       	brne	.-14     	; 0x1408 <__fixunssfsi+0x12>
    1416:	12 c0       	rjmp	.+36     	; 0x143c <__fixunssfsi+0x46>
    1418:	b1 30       	cpi	r27, 0x01	; 1
    141a:	81 f0       	breq	.+32     	; 0x143c <__fixunssfsi+0x46>
    141c:	f2 d0       	rcall	.+484    	; 0x1602 <__fp_zero>
    141e:	b1 e0       	ldi	r27, 0x01	; 1
    1420:	08 95       	ret
    1422:	ef c0       	rjmp	.+478    	; 0x1602 <__fp_zero>
    1424:	67 2f       	mov	r22, r23
    1426:	78 2f       	mov	r23, r24
    1428:	88 27       	eor	r24, r24
    142a:	b8 5f       	subi	r27, 0xF8	; 248
    142c:	39 f0       	breq	.+14     	; 0x143c <__fixunssfsi+0x46>
    142e:	b9 3f       	cpi	r27, 0xF9	; 249
    1430:	cc f3       	brlt	.-14     	; 0x1424 <__fixunssfsi+0x2e>
    1432:	86 95       	lsr	r24
    1434:	77 95       	ror	r23
    1436:	67 95       	ror	r22
    1438:	b3 95       	inc	r27
    143a:	d9 f7       	brne	.-10     	; 0x1432 <__fixunssfsi+0x3c>
    143c:	3e f4       	brtc	.+14     	; 0x144c <__fixunssfsi+0x56>
    143e:	90 95       	com	r25
    1440:	80 95       	com	r24
    1442:	70 95       	com	r23
    1444:	61 95       	neg	r22
    1446:	7f 4f       	sbci	r23, 0xFF	; 255
    1448:	8f 4f       	sbci	r24, 0xFF	; 255
    144a:	9f 4f       	sbci	r25, 0xFF	; 255
    144c:	08 95       	ret

0000144e <__floatunsisf>:
    144e:	e8 94       	clt
    1450:	09 c0       	rjmp	.+18     	; 0x1464 <__floatsisf+0x12>

00001452 <__floatsisf>:
    1452:	97 fb       	bst	r25, 7
    1454:	3e f4       	brtc	.+14     	; 0x1464 <__floatsisf+0x12>
    1456:	90 95       	com	r25
    1458:	80 95       	com	r24
    145a:	70 95       	com	r23
    145c:	61 95       	neg	r22
    145e:	7f 4f       	sbci	r23, 0xFF	; 255
    1460:	8f 4f       	sbci	r24, 0xFF	; 255
    1462:	9f 4f       	sbci	r25, 0xFF	; 255
    1464:	99 23       	and	r25, r25
    1466:	a9 f0       	breq	.+42     	; 0x1492 <__floatsisf+0x40>
    1468:	f9 2f       	mov	r31, r25
    146a:	96 e9       	ldi	r25, 0x96	; 150
    146c:	bb 27       	eor	r27, r27
    146e:	93 95       	inc	r25
    1470:	f6 95       	lsr	r31
    1472:	87 95       	ror	r24
    1474:	77 95       	ror	r23
    1476:	67 95       	ror	r22
    1478:	b7 95       	ror	r27
    147a:	f1 11       	cpse	r31, r1
    147c:	f8 cf       	rjmp	.-16     	; 0x146e <__floatsisf+0x1c>
    147e:	fa f4       	brpl	.+62     	; 0x14be <__floatsisf+0x6c>
    1480:	bb 0f       	add	r27, r27
    1482:	11 f4       	brne	.+4      	; 0x1488 <__floatsisf+0x36>
    1484:	60 ff       	sbrs	r22, 0
    1486:	1b c0       	rjmp	.+54     	; 0x14be <__floatsisf+0x6c>
    1488:	6f 5f       	subi	r22, 0xFF	; 255
    148a:	7f 4f       	sbci	r23, 0xFF	; 255
    148c:	8f 4f       	sbci	r24, 0xFF	; 255
    148e:	9f 4f       	sbci	r25, 0xFF	; 255
    1490:	16 c0       	rjmp	.+44     	; 0x14be <__floatsisf+0x6c>
    1492:	88 23       	and	r24, r24
    1494:	11 f0       	breq	.+4      	; 0x149a <__floatsisf+0x48>
    1496:	96 e9       	ldi	r25, 0x96	; 150
    1498:	11 c0       	rjmp	.+34     	; 0x14bc <__floatsisf+0x6a>
    149a:	77 23       	and	r23, r23
    149c:	21 f0       	breq	.+8      	; 0x14a6 <__floatsisf+0x54>
    149e:	9e e8       	ldi	r25, 0x8E	; 142
    14a0:	87 2f       	mov	r24, r23
    14a2:	76 2f       	mov	r23, r22
    14a4:	05 c0       	rjmp	.+10     	; 0x14b0 <__floatsisf+0x5e>
    14a6:	66 23       	and	r22, r22
    14a8:	71 f0       	breq	.+28     	; 0x14c6 <__floatsisf+0x74>
    14aa:	96 e8       	ldi	r25, 0x86	; 134
    14ac:	86 2f       	mov	r24, r22
    14ae:	70 e0       	ldi	r23, 0x00	; 0
    14b0:	60 e0       	ldi	r22, 0x00	; 0
    14b2:	2a f0       	brmi	.+10     	; 0x14be <__floatsisf+0x6c>
    14b4:	9a 95       	dec	r25
    14b6:	66 0f       	add	r22, r22
    14b8:	77 1f       	adc	r23, r23
    14ba:	88 1f       	adc	r24, r24
    14bc:	da f7       	brpl	.-10     	; 0x14b4 <__floatsisf+0x62>
    14be:	88 0f       	add	r24, r24
    14c0:	96 95       	lsr	r25
    14c2:	87 95       	ror	r24
    14c4:	97 f9       	bld	r25, 7
    14c6:	08 95       	ret

000014c8 <floor>:
    14c8:	85 d0       	rcall	.+266    	; 0x15d4 <__fp_trunc>
    14ca:	80 f0       	brcs	.+32     	; 0x14ec <floor+0x24>
    14cc:	9f 37       	cpi	r25, 0x7F	; 127
    14ce:	40 f4       	brcc	.+16     	; 0x14e0 <floor+0x18>
    14d0:	91 11       	cpse	r25, r1
    14d2:	0e f0       	brts	.+2      	; 0x14d6 <floor+0xe>
    14d4:	97 c0       	rjmp	.+302    	; 0x1604 <__fp_szero>
    14d6:	60 e0       	ldi	r22, 0x00	; 0
    14d8:	70 e0       	ldi	r23, 0x00	; 0
    14da:	80 e8       	ldi	r24, 0x80	; 128
    14dc:	9f eb       	ldi	r25, 0xBF	; 191
    14de:	08 95       	ret
    14e0:	26 f4       	brtc	.+8      	; 0x14ea <floor+0x22>
    14e2:	1b 16       	cp	r1, r27
    14e4:	61 1d       	adc	r22, r1
    14e6:	71 1d       	adc	r23, r1
    14e8:	81 1d       	adc	r24, r1
    14ea:	07 c0       	rjmp	.+14     	; 0x14fa <__fp_mintl>
    14ec:	21 c0       	rjmp	.+66     	; 0x1530 <__fp_mpack>

000014ee <__fp_inf>:
    14ee:	97 f9       	bld	r25, 7
    14f0:	9f 67       	ori	r25, 0x7F	; 127
    14f2:	80 e8       	ldi	r24, 0x80	; 128
    14f4:	70 e0       	ldi	r23, 0x00	; 0
    14f6:	60 e0       	ldi	r22, 0x00	; 0
    14f8:	08 95       	ret

000014fa <__fp_mintl>:
    14fa:	88 23       	and	r24, r24
    14fc:	71 f4       	brne	.+28     	; 0x151a <__fp_mintl+0x20>
    14fe:	77 23       	and	r23, r23
    1500:	21 f0       	breq	.+8      	; 0x150a <__fp_mintl+0x10>
    1502:	98 50       	subi	r25, 0x08	; 8
    1504:	87 2b       	or	r24, r23
    1506:	76 2f       	mov	r23, r22
    1508:	07 c0       	rjmp	.+14     	; 0x1518 <__fp_mintl+0x1e>
    150a:	66 23       	and	r22, r22
    150c:	11 f4       	brne	.+4      	; 0x1512 <__fp_mintl+0x18>
    150e:	99 27       	eor	r25, r25
    1510:	0d c0       	rjmp	.+26     	; 0x152c <__fp_mintl+0x32>
    1512:	90 51       	subi	r25, 0x10	; 16
    1514:	86 2b       	or	r24, r22
    1516:	70 e0       	ldi	r23, 0x00	; 0
    1518:	60 e0       	ldi	r22, 0x00	; 0
    151a:	2a f0       	brmi	.+10     	; 0x1526 <__fp_mintl+0x2c>
    151c:	9a 95       	dec	r25
    151e:	66 0f       	add	r22, r22
    1520:	77 1f       	adc	r23, r23
    1522:	88 1f       	adc	r24, r24
    1524:	da f7       	brpl	.-10     	; 0x151c <__fp_mintl+0x22>
    1526:	88 0f       	add	r24, r24
    1528:	96 95       	lsr	r25
    152a:	87 95       	ror	r24
    152c:	97 f9       	bld	r25, 7
    152e:	08 95       	ret

00001530 <__fp_mpack>:
    1530:	9f 3f       	cpi	r25, 0xFF	; 255
    1532:	31 f0       	breq	.+12     	; 0x1540 <__fp_mpack_finite+0xc>

00001534 <__fp_mpack_finite>:
    1534:	91 50       	subi	r25, 0x01	; 1
    1536:	20 f4       	brcc	.+8      	; 0x1540 <__fp_mpack_finite+0xc>
    1538:	87 95       	ror	r24
    153a:	77 95       	ror	r23
    153c:	67 95       	ror	r22
    153e:	b7 95       	ror	r27
    1540:	88 0f       	add	r24, r24
    1542:	91 1d       	adc	r25, r1
    1544:	96 95       	lsr	r25
    1546:	87 95       	ror	r24
    1548:	97 f9       	bld	r25, 7
    154a:	08 95       	ret

0000154c <__fp_nan>:
    154c:	9f ef       	ldi	r25, 0xFF	; 255
    154e:	80 ec       	ldi	r24, 0xC0	; 192
    1550:	08 95       	ret

00001552 <__fp_pscA>:
    1552:	00 24       	eor	r0, r0
    1554:	0a 94       	dec	r0
    1556:	16 16       	cp	r1, r22
    1558:	17 06       	cpc	r1, r23
    155a:	18 06       	cpc	r1, r24
    155c:	09 06       	cpc	r0, r25
    155e:	08 95       	ret

00001560 <__fp_pscB>:
    1560:	00 24       	eor	r0, r0
    1562:	0a 94       	dec	r0
    1564:	12 16       	cp	r1, r18
    1566:	13 06       	cpc	r1, r19
    1568:	14 06       	cpc	r1, r20
    156a:	05 06       	cpc	r0, r21
    156c:	08 95       	ret

0000156e <__fp_round>:
    156e:	09 2e       	mov	r0, r25
    1570:	03 94       	inc	r0
    1572:	00 0c       	add	r0, r0
    1574:	11 f4       	brne	.+4      	; 0x157a <__fp_round+0xc>
    1576:	88 23       	and	r24, r24
    1578:	52 f0       	brmi	.+20     	; 0x158e <__fp_round+0x20>
    157a:	bb 0f       	add	r27, r27
    157c:	40 f4       	brcc	.+16     	; 0x158e <__fp_round+0x20>
    157e:	bf 2b       	or	r27, r31
    1580:	11 f4       	brne	.+4      	; 0x1586 <__fp_round+0x18>
    1582:	60 ff       	sbrs	r22, 0
    1584:	04 c0       	rjmp	.+8      	; 0x158e <__fp_round+0x20>
    1586:	6f 5f       	subi	r22, 0xFF	; 255
    1588:	7f 4f       	sbci	r23, 0xFF	; 255
    158a:	8f 4f       	sbci	r24, 0xFF	; 255
    158c:	9f 4f       	sbci	r25, 0xFF	; 255
    158e:	08 95       	ret

00001590 <__fp_split3>:
    1590:	57 fd       	sbrc	r21, 7
    1592:	90 58       	subi	r25, 0x80	; 128
    1594:	44 0f       	add	r20, r20
    1596:	55 1f       	adc	r21, r21
    1598:	59 f0       	breq	.+22     	; 0x15b0 <__fp_splitA+0x10>
    159a:	5f 3f       	cpi	r21, 0xFF	; 255
    159c:	71 f0       	breq	.+28     	; 0x15ba <__fp_splitA+0x1a>
    159e:	47 95       	ror	r20

000015a0 <__fp_splitA>:
    15a0:	88 0f       	add	r24, r24
    15a2:	97 fb       	bst	r25, 7
    15a4:	99 1f       	adc	r25, r25
    15a6:	61 f0       	breq	.+24     	; 0x15c0 <__fp_splitA+0x20>
    15a8:	9f 3f       	cpi	r25, 0xFF	; 255
    15aa:	79 f0       	breq	.+30     	; 0x15ca <__fp_splitA+0x2a>
    15ac:	87 95       	ror	r24
    15ae:	08 95       	ret
    15b0:	12 16       	cp	r1, r18
    15b2:	13 06       	cpc	r1, r19
    15b4:	14 06       	cpc	r1, r20
    15b6:	55 1f       	adc	r21, r21
    15b8:	f2 cf       	rjmp	.-28     	; 0x159e <__fp_split3+0xe>
    15ba:	46 95       	lsr	r20
    15bc:	f1 df       	rcall	.-30     	; 0x15a0 <__fp_splitA>
    15be:	08 c0       	rjmp	.+16     	; 0x15d0 <__fp_splitA+0x30>
    15c0:	16 16       	cp	r1, r22
    15c2:	17 06       	cpc	r1, r23
    15c4:	18 06       	cpc	r1, r24
    15c6:	99 1f       	adc	r25, r25
    15c8:	f1 cf       	rjmp	.-30     	; 0x15ac <__fp_splitA+0xc>
    15ca:	86 95       	lsr	r24
    15cc:	71 05       	cpc	r23, r1
    15ce:	61 05       	cpc	r22, r1
    15d0:	08 94       	sec
    15d2:	08 95       	ret

000015d4 <__fp_trunc>:
    15d4:	e5 df       	rcall	.-54     	; 0x15a0 <__fp_splitA>
    15d6:	a0 f0       	brcs	.+40     	; 0x1600 <__fp_trunc+0x2c>
    15d8:	be e7       	ldi	r27, 0x7E	; 126
    15da:	b9 17       	cp	r27, r25
    15dc:	88 f4       	brcc	.+34     	; 0x1600 <__fp_trunc+0x2c>
    15de:	bb 27       	eor	r27, r27
    15e0:	9f 38       	cpi	r25, 0x8F	; 143
    15e2:	60 f4       	brcc	.+24     	; 0x15fc <__fp_trunc+0x28>
    15e4:	16 16       	cp	r1, r22
    15e6:	b1 1d       	adc	r27, r1
    15e8:	67 2f       	mov	r22, r23
    15ea:	78 2f       	mov	r23, r24
    15ec:	88 27       	eor	r24, r24
    15ee:	98 5f       	subi	r25, 0xF8	; 248
    15f0:	f7 cf       	rjmp	.-18     	; 0x15e0 <__fp_trunc+0xc>
    15f2:	86 95       	lsr	r24
    15f4:	77 95       	ror	r23
    15f6:	67 95       	ror	r22
    15f8:	b1 1d       	adc	r27, r1
    15fa:	93 95       	inc	r25
    15fc:	96 39       	cpi	r25, 0x96	; 150
    15fe:	c8 f3       	brcs	.-14     	; 0x15f2 <__fp_trunc+0x1e>
    1600:	08 95       	ret

00001602 <__fp_zero>:
    1602:	e8 94       	clt

00001604 <__fp_szero>:
    1604:	bb 27       	eor	r27, r27
    1606:	66 27       	eor	r22, r22
    1608:	77 27       	eor	r23, r23
    160a:	cb 01       	movw	r24, r22
    160c:	97 f9       	bld	r25, 7
    160e:	08 95       	ret

00001610 <__mulsf3>:
    1610:	0b d0       	rcall	.+22     	; 0x1628 <__mulsf3x>
    1612:	ad cf       	rjmp	.-166    	; 0x156e <__fp_round>
    1614:	9e df       	rcall	.-196    	; 0x1552 <__fp_pscA>
    1616:	28 f0       	brcs	.+10     	; 0x1622 <__mulsf3+0x12>
    1618:	a3 df       	rcall	.-186    	; 0x1560 <__fp_pscB>
    161a:	18 f0       	brcs	.+6      	; 0x1622 <__mulsf3+0x12>
    161c:	95 23       	and	r25, r21
    161e:	09 f0       	breq	.+2      	; 0x1622 <__mulsf3+0x12>
    1620:	66 cf       	rjmp	.-308    	; 0x14ee <__fp_inf>
    1622:	94 cf       	rjmp	.-216    	; 0x154c <__fp_nan>
    1624:	11 24       	eor	r1, r1
    1626:	ee cf       	rjmp	.-36     	; 0x1604 <__fp_szero>

00001628 <__mulsf3x>:
    1628:	b3 df       	rcall	.-154    	; 0x1590 <__fp_split3>
    162a:	a0 f3       	brcs	.-24     	; 0x1614 <__mulsf3+0x4>

0000162c <__mulsf3_pse>:
    162c:	95 9f       	mul	r25, r21
    162e:	d1 f3       	breq	.-12     	; 0x1624 <__mulsf3+0x14>
    1630:	95 0f       	add	r25, r21
    1632:	50 e0       	ldi	r21, 0x00	; 0
    1634:	55 1f       	adc	r21, r21
    1636:	62 9f       	mul	r22, r18
    1638:	f0 01       	movw	r30, r0
    163a:	72 9f       	mul	r23, r18
    163c:	bb 27       	eor	r27, r27
    163e:	f0 0d       	add	r31, r0
    1640:	b1 1d       	adc	r27, r1
    1642:	63 9f       	mul	r22, r19
    1644:	aa 27       	eor	r26, r26
    1646:	f0 0d       	add	r31, r0
    1648:	b1 1d       	adc	r27, r1
    164a:	aa 1f       	adc	r26, r26
    164c:	64 9f       	mul	r22, r20
    164e:	66 27       	eor	r22, r22
    1650:	b0 0d       	add	r27, r0
    1652:	a1 1d       	adc	r26, r1
    1654:	66 1f       	adc	r22, r22
    1656:	82 9f       	mul	r24, r18
    1658:	22 27       	eor	r18, r18
    165a:	b0 0d       	add	r27, r0
    165c:	a1 1d       	adc	r26, r1
    165e:	62 1f       	adc	r22, r18
    1660:	73 9f       	mul	r23, r19
    1662:	b0 0d       	add	r27, r0
    1664:	a1 1d       	adc	r26, r1
    1666:	62 1f       	adc	r22, r18
    1668:	83 9f       	mul	r24, r19
    166a:	a0 0d       	add	r26, r0
    166c:	61 1d       	adc	r22, r1
    166e:	22 1f       	adc	r18, r18
    1670:	74 9f       	mul	r23, r20
    1672:	33 27       	eor	r19, r19
    1674:	a0 0d       	add	r26, r0
    1676:	61 1d       	adc	r22, r1
    1678:	23 1f       	adc	r18, r19
    167a:	84 9f       	mul	r24, r20
    167c:	60 0d       	add	r22, r0
    167e:	21 1d       	adc	r18, r1
    1680:	82 2f       	mov	r24, r18
    1682:	76 2f       	mov	r23, r22
    1684:	6a 2f       	mov	r22, r26
    1686:	11 24       	eor	r1, r1
    1688:	9f 57       	subi	r25, 0x7F	; 127
    168a:	50 40       	sbci	r21, 0x00	; 0
    168c:	8a f0       	brmi	.+34     	; 0x16b0 <__mulsf3_pse+0x84>
    168e:	e1 f0       	breq	.+56     	; 0x16c8 <__mulsf3_pse+0x9c>
    1690:	88 23       	and	r24, r24
    1692:	4a f0       	brmi	.+18     	; 0x16a6 <__mulsf3_pse+0x7a>
    1694:	ee 0f       	add	r30, r30
    1696:	ff 1f       	adc	r31, r31
    1698:	bb 1f       	adc	r27, r27
    169a:	66 1f       	adc	r22, r22
    169c:	77 1f       	adc	r23, r23
    169e:	88 1f       	adc	r24, r24
    16a0:	91 50       	subi	r25, 0x01	; 1
    16a2:	50 40       	sbci	r21, 0x00	; 0
    16a4:	a9 f7       	brne	.-22     	; 0x1690 <__mulsf3_pse+0x64>
    16a6:	9e 3f       	cpi	r25, 0xFE	; 254
    16a8:	51 05       	cpc	r21, r1
    16aa:	70 f0       	brcs	.+28     	; 0x16c8 <__mulsf3_pse+0x9c>
    16ac:	20 cf       	rjmp	.-448    	; 0x14ee <__fp_inf>
    16ae:	aa cf       	rjmp	.-172    	; 0x1604 <__fp_szero>
    16b0:	5f 3f       	cpi	r21, 0xFF	; 255
    16b2:	ec f3       	brlt	.-6      	; 0x16ae <__mulsf3_pse+0x82>
    16b4:	98 3e       	cpi	r25, 0xE8	; 232
    16b6:	dc f3       	brlt	.-10     	; 0x16ae <__mulsf3_pse+0x82>
    16b8:	86 95       	lsr	r24
    16ba:	77 95       	ror	r23
    16bc:	67 95       	ror	r22
    16be:	b7 95       	ror	r27
    16c0:	f7 95       	ror	r31
    16c2:	e7 95       	ror	r30
    16c4:	9f 5f       	subi	r25, 0xFF	; 255
    16c6:	c1 f7       	brne	.-16     	; 0x16b8 <__mulsf3_pse+0x8c>
    16c8:	fe 2b       	or	r31, r30
    16ca:	88 0f       	add	r24, r24
    16cc:	91 1d       	adc	r25, r1
    16ce:	96 95       	lsr	r25
    16d0:	87 95       	ror	r24
    16d2:	97 f9       	bld	r25, 7
    16d4:	08 95       	ret

000016d6 <__divmodhi4>:
    16d6:	97 fb       	bst	r25, 7
    16d8:	07 2e       	mov	r0, r23
    16da:	16 f4       	brtc	.+4      	; 0x16e0 <__divmodhi4+0xa>
    16dc:	00 94       	com	r0
    16de:	06 d0       	rcall	.+12     	; 0x16ec <__divmodhi4_neg1>
    16e0:	77 fd       	sbrc	r23, 7
    16e2:	08 d0       	rcall	.+16     	; 0x16f4 <__divmodhi4_neg2>
    16e4:	23 d0       	rcall	.+70     	; 0x172c <__udivmodhi4>
    16e6:	07 fc       	sbrc	r0, 7
    16e8:	05 d0       	rcall	.+10     	; 0x16f4 <__divmodhi4_neg2>
    16ea:	3e f4       	brtc	.+14     	; 0x16fa <__divmodhi4_exit>

000016ec <__divmodhi4_neg1>:
    16ec:	90 95       	com	r25
    16ee:	81 95       	neg	r24
    16f0:	9f 4f       	sbci	r25, 0xFF	; 255
    16f2:	08 95       	ret

000016f4 <__divmodhi4_neg2>:
    16f4:	70 95       	com	r23
    16f6:	61 95       	neg	r22
    16f8:	7f 4f       	sbci	r23, 0xFF	; 255

000016fa <__divmodhi4_exit>:
    16fa:	08 95       	ret

000016fc <__tablejump2__>:
    16fc:	ee 0f       	add	r30, r30
    16fe:	ff 1f       	adc	r31, r31
    1700:	00 24       	eor	r0, r0
    1702:	00 1c       	adc	r0, r0
    1704:	0b be       	out	0x3b, r0	; 59
    1706:	07 90       	elpm	r0, Z+
    1708:	f6 91       	elpm	r31, Z
    170a:	e0 2d       	mov	r30, r0
    170c:	09 94       	ijmp

0000170e <__umulhisi3>:
    170e:	a2 9f       	mul	r26, r18
    1710:	b0 01       	movw	r22, r0
    1712:	b3 9f       	mul	r27, r19
    1714:	c0 01       	movw	r24, r0
    1716:	a3 9f       	mul	r26, r19
    1718:	70 0d       	add	r23, r0
    171a:	81 1d       	adc	r24, r1
    171c:	11 24       	eor	r1, r1
    171e:	91 1d       	adc	r25, r1
    1720:	b2 9f       	mul	r27, r18
    1722:	70 0d       	add	r23, r0
    1724:	81 1d       	adc	r24, r1
    1726:	11 24       	eor	r1, r1
    1728:	91 1d       	adc	r25, r1
    172a:	08 95       	ret

0000172c <__udivmodhi4>:
    172c:	aa 1b       	sub	r26, r26
    172e:	bb 1b       	sub	r27, r27
    1730:	51 e1       	ldi	r21, 0x11	; 17
    1732:	07 c0       	rjmp	.+14     	; 0x1742 <__udivmodhi4_ep>

00001734 <__udivmodhi4_loop>:
    1734:	aa 1f       	adc	r26, r26
    1736:	bb 1f       	adc	r27, r27
    1738:	a6 17       	cp	r26, r22
    173a:	b7 07       	cpc	r27, r23
    173c:	10 f0       	brcs	.+4      	; 0x1742 <__udivmodhi4_ep>
    173e:	a6 1b       	sub	r26, r22
    1740:	b7 0b       	sbc	r27, r23

00001742 <__udivmodhi4_ep>:
    1742:	88 1f       	adc	r24, r24
    1744:	99 1f       	adc	r25, r25
    1746:	5a 95       	dec	r21
    1748:	a9 f7       	brne	.-22     	; 0x1734 <__udivmodhi4_loop>
    174a:	80 95       	com	r24
    174c:	90 95       	com	r25
    174e:	bc 01       	movw	r22, r24
    1750:	cd 01       	movw	r24, r26
    1752:	08 95       	ret

00001754 <sprintf>:
    1754:	0f 93       	push	r16
    1756:	1f 93       	push	r17
    1758:	cf 93       	push	r28
    175a:	df 93       	push	r29
    175c:	cd b7       	in	r28, 0x3d	; 61
    175e:	de b7       	in	r29, 0x3e	; 62
    1760:	2e 97       	sbiw	r28, 0x0e	; 14
    1762:	0f b6       	in	r0, 0x3f	; 63
    1764:	f8 94       	cli
    1766:	de bf       	out	0x3e, r29	; 62
    1768:	0f be       	out	0x3f, r0	; 63
    176a:	cd bf       	out	0x3d, r28	; 61
    176c:	0d 89       	ldd	r16, Y+21	; 0x15
    176e:	1e 89       	ldd	r17, Y+22	; 0x16
    1770:	86 e0       	ldi	r24, 0x06	; 6
    1772:	8c 83       	std	Y+4, r24	; 0x04
    1774:	1a 83       	std	Y+2, r17	; 0x02
    1776:	09 83       	std	Y+1, r16	; 0x01
    1778:	8f ef       	ldi	r24, 0xFF	; 255
    177a:	9f e7       	ldi	r25, 0x7F	; 127
    177c:	9e 83       	std	Y+6, r25	; 0x06
    177e:	8d 83       	std	Y+5, r24	; 0x05
    1780:	ae 01       	movw	r20, r28
    1782:	47 5e       	subi	r20, 0xE7	; 231
    1784:	5f 4f       	sbci	r21, 0xFF	; 255
    1786:	6f 89       	ldd	r22, Y+23	; 0x17
    1788:	78 8d       	ldd	r23, Y+24	; 0x18
    178a:	ce 01       	movw	r24, r28
    178c:	01 96       	adiw	r24, 0x01	; 1
    178e:	10 d0       	rcall	.+32     	; 0x17b0 <vfprintf>
    1790:	ef 81       	ldd	r30, Y+7	; 0x07
    1792:	f8 85       	ldd	r31, Y+8	; 0x08
    1794:	e0 0f       	add	r30, r16
    1796:	f1 1f       	adc	r31, r17
    1798:	10 82       	st	Z, r1
    179a:	2e 96       	adiw	r28, 0x0e	; 14
    179c:	0f b6       	in	r0, 0x3f	; 63
    179e:	f8 94       	cli
    17a0:	de bf       	out	0x3e, r29	; 62
    17a2:	0f be       	out	0x3f, r0	; 63
    17a4:	cd bf       	out	0x3d, r28	; 61
    17a6:	df 91       	pop	r29
    17a8:	cf 91       	pop	r28
    17aa:	1f 91       	pop	r17
    17ac:	0f 91       	pop	r16
    17ae:	08 95       	ret

000017b0 <vfprintf>:
    17b0:	2f 92       	push	r2
    17b2:	3f 92       	push	r3
    17b4:	4f 92       	push	r4
    17b6:	5f 92       	push	r5
    17b8:	6f 92       	push	r6
    17ba:	7f 92       	push	r7
    17bc:	8f 92       	push	r8
    17be:	9f 92       	push	r9
    17c0:	af 92       	push	r10
    17c2:	bf 92       	push	r11
    17c4:	cf 92       	push	r12
    17c6:	df 92       	push	r13
    17c8:	ef 92       	push	r14
    17ca:	ff 92       	push	r15
    17cc:	0f 93       	push	r16
    17ce:	1f 93       	push	r17
    17d0:	cf 93       	push	r28
    17d2:	df 93       	push	r29
    17d4:	cd b7       	in	r28, 0x3d	; 61
    17d6:	de b7       	in	r29, 0x3e	; 62
    17d8:	2b 97       	sbiw	r28, 0x0b	; 11
    17da:	0f b6       	in	r0, 0x3f	; 63
    17dc:	f8 94       	cli
    17de:	de bf       	out	0x3e, r29	; 62
    17e0:	0f be       	out	0x3f, r0	; 63
    17e2:	cd bf       	out	0x3d, r28	; 61
    17e4:	6c 01       	movw	r12, r24
    17e6:	7b 01       	movw	r14, r22
    17e8:	8a 01       	movw	r16, r20
    17ea:	fc 01       	movw	r30, r24
    17ec:	17 82       	std	Z+7, r1	; 0x07
    17ee:	16 82       	std	Z+6, r1	; 0x06
    17f0:	83 81       	ldd	r24, Z+3	; 0x03
    17f2:	81 ff       	sbrs	r24, 1
    17f4:	bf c1       	rjmp	.+894    	; 0x1b74 <vfprintf+0x3c4>
    17f6:	ce 01       	movw	r24, r28
    17f8:	01 96       	adiw	r24, 0x01	; 1
    17fa:	3c 01       	movw	r6, r24
    17fc:	f6 01       	movw	r30, r12
    17fe:	93 81       	ldd	r25, Z+3	; 0x03
    1800:	f7 01       	movw	r30, r14
    1802:	93 fd       	sbrc	r25, 3
    1804:	85 91       	lpm	r24, Z+
    1806:	93 ff       	sbrs	r25, 3
    1808:	81 91       	ld	r24, Z+
    180a:	7f 01       	movw	r14, r30
    180c:	88 23       	and	r24, r24
    180e:	09 f4       	brne	.+2      	; 0x1812 <vfprintf+0x62>
    1810:	ad c1       	rjmp	.+858    	; 0x1b6c <vfprintf+0x3bc>
    1812:	85 32       	cpi	r24, 0x25	; 37
    1814:	39 f4       	brne	.+14     	; 0x1824 <vfprintf+0x74>
    1816:	93 fd       	sbrc	r25, 3
    1818:	85 91       	lpm	r24, Z+
    181a:	93 ff       	sbrs	r25, 3
    181c:	81 91       	ld	r24, Z+
    181e:	7f 01       	movw	r14, r30
    1820:	85 32       	cpi	r24, 0x25	; 37
    1822:	21 f4       	brne	.+8      	; 0x182c <vfprintf+0x7c>
    1824:	b6 01       	movw	r22, r12
    1826:	90 e0       	ldi	r25, 0x00	; 0
    1828:	d6 d1       	rcall	.+940    	; 0x1bd6 <fputc>
    182a:	e8 cf       	rjmp	.-48     	; 0x17fc <vfprintf+0x4c>
    182c:	91 2c       	mov	r9, r1
    182e:	21 2c       	mov	r2, r1
    1830:	31 2c       	mov	r3, r1
    1832:	ff e1       	ldi	r31, 0x1F	; 31
    1834:	f3 15       	cp	r31, r3
    1836:	d8 f0       	brcs	.+54     	; 0x186e <vfprintf+0xbe>
    1838:	8b 32       	cpi	r24, 0x2B	; 43
    183a:	79 f0       	breq	.+30     	; 0x185a <vfprintf+0xaa>
    183c:	38 f4       	brcc	.+14     	; 0x184c <vfprintf+0x9c>
    183e:	80 32       	cpi	r24, 0x20	; 32
    1840:	79 f0       	breq	.+30     	; 0x1860 <vfprintf+0xb0>
    1842:	83 32       	cpi	r24, 0x23	; 35
    1844:	a1 f4       	brne	.+40     	; 0x186e <vfprintf+0xbe>
    1846:	23 2d       	mov	r18, r3
    1848:	20 61       	ori	r18, 0x10	; 16
    184a:	1d c0       	rjmp	.+58     	; 0x1886 <vfprintf+0xd6>
    184c:	8d 32       	cpi	r24, 0x2D	; 45
    184e:	61 f0       	breq	.+24     	; 0x1868 <vfprintf+0xb8>
    1850:	80 33       	cpi	r24, 0x30	; 48
    1852:	69 f4       	brne	.+26     	; 0x186e <vfprintf+0xbe>
    1854:	23 2d       	mov	r18, r3
    1856:	21 60       	ori	r18, 0x01	; 1
    1858:	16 c0       	rjmp	.+44     	; 0x1886 <vfprintf+0xd6>
    185a:	83 2d       	mov	r24, r3
    185c:	82 60       	ori	r24, 0x02	; 2
    185e:	38 2e       	mov	r3, r24
    1860:	e3 2d       	mov	r30, r3
    1862:	e4 60       	ori	r30, 0x04	; 4
    1864:	3e 2e       	mov	r3, r30
    1866:	2a c0       	rjmp	.+84     	; 0x18bc <vfprintf+0x10c>
    1868:	f3 2d       	mov	r31, r3
    186a:	f8 60       	ori	r31, 0x08	; 8
    186c:	1d c0       	rjmp	.+58     	; 0x18a8 <vfprintf+0xf8>
    186e:	37 fc       	sbrc	r3, 7
    1870:	2d c0       	rjmp	.+90     	; 0x18cc <vfprintf+0x11c>
    1872:	20 ed       	ldi	r18, 0xD0	; 208
    1874:	28 0f       	add	r18, r24
    1876:	2a 30       	cpi	r18, 0x0A	; 10
    1878:	40 f0       	brcs	.+16     	; 0x188a <vfprintf+0xda>
    187a:	8e 32       	cpi	r24, 0x2E	; 46
    187c:	b9 f4       	brne	.+46     	; 0x18ac <vfprintf+0xfc>
    187e:	36 fc       	sbrc	r3, 6
    1880:	75 c1       	rjmp	.+746    	; 0x1b6c <vfprintf+0x3bc>
    1882:	23 2d       	mov	r18, r3
    1884:	20 64       	ori	r18, 0x40	; 64
    1886:	32 2e       	mov	r3, r18
    1888:	19 c0       	rjmp	.+50     	; 0x18bc <vfprintf+0x10c>
    188a:	36 fe       	sbrs	r3, 6
    188c:	06 c0       	rjmp	.+12     	; 0x189a <vfprintf+0xea>
    188e:	8a e0       	ldi	r24, 0x0A	; 10
    1890:	98 9e       	mul	r9, r24
    1892:	20 0d       	add	r18, r0
    1894:	11 24       	eor	r1, r1
    1896:	92 2e       	mov	r9, r18
    1898:	11 c0       	rjmp	.+34     	; 0x18bc <vfprintf+0x10c>
    189a:	ea e0       	ldi	r30, 0x0A	; 10
    189c:	2e 9e       	mul	r2, r30
    189e:	20 0d       	add	r18, r0
    18a0:	11 24       	eor	r1, r1
    18a2:	22 2e       	mov	r2, r18
    18a4:	f3 2d       	mov	r31, r3
    18a6:	f0 62       	ori	r31, 0x20	; 32
    18a8:	3f 2e       	mov	r3, r31
    18aa:	08 c0       	rjmp	.+16     	; 0x18bc <vfprintf+0x10c>
    18ac:	8c 36       	cpi	r24, 0x6C	; 108
    18ae:	21 f4       	brne	.+8      	; 0x18b8 <vfprintf+0x108>
    18b0:	83 2d       	mov	r24, r3
    18b2:	80 68       	ori	r24, 0x80	; 128
    18b4:	38 2e       	mov	r3, r24
    18b6:	02 c0       	rjmp	.+4      	; 0x18bc <vfprintf+0x10c>
    18b8:	88 36       	cpi	r24, 0x68	; 104
    18ba:	41 f4       	brne	.+16     	; 0x18cc <vfprintf+0x11c>
    18bc:	f7 01       	movw	r30, r14
    18be:	93 fd       	sbrc	r25, 3
    18c0:	85 91       	lpm	r24, Z+
    18c2:	93 ff       	sbrs	r25, 3
    18c4:	81 91       	ld	r24, Z+
    18c6:	7f 01       	movw	r14, r30
    18c8:	81 11       	cpse	r24, r1
    18ca:	b3 cf       	rjmp	.-154    	; 0x1832 <vfprintf+0x82>
    18cc:	98 2f       	mov	r25, r24
    18ce:	9f 7d       	andi	r25, 0xDF	; 223
    18d0:	95 54       	subi	r25, 0x45	; 69
    18d2:	93 30       	cpi	r25, 0x03	; 3
    18d4:	28 f4       	brcc	.+10     	; 0x18e0 <vfprintf+0x130>
    18d6:	0c 5f       	subi	r16, 0xFC	; 252
    18d8:	1f 4f       	sbci	r17, 0xFF	; 255
    18da:	9f e3       	ldi	r25, 0x3F	; 63
    18dc:	99 83       	std	Y+1, r25	; 0x01
    18de:	0d c0       	rjmp	.+26     	; 0x18fa <vfprintf+0x14a>
    18e0:	83 36       	cpi	r24, 0x63	; 99
    18e2:	31 f0       	breq	.+12     	; 0x18f0 <vfprintf+0x140>
    18e4:	83 37       	cpi	r24, 0x73	; 115
    18e6:	71 f0       	breq	.+28     	; 0x1904 <vfprintf+0x154>
    18e8:	83 35       	cpi	r24, 0x53	; 83
    18ea:	09 f0       	breq	.+2      	; 0x18ee <vfprintf+0x13e>
    18ec:	55 c0       	rjmp	.+170    	; 0x1998 <vfprintf+0x1e8>
    18ee:	20 c0       	rjmp	.+64     	; 0x1930 <vfprintf+0x180>
    18f0:	f8 01       	movw	r30, r16
    18f2:	80 81       	ld	r24, Z
    18f4:	89 83       	std	Y+1, r24	; 0x01
    18f6:	0e 5f       	subi	r16, 0xFE	; 254
    18f8:	1f 4f       	sbci	r17, 0xFF	; 255
    18fa:	88 24       	eor	r8, r8
    18fc:	83 94       	inc	r8
    18fe:	91 2c       	mov	r9, r1
    1900:	53 01       	movw	r10, r6
    1902:	12 c0       	rjmp	.+36     	; 0x1928 <vfprintf+0x178>
    1904:	28 01       	movw	r4, r16
    1906:	f2 e0       	ldi	r31, 0x02	; 2
    1908:	4f 0e       	add	r4, r31
    190a:	51 1c       	adc	r5, r1
    190c:	f8 01       	movw	r30, r16
    190e:	a0 80       	ld	r10, Z
    1910:	b1 80       	ldd	r11, Z+1	; 0x01
    1912:	36 fe       	sbrs	r3, 6
    1914:	03 c0       	rjmp	.+6      	; 0x191c <vfprintf+0x16c>
    1916:	69 2d       	mov	r22, r9
    1918:	70 e0       	ldi	r23, 0x00	; 0
    191a:	02 c0       	rjmp	.+4      	; 0x1920 <vfprintf+0x170>
    191c:	6f ef       	ldi	r22, 0xFF	; 255
    191e:	7f ef       	ldi	r23, 0xFF	; 255
    1920:	c5 01       	movw	r24, r10
    1922:	4e d1       	rcall	.+668    	; 0x1bc0 <strnlen>
    1924:	4c 01       	movw	r8, r24
    1926:	82 01       	movw	r16, r4
    1928:	f3 2d       	mov	r31, r3
    192a:	ff 77       	andi	r31, 0x7F	; 127
    192c:	3f 2e       	mov	r3, r31
    192e:	15 c0       	rjmp	.+42     	; 0x195a <vfprintf+0x1aa>
    1930:	28 01       	movw	r4, r16
    1932:	22 e0       	ldi	r18, 0x02	; 2
    1934:	42 0e       	add	r4, r18
    1936:	51 1c       	adc	r5, r1
    1938:	f8 01       	movw	r30, r16
    193a:	a0 80       	ld	r10, Z
    193c:	b1 80       	ldd	r11, Z+1	; 0x01
    193e:	36 fe       	sbrs	r3, 6
    1940:	03 c0       	rjmp	.+6      	; 0x1948 <vfprintf+0x198>
    1942:	69 2d       	mov	r22, r9
    1944:	70 e0       	ldi	r23, 0x00	; 0
    1946:	02 c0       	rjmp	.+4      	; 0x194c <vfprintf+0x19c>
    1948:	6f ef       	ldi	r22, 0xFF	; 255
    194a:	7f ef       	ldi	r23, 0xFF	; 255
    194c:	c5 01       	movw	r24, r10
    194e:	2d d1       	rcall	.+602    	; 0x1baa <strnlen_P>
    1950:	4c 01       	movw	r8, r24
    1952:	f3 2d       	mov	r31, r3
    1954:	f0 68       	ori	r31, 0x80	; 128
    1956:	3f 2e       	mov	r3, r31
    1958:	82 01       	movw	r16, r4
    195a:	33 fc       	sbrc	r3, 3
    195c:	19 c0       	rjmp	.+50     	; 0x1990 <vfprintf+0x1e0>
    195e:	82 2d       	mov	r24, r2
    1960:	90 e0       	ldi	r25, 0x00	; 0
    1962:	88 16       	cp	r8, r24
    1964:	99 06       	cpc	r9, r25
    1966:	a0 f4       	brcc	.+40     	; 0x1990 <vfprintf+0x1e0>
    1968:	b6 01       	movw	r22, r12
    196a:	80 e2       	ldi	r24, 0x20	; 32
    196c:	90 e0       	ldi	r25, 0x00	; 0
    196e:	33 d1       	rcall	.+614    	; 0x1bd6 <fputc>
    1970:	2a 94       	dec	r2
    1972:	f5 cf       	rjmp	.-22     	; 0x195e <vfprintf+0x1ae>
    1974:	f5 01       	movw	r30, r10
    1976:	37 fc       	sbrc	r3, 7
    1978:	85 91       	lpm	r24, Z+
    197a:	37 fe       	sbrs	r3, 7
    197c:	81 91       	ld	r24, Z+
    197e:	5f 01       	movw	r10, r30
    1980:	b6 01       	movw	r22, r12
    1982:	90 e0       	ldi	r25, 0x00	; 0
    1984:	28 d1       	rcall	.+592    	; 0x1bd6 <fputc>
    1986:	21 10       	cpse	r2, r1
    1988:	2a 94       	dec	r2
    198a:	21 e0       	ldi	r18, 0x01	; 1
    198c:	82 1a       	sub	r8, r18
    198e:	91 08       	sbc	r9, r1
    1990:	81 14       	cp	r8, r1
    1992:	91 04       	cpc	r9, r1
    1994:	79 f7       	brne	.-34     	; 0x1974 <vfprintf+0x1c4>
    1996:	e1 c0       	rjmp	.+450    	; 0x1b5a <vfprintf+0x3aa>
    1998:	84 36       	cpi	r24, 0x64	; 100
    199a:	11 f0       	breq	.+4      	; 0x19a0 <vfprintf+0x1f0>
    199c:	89 36       	cpi	r24, 0x69	; 105
    199e:	39 f5       	brne	.+78     	; 0x19ee <vfprintf+0x23e>
    19a0:	f8 01       	movw	r30, r16
    19a2:	37 fe       	sbrs	r3, 7
    19a4:	07 c0       	rjmp	.+14     	; 0x19b4 <vfprintf+0x204>
    19a6:	60 81       	ld	r22, Z
    19a8:	71 81       	ldd	r23, Z+1	; 0x01
    19aa:	82 81       	ldd	r24, Z+2	; 0x02
    19ac:	93 81       	ldd	r25, Z+3	; 0x03
    19ae:	0c 5f       	subi	r16, 0xFC	; 252
    19b0:	1f 4f       	sbci	r17, 0xFF	; 255
    19b2:	08 c0       	rjmp	.+16     	; 0x19c4 <vfprintf+0x214>
    19b4:	60 81       	ld	r22, Z
    19b6:	71 81       	ldd	r23, Z+1	; 0x01
    19b8:	07 2e       	mov	r0, r23
    19ba:	00 0c       	add	r0, r0
    19bc:	88 0b       	sbc	r24, r24
    19be:	99 0b       	sbc	r25, r25
    19c0:	0e 5f       	subi	r16, 0xFE	; 254
    19c2:	1f 4f       	sbci	r17, 0xFF	; 255
    19c4:	f3 2d       	mov	r31, r3
    19c6:	ff 76       	andi	r31, 0x6F	; 111
    19c8:	3f 2e       	mov	r3, r31
    19ca:	97 ff       	sbrs	r25, 7
    19cc:	09 c0       	rjmp	.+18     	; 0x19e0 <vfprintf+0x230>
    19ce:	90 95       	com	r25
    19d0:	80 95       	com	r24
    19d2:	70 95       	com	r23
    19d4:	61 95       	neg	r22
    19d6:	7f 4f       	sbci	r23, 0xFF	; 255
    19d8:	8f 4f       	sbci	r24, 0xFF	; 255
    19da:	9f 4f       	sbci	r25, 0xFF	; 255
    19dc:	f0 68       	ori	r31, 0x80	; 128
    19de:	3f 2e       	mov	r3, r31
    19e0:	2a e0       	ldi	r18, 0x0A	; 10
    19e2:	30 e0       	ldi	r19, 0x00	; 0
    19e4:	a3 01       	movw	r20, r6
    19e6:	33 d1       	rcall	.+614    	; 0x1c4e <__ultoa_invert>
    19e8:	88 2e       	mov	r8, r24
    19ea:	86 18       	sub	r8, r6
    19ec:	44 c0       	rjmp	.+136    	; 0x1a76 <vfprintf+0x2c6>
    19ee:	85 37       	cpi	r24, 0x75	; 117
    19f0:	31 f4       	brne	.+12     	; 0x19fe <vfprintf+0x24e>
    19f2:	23 2d       	mov	r18, r3
    19f4:	2f 7e       	andi	r18, 0xEF	; 239
    19f6:	b2 2e       	mov	r11, r18
    19f8:	2a e0       	ldi	r18, 0x0A	; 10
    19fa:	30 e0       	ldi	r19, 0x00	; 0
    19fc:	25 c0       	rjmp	.+74     	; 0x1a48 <vfprintf+0x298>
    19fe:	93 2d       	mov	r25, r3
    1a00:	99 7f       	andi	r25, 0xF9	; 249
    1a02:	b9 2e       	mov	r11, r25
    1a04:	8f 36       	cpi	r24, 0x6F	; 111
    1a06:	c1 f0       	breq	.+48     	; 0x1a38 <vfprintf+0x288>
    1a08:	18 f4       	brcc	.+6      	; 0x1a10 <vfprintf+0x260>
    1a0a:	88 35       	cpi	r24, 0x58	; 88
    1a0c:	79 f0       	breq	.+30     	; 0x1a2c <vfprintf+0x27c>
    1a0e:	ae c0       	rjmp	.+348    	; 0x1b6c <vfprintf+0x3bc>
    1a10:	80 37       	cpi	r24, 0x70	; 112
    1a12:	19 f0       	breq	.+6      	; 0x1a1a <vfprintf+0x26a>
    1a14:	88 37       	cpi	r24, 0x78	; 120
    1a16:	21 f0       	breq	.+8      	; 0x1a20 <vfprintf+0x270>
    1a18:	a9 c0       	rjmp	.+338    	; 0x1b6c <vfprintf+0x3bc>
    1a1a:	e9 2f       	mov	r30, r25
    1a1c:	e0 61       	ori	r30, 0x10	; 16
    1a1e:	be 2e       	mov	r11, r30
    1a20:	b4 fe       	sbrs	r11, 4
    1a22:	0d c0       	rjmp	.+26     	; 0x1a3e <vfprintf+0x28e>
    1a24:	fb 2d       	mov	r31, r11
    1a26:	f4 60       	ori	r31, 0x04	; 4
    1a28:	bf 2e       	mov	r11, r31
    1a2a:	09 c0       	rjmp	.+18     	; 0x1a3e <vfprintf+0x28e>
    1a2c:	34 fe       	sbrs	r3, 4
    1a2e:	0a c0       	rjmp	.+20     	; 0x1a44 <vfprintf+0x294>
    1a30:	29 2f       	mov	r18, r25
    1a32:	26 60       	ori	r18, 0x06	; 6
    1a34:	b2 2e       	mov	r11, r18
    1a36:	06 c0       	rjmp	.+12     	; 0x1a44 <vfprintf+0x294>
    1a38:	28 e0       	ldi	r18, 0x08	; 8
    1a3a:	30 e0       	ldi	r19, 0x00	; 0
    1a3c:	05 c0       	rjmp	.+10     	; 0x1a48 <vfprintf+0x298>
    1a3e:	20 e1       	ldi	r18, 0x10	; 16
    1a40:	30 e0       	ldi	r19, 0x00	; 0
    1a42:	02 c0       	rjmp	.+4      	; 0x1a48 <vfprintf+0x298>
    1a44:	20 e1       	ldi	r18, 0x10	; 16
    1a46:	32 e0       	ldi	r19, 0x02	; 2
    1a48:	f8 01       	movw	r30, r16
    1a4a:	b7 fe       	sbrs	r11, 7
    1a4c:	07 c0       	rjmp	.+14     	; 0x1a5c <vfprintf+0x2ac>
    1a4e:	60 81       	ld	r22, Z
    1a50:	71 81       	ldd	r23, Z+1	; 0x01
    1a52:	82 81       	ldd	r24, Z+2	; 0x02
    1a54:	93 81       	ldd	r25, Z+3	; 0x03
    1a56:	0c 5f       	subi	r16, 0xFC	; 252
    1a58:	1f 4f       	sbci	r17, 0xFF	; 255
    1a5a:	06 c0       	rjmp	.+12     	; 0x1a68 <vfprintf+0x2b8>
    1a5c:	60 81       	ld	r22, Z
    1a5e:	71 81       	ldd	r23, Z+1	; 0x01
    1a60:	80 e0       	ldi	r24, 0x00	; 0
    1a62:	90 e0       	ldi	r25, 0x00	; 0
    1a64:	0e 5f       	subi	r16, 0xFE	; 254
    1a66:	1f 4f       	sbci	r17, 0xFF	; 255
    1a68:	a3 01       	movw	r20, r6
    1a6a:	f1 d0       	rcall	.+482    	; 0x1c4e <__ultoa_invert>
    1a6c:	88 2e       	mov	r8, r24
    1a6e:	86 18       	sub	r8, r6
    1a70:	fb 2d       	mov	r31, r11
    1a72:	ff 77       	andi	r31, 0x7F	; 127
    1a74:	3f 2e       	mov	r3, r31
    1a76:	36 fe       	sbrs	r3, 6
    1a78:	0d c0       	rjmp	.+26     	; 0x1a94 <vfprintf+0x2e4>
    1a7a:	23 2d       	mov	r18, r3
    1a7c:	2e 7f       	andi	r18, 0xFE	; 254
    1a7e:	a2 2e       	mov	r10, r18
    1a80:	89 14       	cp	r8, r9
    1a82:	58 f4       	brcc	.+22     	; 0x1a9a <vfprintf+0x2ea>
    1a84:	34 fe       	sbrs	r3, 4
    1a86:	0b c0       	rjmp	.+22     	; 0x1a9e <vfprintf+0x2ee>
    1a88:	32 fc       	sbrc	r3, 2
    1a8a:	09 c0       	rjmp	.+18     	; 0x1a9e <vfprintf+0x2ee>
    1a8c:	83 2d       	mov	r24, r3
    1a8e:	8e 7e       	andi	r24, 0xEE	; 238
    1a90:	a8 2e       	mov	r10, r24
    1a92:	05 c0       	rjmp	.+10     	; 0x1a9e <vfprintf+0x2ee>
    1a94:	b8 2c       	mov	r11, r8
    1a96:	a3 2c       	mov	r10, r3
    1a98:	03 c0       	rjmp	.+6      	; 0x1aa0 <vfprintf+0x2f0>
    1a9a:	b8 2c       	mov	r11, r8
    1a9c:	01 c0       	rjmp	.+2      	; 0x1aa0 <vfprintf+0x2f0>
    1a9e:	b9 2c       	mov	r11, r9
    1aa0:	a4 fe       	sbrs	r10, 4
    1aa2:	0f c0       	rjmp	.+30     	; 0x1ac2 <vfprintf+0x312>
    1aa4:	fe 01       	movw	r30, r28
    1aa6:	e8 0d       	add	r30, r8
    1aa8:	f1 1d       	adc	r31, r1
    1aaa:	80 81       	ld	r24, Z
    1aac:	80 33       	cpi	r24, 0x30	; 48
    1aae:	21 f4       	brne	.+8      	; 0x1ab8 <vfprintf+0x308>
    1ab0:	9a 2d       	mov	r25, r10
    1ab2:	99 7e       	andi	r25, 0xE9	; 233
    1ab4:	a9 2e       	mov	r10, r25
    1ab6:	09 c0       	rjmp	.+18     	; 0x1aca <vfprintf+0x31a>
    1ab8:	a2 fe       	sbrs	r10, 2
    1aba:	06 c0       	rjmp	.+12     	; 0x1ac8 <vfprintf+0x318>
    1abc:	b3 94       	inc	r11
    1abe:	b3 94       	inc	r11
    1ac0:	04 c0       	rjmp	.+8      	; 0x1aca <vfprintf+0x31a>
    1ac2:	8a 2d       	mov	r24, r10
    1ac4:	86 78       	andi	r24, 0x86	; 134
    1ac6:	09 f0       	breq	.+2      	; 0x1aca <vfprintf+0x31a>
    1ac8:	b3 94       	inc	r11
    1aca:	a3 fc       	sbrc	r10, 3
    1acc:	10 c0       	rjmp	.+32     	; 0x1aee <vfprintf+0x33e>
    1ace:	a0 fe       	sbrs	r10, 0
    1ad0:	06 c0       	rjmp	.+12     	; 0x1ade <vfprintf+0x32e>
    1ad2:	b2 14       	cp	r11, r2
    1ad4:	80 f4       	brcc	.+32     	; 0x1af6 <vfprintf+0x346>
    1ad6:	28 0c       	add	r2, r8
    1ad8:	92 2c       	mov	r9, r2
    1ada:	9b 18       	sub	r9, r11
    1adc:	0d c0       	rjmp	.+26     	; 0x1af8 <vfprintf+0x348>
    1ade:	b2 14       	cp	r11, r2
    1ae0:	58 f4       	brcc	.+22     	; 0x1af8 <vfprintf+0x348>
    1ae2:	b6 01       	movw	r22, r12
    1ae4:	80 e2       	ldi	r24, 0x20	; 32
    1ae6:	90 e0       	ldi	r25, 0x00	; 0
    1ae8:	76 d0       	rcall	.+236    	; 0x1bd6 <fputc>
    1aea:	b3 94       	inc	r11
    1aec:	f8 cf       	rjmp	.-16     	; 0x1ade <vfprintf+0x32e>
    1aee:	b2 14       	cp	r11, r2
    1af0:	18 f4       	brcc	.+6      	; 0x1af8 <vfprintf+0x348>
    1af2:	2b 18       	sub	r2, r11
    1af4:	02 c0       	rjmp	.+4      	; 0x1afa <vfprintf+0x34a>
    1af6:	98 2c       	mov	r9, r8
    1af8:	21 2c       	mov	r2, r1
    1afa:	a4 fe       	sbrs	r10, 4
    1afc:	0f c0       	rjmp	.+30     	; 0x1b1c <vfprintf+0x36c>
    1afe:	b6 01       	movw	r22, r12
    1b00:	80 e3       	ldi	r24, 0x30	; 48
    1b02:	90 e0       	ldi	r25, 0x00	; 0
    1b04:	68 d0       	rcall	.+208    	; 0x1bd6 <fputc>
    1b06:	a2 fe       	sbrs	r10, 2
    1b08:	16 c0       	rjmp	.+44     	; 0x1b36 <vfprintf+0x386>
    1b0a:	a1 fc       	sbrc	r10, 1
    1b0c:	03 c0       	rjmp	.+6      	; 0x1b14 <vfprintf+0x364>
    1b0e:	88 e7       	ldi	r24, 0x78	; 120
    1b10:	90 e0       	ldi	r25, 0x00	; 0
    1b12:	02 c0       	rjmp	.+4      	; 0x1b18 <vfprintf+0x368>
    1b14:	88 e5       	ldi	r24, 0x58	; 88
    1b16:	90 e0       	ldi	r25, 0x00	; 0
    1b18:	b6 01       	movw	r22, r12
    1b1a:	0c c0       	rjmp	.+24     	; 0x1b34 <vfprintf+0x384>
    1b1c:	8a 2d       	mov	r24, r10
    1b1e:	86 78       	andi	r24, 0x86	; 134
    1b20:	51 f0       	breq	.+20     	; 0x1b36 <vfprintf+0x386>
    1b22:	a1 fe       	sbrs	r10, 1
    1b24:	02 c0       	rjmp	.+4      	; 0x1b2a <vfprintf+0x37a>
    1b26:	8b e2       	ldi	r24, 0x2B	; 43
    1b28:	01 c0       	rjmp	.+2      	; 0x1b2c <vfprintf+0x37c>
    1b2a:	80 e2       	ldi	r24, 0x20	; 32
    1b2c:	a7 fc       	sbrc	r10, 7
    1b2e:	8d e2       	ldi	r24, 0x2D	; 45
    1b30:	b6 01       	movw	r22, r12
    1b32:	90 e0       	ldi	r25, 0x00	; 0
    1b34:	50 d0       	rcall	.+160    	; 0x1bd6 <fputc>
    1b36:	89 14       	cp	r8, r9
    1b38:	30 f4       	brcc	.+12     	; 0x1b46 <vfprintf+0x396>
    1b3a:	b6 01       	movw	r22, r12
    1b3c:	80 e3       	ldi	r24, 0x30	; 48
    1b3e:	90 e0       	ldi	r25, 0x00	; 0
    1b40:	4a d0       	rcall	.+148    	; 0x1bd6 <fputc>
    1b42:	9a 94       	dec	r9
    1b44:	f8 cf       	rjmp	.-16     	; 0x1b36 <vfprintf+0x386>
    1b46:	8a 94       	dec	r8
    1b48:	f3 01       	movw	r30, r6
    1b4a:	e8 0d       	add	r30, r8
    1b4c:	f1 1d       	adc	r31, r1
    1b4e:	80 81       	ld	r24, Z
    1b50:	b6 01       	movw	r22, r12
    1b52:	90 e0       	ldi	r25, 0x00	; 0
    1b54:	40 d0       	rcall	.+128    	; 0x1bd6 <fputc>
    1b56:	81 10       	cpse	r8, r1
    1b58:	f6 cf       	rjmp	.-20     	; 0x1b46 <vfprintf+0x396>
    1b5a:	22 20       	and	r2, r2
    1b5c:	09 f4       	brne	.+2      	; 0x1b60 <vfprintf+0x3b0>
    1b5e:	4e ce       	rjmp	.-868    	; 0x17fc <vfprintf+0x4c>
    1b60:	b6 01       	movw	r22, r12
    1b62:	80 e2       	ldi	r24, 0x20	; 32
    1b64:	90 e0       	ldi	r25, 0x00	; 0
    1b66:	37 d0       	rcall	.+110    	; 0x1bd6 <fputc>
    1b68:	2a 94       	dec	r2
    1b6a:	f7 cf       	rjmp	.-18     	; 0x1b5a <vfprintf+0x3aa>
    1b6c:	f6 01       	movw	r30, r12
    1b6e:	86 81       	ldd	r24, Z+6	; 0x06
    1b70:	97 81       	ldd	r25, Z+7	; 0x07
    1b72:	02 c0       	rjmp	.+4      	; 0x1b78 <vfprintf+0x3c8>
    1b74:	8f ef       	ldi	r24, 0xFF	; 255
    1b76:	9f ef       	ldi	r25, 0xFF	; 255
    1b78:	2b 96       	adiw	r28, 0x0b	; 11
    1b7a:	0f b6       	in	r0, 0x3f	; 63
    1b7c:	f8 94       	cli
    1b7e:	de bf       	out	0x3e, r29	; 62
    1b80:	0f be       	out	0x3f, r0	; 63
    1b82:	cd bf       	out	0x3d, r28	; 61
    1b84:	df 91       	pop	r29
    1b86:	cf 91       	pop	r28
    1b88:	1f 91       	pop	r17
    1b8a:	0f 91       	pop	r16
    1b8c:	ff 90       	pop	r15
    1b8e:	ef 90       	pop	r14
    1b90:	df 90       	pop	r13
    1b92:	cf 90       	pop	r12
    1b94:	bf 90       	pop	r11
    1b96:	af 90       	pop	r10
    1b98:	9f 90       	pop	r9
    1b9a:	8f 90       	pop	r8
    1b9c:	7f 90       	pop	r7
    1b9e:	6f 90       	pop	r6
    1ba0:	5f 90       	pop	r5
    1ba2:	4f 90       	pop	r4
    1ba4:	3f 90       	pop	r3
    1ba6:	2f 90       	pop	r2
    1ba8:	08 95       	ret

00001baa <strnlen_P>:
    1baa:	fc 01       	movw	r30, r24
    1bac:	05 90       	lpm	r0, Z+
    1bae:	61 50       	subi	r22, 0x01	; 1
    1bb0:	70 40       	sbci	r23, 0x00	; 0
    1bb2:	01 10       	cpse	r0, r1
    1bb4:	d8 f7       	brcc	.-10     	; 0x1bac <strnlen_P+0x2>
    1bb6:	80 95       	com	r24
    1bb8:	90 95       	com	r25
    1bba:	8e 0f       	add	r24, r30
    1bbc:	9f 1f       	adc	r25, r31
    1bbe:	08 95       	ret

00001bc0 <strnlen>:
    1bc0:	fc 01       	movw	r30, r24
    1bc2:	61 50       	subi	r22, 0x01	; 1
    1bc4:	70 40       	sbci	r23, 0x00	; 0
    1bc6:	01 90       	ld	r0, Z+
    1bc8:	01 10       	cpse	r0, r1
    1bca:	d8 f7       	brcc	.-10     	; 0x1bc2 <strnlen+0x2>
    1bcc:	80 95       	com	r24
    1bce:	90 95       	com	r25
    1bd0:	8e 0f       	add	r24, r30
    1bd2:	9f 1f       	adc	r25, r31
    1bd4:	08 95       	ret

00001bd6 <fputc>:
    1bd6:	0f 93       	push	r16
    1bd8:	1f 93       	push	r17
    1bda:	cf 93       	push	r28
    1bdc:	df 93       	push	r29
    1bde:	fb 01       	movw	r30, r22
    1be0:	23 81       	ldd	r18, Z+3	; 0x03
    1be2:	21 fd       	sbrc	r18, 1
    1be4:	03 c0       	rjmp	.+6      	; 0x1bec <fputc+0x16>
    1be6:	8f ef       	ldi	r24, 0xFF	; 255
    1be8:	9f ef       	ldi	r25, 0xFF	; 255
    1bea:	2c c0       	rjmp	.+88     	; 0x1c44 <fputc+0x6e>
    1bec:	22 ff       	sbrs	r18, 2
    1bee:	16 c0       	rjmp	.+44     	; 0x1c1c <fputc+0x46>
    1bf0:	46 81       	ldd	r20, Z+6	; 0x06
    1bf2:	57 81       	ldd	r21, Z+7	; 0x07
    1bf4:	24 81       	ldd	r18, Z+4	; 0x04
    1bf6:	35 81       	ldd	r19, Z+5	; 0x05
    1bf8:	42 17       	cp	r20, r18
    1bfa:	53 07       	cpc	r21, r19
    1bfc:	44 f4       	brge	.+16     	; 0x1c0e <fputc+0x38>
    1bfe:	a0 81       	ld	r26, Z
    1c00:	b1 81       	ldd	r27, Z+1	; 0x01
    1c02:	9d 01       	movw	r18, r26
    1c04:	2f 5f       	subi	r18, 0xFF	; 255
    1c06:	3f 4f       	sbci	r19, 0xFF	; 255
    1c08:	31 83       	std	Z+1, r19	; 0x01
    1c0a:	20 83       	st	Z, r18
    1c0c:	8c 93       	st	X, r24
    1c0e:	26 81       	ldd	r18, Z+6	; 0x06
    1c10:	37 81       	ldd	r19, Z+7	; 0x07
    1c12:	2f 5f       	subi	r18, 0xFF	; 255
    1c14:	3f 4f       	sbci	r19, 0xFF	; 255
    1c16:	37 83       	std	Z+7, r19	; 0x07
    1c18:	26 83       	std	Z+6, r18	; 0x06
    1c1a:	14 c0       	rjmp	.+40     	; 0x1c44 <fputc+0x6e>
    1c1c:	8b 01       	movw	r16, r22
    1c1e:	ec 01       	movw	r28, r24
    1c20:	fb 01       	movw	r30, r22
    1c22:	00 84       	ldd	r0, Z+8	; 0x08
    1c24:	f1 85       	ldd	r31, Z+9	; 0x09
    1c26:	e0 2d       	mov	r30, r0
    1c28:	09 95       	icall
    1c2a:	89 2b       	or	r24, r25
    1c2c:	e1 f6       	brne	.-72     	; 0x1be6 <fputc+0x10>
    1c2e:	d8 01       	movw	r26, r16
    1c30:	16 96       	adiw	r26, 0x06	; 6
    1c32:	8d 91       	ld	r24, X+
    1c34:	9c 91       	ld	r25, X
    1c36:	17 97       	sbiw	r26, 0x07	; 7
    1c38:	01 96       	adiw	r24, 0x01	; 1
    1c3a:	17 96       	adiw	r26, 0x07	; 7
    1c3c:	9c 93       	st	X, r25
    1c3e:	8e 93       	st	-X, r24
    1c40:	16 97       	sbiw	r26, 0x06	; 6
    1c42:	ce 01       	movw	r24, r28
    1c44:	df 91       	pop	r29
    1c46:	cf 91       	pop	r28
    1c48:	1f 91       	pop	r17
    1c4a:	0f 91       	pop	r16
    1c4c:	08 95       	ret

00001c4e <__ultoa_invert>:
    1c4e:	fa 01       	movw	r30, r20
    1c50:	aa 27       	eor	r26, r26
    1c52:	28 30       	cpi	r18, 0x08	; 8
    1c54:	51 f1       	breq	.+84     	; 0x1caa <__ultoa_invert+0x5c>
    1c56:	20 31       	cpi	r18, 0x10	; 16
    1c58:	81 f1       	breq	.+96     	; 0x1cba <__ultoa_invert+0x6c>
    1c5a:	e8 94       	clt
    1c5c:	6f 93       	push	r22
    1c5e:	6e 7f       	andi	r22, 0xFE	; 254
    1c60:	6e 5f       	subi	r22, 0xFE	; 254
    1c62:	7f 4f       	sbci	r23, 0xFF	; 255
    1c64:	8f 4f       	sbci	r24, 0xFF	; 255
    1c66:	9f 4f       	sbci	r25, 0xFF	; 255
    1c68:	af 4f       	sbci	r26, 0xFF	; 255
    1c6a:	b1 e0       	ldi	r27, 0x01	; 1
    1c6c:	3e d0       	rcall	.+124    	; 0x1cea <__ultoa_invert+0x9c>
    1c6e:	b4 e0       	ldi	r27, 0x04	; 4
    1c70:	3c d0       	rcall	.+120    	; 0x1cea <__ultoa_invert+0x9c>
    1c72:	67 0f       	add	r22, r23
    1c74:	78 1f       	adc	r23, r24
    1c76:	89 1f       	adc	r24, r25
    1c78:	9a 1f       	adc	r25, r26
    1c7a:	a1 1d       	adc	r26, r1
    1c7c:	68 0f       	add	r22, r24
    1c7e:	79 1f       	adc	r23, r25
    1c80:	8a 1f       	adc	r24, r26
    1c82:	91 1d       	adc	r25, r1
    1c84:	a1 1d       	adc	r26, r1
    1c86:	6a 0f       	add	r22, r26
    1c88:	71 1d       	adc	r23, r1
    1c8a:	81 1d       	adc	r24, r1
    1c8c:	91 1d       	adc	r25, r1
    1c8e:	a1 1d       	adc	r26, r1
    1c90:	20 d0       	rcall	.+64     	; 0x1cd2 <__ultoa_invert+0x84>
    1c92:	09 f4       	brne	.+2      	; 0x1c96 <__ultoa_invert+0x48>
    1c94:	68 94       	set
    1c96:	3f 91       	pop	r19
    1c98:	2a e0       	ldi	r18, 0x0A	; 10
    1c9a:	26 9f       	mul	r18, r22
    1c9c:	11 24       	eor	r1, r1
    1c9e:	30 19       	sub	r19, r0
    1ca0:	30 5d       	subi	r19, 0xD0	; 208
    1ca2:	31 93       	st	Z+, r19
    1ca4:	de f6       	brtc	.-74     	; 0x1c5c <__ultoa_invert+0xe>
    1ca6:	cf 01       	movw	r24, r30
    1ca8:	08 95       	ret
    1caa:	46 2f       	mov	r20, r22
    1cac:	47 70       	andi	r20, 0x07	; 7
    1cae:	40 5d       	subi	r20, 0xD0	; 208
    1cb0:	41 93       	st	Z+, r20
    1cb2:	b3 e0       	ldi	r27, 0x03	; 3
    1cb4:	0f d0       	rcall	.+30     	; 0x1cd4 <__ultoa_invert+0x86>
    1cb6:	c9 f7       	brne	.-14     	; 0x1caa <__ultoa_invert+0x5c>
    1cb8:	f6 cf       	rjmp	.-20     	; 0x1ca6 <__ultoa_invert+0x58>
    1cba:	46 2f       	mov	r20, r22
    1cbc:	4f 70       	andi	r20, 0x0F	; 15
    1cbe:	40 5d       	subi	r20, 0xD0	; 208
    1cc0:	4a 33       	cpi	r20, 0x3A	; 58
    1cc2:	18 f0       	brcs	.+6      	; 0x1cca <__ultoa_invert+0x7c>
    1cc4:	49 5d       	subi	r20, 0xD9	; 217
    1cc6:	31 fd       	sbrc	r19, 1
    1cc8:	40 52       	subi	r20, 0x20	; 32
    1cca:	41 93       	st	Z+, r20
    1ccc:	02 d0       	rcall	.+4      	; 0x1cd2 <__ultoa_invert+0x84>
    1cce:	a9 f7       	brne	.-22     	; 0x1cba <__ultoa_invert+0x6c>
    1cd0:	ea cf       	rjmp	.-44     	; 0x1ca6 <__ultoa_invert+0x58>
    1cd2:	b4 e0       	ldi	r27, 0x04	; 4
    1cd4:	a6 95       	lsr	r26
    1cd6:	97 95       	ror	r25
    1cd8:	87 95       	ror	r24
    1cda:	77 95       	ror	r23
    1cdc:	67 95       	ror	r22
    1cde:	ba 95       	dec	r27
    1ce0:	c9 f7       	brne	.-14     	; 0x1cd4 <__ultoa_invert+0x86>
    1ce2:	00 97       	sbiw	r24, 0x00	; 0
    1ce4:	61 05       	cpc	r22, r1
    1ce6:	71 05       	cpc	r23, r1
    1ce8:	08 95       	ret
    1cea:	9b 01       	movw	r18, r22
    1cec:	ac 01       	movw	r20, r24
    1cee:	0a 2e       	mov	r0, r26
    1cf0:	06 94       	lsr	r0
    1cf2:	57 95       	ror	r21
    1cf4:	47 95       	ror	r20
    1cf6:	37 95       	ror	r19
    1cf8:	27 95       	ror	r18
    1cfa:	ba 95       	dec	r27
    1cfc:	c9 f7       	brne	.-14     	; 0x1cf0 <__ultoa_invert+0xa2>
    1cfe:	62 0f       	add	r22, r18
    1d00:	73 1f       	adc	r23, r19
    1d02:	84 1f       	adc	r24, r20
    1d04:	95 1f       	adc	r25, r21
    1d06:	a0 1d       	adc	r26, r0
    1d08:	08 95       	ret

00001d0a <_exit>:
    1d0a:	f8 94       	cli

00001d0c <__stop_program>:
    1d0c:	ff cf       	rjmp	.-2      	; 0x1d0c <__stop_program>
